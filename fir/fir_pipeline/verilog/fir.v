// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir_fir,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.944500,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=346,HLS_SYN_LUT=385,HLS_VERSION=2024_2}" *)

module fir (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_ready;
wire    ap_block_pp0_stage0_subdone;
wire   [7:0] x;
wire   [19:0] y;
reg    y_ap_vld;
reg   [7:0] p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_14;
reg   [7:0] p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_13;
reg   [7:0] p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_12;
reg   [7:0] p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11;
reg   [7:0] p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_10;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_9;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_8;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_7;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_6;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_5;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_4;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_3;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_2;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_1;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661_pp0_iter1_reg;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_3_load_reg_668;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_2_load_reg_673;
wire   [11:0] acc_fu_235_p2;
reg   [11:0] acc_reg_679;
(* use_dsp48 = "no" *) wire   [13:0] add_ln22_9_fu_309_p2;
reg   [13:0] add_ln22_9_reg_694;
reg   [13:0] add_ln22_9_reg_694_pp0_iter1_reg;
wire   [13:0] add_ln22_12_fu_367_p2;
reg   [13:0] add_ln22_12_reg_699;
reg   [13:0] add_ln22_12_reg_699_pp0_iter2_reg;
reg   [7:0] fir_ap_int_8_ap_int_20_shift_reg_9_load_reg_704;
wire   [13:0] add_ln22_5_fu_591_p2;
reg   [13:0] add_ln22_5_reg_716;
(* use_dsp48 = "no" *) wire   [13:0] add_ln22_7_fu_597_p2;
reg   [13:0] add_ln22_7_reg_721;
wire   [14:0] add_ln22_13_fu_608_p2;
reg   [14:0] add_ln22_13_reg_726;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001;
wire   [8:0] shl_ln22_2_fu_189_p3;
wire   [9:0] shl_ln22_3_fu_201_p3;
wire   [10:0] shl_ln22_4_fu_213_p3;
wire  signed [10:0] sext_ln22_fu_197_p1;
wire  signed [10:0] sext_ln22_1_fu_209_p1;
wire   [10:0] add_ln22_fu_225_p2;
wire  signed [11:0] sext_ln22_3_fu_231_p1;
wire  signed [11:0] sext_ln22_2_fu_221_p1;
wire   [11:0] tmp_2_fu_241_p3;
wire   [8:0] tmp_3_fu_253_p3;
wire  signed [13:0] sext_ln22_6_fu_249_p1;
wire  signed [13:0] sext_ln22_9_fu_261_p1;
wire   [11:0] tmp_4_fu_271_p3;
wire   [9:0] tmp_5_fu_283_p3;
wire  signed [13:0] sext_ln22_10_fu_279_p1;
wire  signed [13:0] sext_ln22_12_fu_291_p1;
wire  signed [7:0] sext_ln22_7_fu_301_p0;
wire  signed [7:0] sext_ln22_8_fu_305_p0;
wire   [13:0] add_ln22_14_fu_295_p2;
wire   [13:0] add_ln22_3_fu_265_p2;
wire   [11:0] tmp_fu_318_p3;
wire   [9:0] tmp_1_fu_329_p3;
wire  signed [12:0] sext_ln22_4_fu_325_p1;
wire  signed [12:0] sext_ln22_5_fu_336_p1;
wire   [11:0] shl_ln_fu_346_p3;
wire   [12:0] sub_ln22_fu_340_p2;
wire  signed [12:0] sext_ln16_fu_315_p1;
wire   [12:0] add_ln22_11_fu_357_p2;
wire  signed [13:0] sext_ln22_22_fu_363_p1;
wire  signed [13:0] sext_ln16_1_fu_353_p1;
wire   [11:0] tmp_6_fu_382_p3;
wire   [9:0] tmp_7_fu_393_p3;
wire  signed [13:0] sext_ln22_25_fu_389_p1;
wire  signed [13:0] sext_ln22_26_fu_400_p1;
wire   [11:0] tmp_8_fu_459_p3;
wire   [8:0] tmp_9_fu_470_p3;
wire  signed [13:0] sext_ln22_27_fu_466_p1;
wire  signed [13:0] sext_ln22_28_fu_477_p1;
wire   [11:0] shl_ln22_1_fu_487_p3;
wire   [11:0] tmp_10_fu_499_p3;
wire   [9:0] tmp_11_fu_511_p3;
wire  signed [12:0] sext_ln22_29_fu_507_p1;
wire  signed [12:0] sext_ln22_30_fu_519_p1;
wire   [10:0] shl_ln22_5_fu_529_p3;
wire   [9:0] shl_ln22_6_fu_541_p3;
wire   [8:0] shl_ln22_7_fu_553_p3;
wire  signed [11:0] sext_ln22_15_fu_561_p1;
wire  signed [11:0] sext_ln22_13_fu_537_p1;
wire   [11:0] add_ln22_2_fu_565_p2;
wire  signed [11:0] sext_ln22_14_fu_549_p1;
wire   [11:0] acc_3_fu_571_p2;
wire   [12:0] sub_ln22_1_fu_523_p2;
wire  signed [12:0] sext_ln22_11_fu_495_p1;
wire   [12:0] add_ln22_4_fu_581_p2;
wire  signed [13:0] sext_ln22_17_fu_587_p1;
wire  signed [13:0] sext_ln22_16_fu_577_p1;
wire  signed [13:0] grp_fu_652_p3;
wire   [13:0] add_ln22_16_fu_481_p2;
wire  signed [13:0] grp_fu_644_p3;
wire  signed [14:0] sext_ln22_23_fu_605_p1;
wire  signed [14:0] sext_ln22_21_fu_602_p1;
wire  signed [14:0] sext_ln22_19_fu_617_p1;
wire  signed [14:0] sext_ln22_18_fu_614_p1;
wire   [14:0] add_ln22_8_fu_620_p2;
wire  signed [15:0] sext_ln22_24_fu_630_p1;
wire  signed [15:0] sext_ln22_20_fu_626_p1;
wire   [15:0] acc_2_fu_633_p2;
wire   [4:0] grp_fu_644_p1;
wire   [4:0] grp_fu_652_p1;
wire  signed [12:0] grp_fu_652_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire  signed [13:0] grp_fu_652_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_14 = 8'd0;
#0 p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_13 = 8'd0;
#0 p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_12 = 8'd0;
#0 p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11 = 8'd0;
#0 p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_10 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_9 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_8 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_7 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_6 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_5 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_4 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_3 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_2 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg_1 = 8'd0;
#0 fir_ap_int_8_ap_int_20_shift_reg = 8'd0;
end

fir_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .x(x),
    .y(y),
    .y_ap_vld(y_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

fir_mac_muladd_8s_5ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_8s_5ns_14ns_14_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln22_7_fu_301_p0),
    .din1(grp_fu_644_p1),
    .din2(add_ln22_9_reg_694_pp0_iter1_reg),
    .ce(1'b1),
    .dout(grp_fu_644_p3)
);

fir_mac_muladd_8s_5ns_13s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mac_muladd_8s_5ns_13s_14_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sext_ln22_8_fu_305_p0),
    .din1(grp_fu_652_p1),
    .din2(grp_fu_652_p2),
    .ce(1'b1),
    .dout(grp_fu_652_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_reg_679[11 : 1] <= acc_fu_235_p2[11 : 1];
        add_ln22_12_reg_699[13 : 1] <= add_ln22_12_fu_367_p2[13 : 1];
        add_ln22_9_reg_694[13 : 1] <= add_ln22_9_fu_309_p2[13 : 1];
        add_ln22_9_reg_694_pp0_iter1_reg[13 : 1] <= add_ln22_9_reg_694[13 : 1];
        fir_ap_int_8_ap_int_20_shift_reg_2_load_reg_673 <= fir_ap_int_8_ap_int_20_shift_reg_2;
        fir_ap_int_8_ap_int_20_shift_reg_3_load_reg_668 <= fir_ap_int_8_ap_int_20_shift_reg_3;
        fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661 <= fir_ap_int_8_ap_int_20_shift_reg_8;
        fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661_pp0_iter1_reg <= fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln22_12_reg_699_pp0_iter2_reg[13 : 1] <= add_ln22_12_reg_699[13 : 1];
        add_ln22_13_reg_726 <= add_ln22_13_fu_608_p2;
        add_ln22_5_reg_716[13 : 1] <= add_ln22_5_fu_591_p2[13 : 1];
        add_ln22_7_reg_721 <= add_ln22_7_fu_597_p2;
        fir_ap_int_8_ap_int_20_shift_reg_9_load_reg_704 <= fir_ap_int_8_ap_int_20_shift_reg_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fir_ap_int_8_ap_int_20_shift_reg <= x;
        fir_ap_int_8_ap_int_20_shift_reg_1 <= fir_ap_int_8_ap_int_20_shift_reg;
        fir_ap_int_8_ap_int_20_shift_reg_2 <= fir_ap_int_8_ap_int_20_shift_reg_1;
        fir_ap_int_8_ap_int_20_shift_reg_3 <= fir_ap_int_8_ap_int_20_shift_reg_2;
        fir_ap_int_8_ap_int_20_shift_reg_4 <= fir_ap_int_8_ap_int_20_shift_reg_3;
        fir_ap_int_8_ap_int_20_shift_reg_5 <= fir_ap_int_8_ap_int_20_shift_reg_4;
        fir_ap_int_8_ap_int_20_shift_reg_6 <= fir_ap_int_8_ap_int_20_shift_reg_5;
        fir_ap_int_8_ap_int_20_shift_reg_7 <= fir_ap_int_8_ap_int_20_shift_reg_6;
        fir_ap_int_8_ap_int_20_shift_reg_8 <= fir_ap_int_8_ap_int_20_shift_reg_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fir_ap_int_8_ap_int_20_shift_reg_9 <= fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_10 <= fir_ap_int_8_ap_int_20_shift_reg_9_load_reg_704;
        p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11 <= p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_10;
        p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_12 <= p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11;
        p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_13 <= p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_12;
        p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_14 <= p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_13;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_2_fu_633_p2 = ($signed(sext_ln22_24_fu_630_p1) + $signed(sext_ln22_20_fu_626_p1));

assign acc_3_fu_571_p2 = ($signed(add_ln22_2_fu_565_p2) + $signed(sext_ln22_14_fu_549_p1));

assign acc_fu_235_p2 = ($signed(sext_ln22_3_fu_231_p1) + $signed(sext_ln22_2_fu_221_p1));

assign add_ln22_11_fu_357_p2 = ($signed(sub_ln22_fu_340_p2) + $signed(sext_ln16_fu_315_p1));

assign add_ln22_12_fu_367_p2 = ($signed(sext_ln22_22_fu_363_p1) + $signed(sext_ln16_1_fu_353_p1));

assign add_ln22_13_fu_608_p2 = ($signed(sext_ln22_23_fu_605_p1) + $signed(sext_ln22_21_fu_602_p1));

assign add_ln22_14_fu_295_p2 = ($signed(sext_ln22_10_fu_279_p1) + $signed(sext_ln22_12_fu_291_p1));

assign add_ln22_16_fu_481_p2 = ($signed(sext_ln22_27_fu_466_p1) + $signed(sext_ln22_28_fu_477_p1));

assign add_ln22_2_fu_565_p2 = ($signed(sext_ln22_15_fu_561_p1) + $signed(sext_ln22_13_fu_537_p1));

assign add_ln22_3_fu_265_p2 = ($signed(sext_ln22_6_fu_249_p1) + $signed(sext_ln22_9_fu_261_p1));

assign add_ln22_4_fu_581_p2 = ($signed(sub_ln22_1_fu_523_p2) + $signed(sext_ln22_11_fu_495_p1));

assign add_ln22_5_fu_591_p2 = ($signed(sext_ln22_17_fu_587_p1) + $signed(sext_ln22_16_fu_577_p1));

assign add_ln22_7_fu_597_p2 = ($signed(grp_fu_652_p3) + $signed(add_ln22_16_fu_481_p2));

assign add_ln22_8_fu_620_p2 = ($signed(sext_ln22_19_fu_617_p1) + $signed(sext_ln22_18_fu_614_p1));

assign add_ln22_9_fu_309_p2 = (add_ln22_14_fu_295_p2 + add_ln22_3_fu_265_p2);

assign add_ln22_fu_225_p2 = ($signed(sext_ln22_fu_197_p1) + $signed(sext_ln22_1_fu_209_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_644_p1 = 14'd22;

assign grp_fu_652_p1 = 14'd22;

assign grp_fu_652_p2 = grp_fu_652_p20;

assign grp_fu_652_p20 = ($signed(sext_ln22_25_fu_389_p1) + $signed(sext_ln22_26_fu_400_p1));

assign sext_ln16_1_fu_353_p1 = $signed(shl_ln_fu_346_p3);

assign sext_ln16_fu_315_p1 = $signed(acc_reg_679);

assign sext_ln22_10_fu_279_p1 = $signed(tmp_4_fu_271_p3);

assign sext_ln22_11_fu_495_p1 = $signed(shl_ln22_1_fu_487_p3);

assign sext_ln22_12_fu_291_p1 = $signed(tmp_5_fu_283_p3);

assign sext_ln22_13_fu_537_p1 = $signed(shl_ln22_5_fu_529_p3);

assign sext_ln22_14_fu_549_p1 = $signed(shl_ln22_6_fu_541_p3);

assign sext_ln22_15_fu_561_p1 = $signed(shl_ln22_7_fu_553_p3);

assign sext_ln22_16_fu_577_p1 = $signed(acc_3_fu_571_p2);

assign sext_ln22_17_fu_587_p1 = $signed(add_ln22_4_fu_581_p2);

assign sext_ln22_18_fu_614_p1 = $signed(add_ln22_5_reg_716);

assign sext_ln22_19_fu_617_p1 = $signed(add_ln22_7_reg_721);

assign sext_ln22_1_fu_209_p1 = $signed(shl_ln22_3_fu_201_p3);

assign sext_ln22_20_fu_626_p1 = $signed(add_ln22_8_fu_620_p2);

assign sext_ln22_21_fu_602_p1 = grp_fu_644_p3;

assign sext_ln22_22_fu_363_p1 = $signed(add_ln22_11_fu_357_p2);

assign sext_ln22_23_fu_605_p1 = $signed(add_ln22_12_reg_699_pp0_iter2_reg);

assign sext_ln22_24_fu_630_p1 = $signed(add_ln22_13_reg_726);

assign sext_ln22_25_fu_389_p1 = $signed(tmp_6_fu_382_p3);

assign sext_ln22_26_fu_400_p1 = $signed(tmp_7_fu_393_p3);

assign sext_ln22_27_fu_466_p1 = $signed(tmp_8_fu_459_p3);

assign sext_ln22_28_fu_477_p1 = $signed(tmp_9_fu_470_p3);

assign sext_ln22_29_fu_507_p1 = $signed(tmp_10_fu_499_p3);

assign sext_ln22_2_fu_221_p1 = $signed(shl_ln22_4_fu_213_p3);

assign sext_ln22_30_fu_519_p1 = $signed(tmp_11_fu_511_p3);

assign sext_ln22_3_fu_231_p1 = $signed(add_ln22_fu_225_p2);

assign sext_ln22_4_fu_325_p1 = $signed(tmp_fu_318_p3);

assign sext_ln22_5_fu_336_p1 = $signed(tmp_1_fu_329_p3);

assign sext_ln22_6_fu_249_p1 = $signed(tmp_2_fu_241_p3);

assign sext_ln22_7_fu_301_p0 = fir_ap_int_8_ap_int_20_shift_reg_6;

assign sext_ln22_8_fu_305_p0 = fir_ap_int_8_ap_int_20_shift_reg_7;

assign sext_ln22_9_fu_261_p1 = $signed(tmp_3_fu_253_p3);

assign sext_ln22_fu_197_p1 = $signed(shl_ln22_2_fu_189_p3);

assign shl_ln22_1_fu_487_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_10}, {4'd0}};

assign shl_ln22_2_fu_189_p3 = {{x}, {1'd0}};

assign shl_ln22_3_fu_201_p3 = {{fir_ap_int_8_ap_int_20_shift_reg}, {2'd0}};

assign shl_ln22_4_fu_213_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_1}, {3'd0}};

assign shl_ln22_5_fu_529_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_12}, {3'd0}};

assign shl_ln22_6_fu_541_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_13}, {2'd0}};

assign shl_ln22_7_fu_553_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_14}, {1'd0}};

assign shl_ln_fu_346_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_3_load_reg_668}, {4'd0}};

assign sub_ln22_1_fu_523_p2 = ($signed(sext_ln22_29_fu_507_p1) - $signed(sext_ln22_30_fu_519_p1));

assign sub_ln22_fu_340_p2 = ($signed(sext_ln22_4_fu_325_p1) - $signed(sext_ln22_5_fu_336_p1));

assign tmp_10_fu_499_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11}, {4'd0}};

assign tmp_11_fu_511_p3 = {{p_ZZ3fir6ap_intILi8EEPS_ILi20EEE9shift_reg_11}, {2'd0}};

assign tmp_1_fu_329_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_2_load_reg_673}, {2'd0}};

assign tmp_2_fu_241_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_4}, {4'd0}};

assign tmp_3_fu_253_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_4}, {1'd0}};

assign tmp_4_fu_271_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_5}, {4'd0}};

assign tmp_5_fu_283_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_5}, {2'd0}};

assign tmp_6_fu_382_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661_pp0_iter1_reg}, {4'd0}};

assign tmp_7_fu_393_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_8_load_reg_661_pp0_iter1_reg}, {2'd0}};

assign tmp_8_fu_459_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_9_load_reg_704}, {4'd0}};

assign tmp_9_fu_470_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_9_load_reg_704}, {1'd0}};

assign tmp_fu_318_p3 = {{fir_ap_int_8_ap_int_20_shift_reg_2_load_reg_673}, {4'd0}};

assign y = $signed(acc_2_fu_633_p2);

always @ (posedge ap_clk) begin
    acc_reg_679[0] <= 1'b0;
    add_ln22_9_reg_694[0] <= 1'b0;
    add_ln22_9_reg_694_pp0_iter1_reg[0] <= 1'b0;
    add_ln22_12_reg_699[0] <= 1'b0;
    add_ln22_12_reg_699_pp0_iter2_reg[0] <= 1'b0;
    add_ln22_5_reg_716[0] <= 1'b0;
end

endmodule //fir
