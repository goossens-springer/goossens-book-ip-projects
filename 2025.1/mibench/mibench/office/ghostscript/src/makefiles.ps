%!PS-Adobe-1.0
%%Creator: SunOS:leec (Chunho Lee)
%%Title: gs.mak
%%CreationDate: Tue Jun 10 14:53:00 1997
%%DocumentFonts: Courier-Bold Courier Times-Roman Times-Bold Helvetica-Bold
% Start of enscript.pro -- prolog for text file translator
% Copyright (c) 1984,1985,1987 Adobe Systems Incorporated. All Rights Reserved. 
% GOVERNMENT END USERS: See Notice file in TranScript library directory
% -- probably /usr/lib/ps/Notice
% RCSID: $Header: /home/mguthaus/.cvsroot/mibench/office/ghostscript/src/makefiles.ps,v 1.1.1.1 2000/11/06 19:53:50 mguthaus Exp $
save/EnscriptJob exch def
/StartEnscriptDoc{$enscript begin}def
/$enscript 50 dict def $enscript begin
/EndEnscriptDoc{end}def
/S/show load def
/X{exch 0 rmoveto S}def
/Y{exch 0 exch rmoveto S}def
/B{3 1 roll moveto S}def
/F{$fd exch get setfont}def
/StartPage{/svpg save def .05 dup scale}def
/EndPage{svpg restore showpage}def
/DoPreFeed{/statusdict where{pop
 statusdict/prefeed known{statusdict exch/prefeed exch put 0}if}if pop}def
/Landscape{90 rotate 0 -15840 translate}def
/SetUpFonts
 {dup/$fd exch array def{findfont exch scalefont $fd 3 1 roll put}repeat}def
/InitGaudy{/TwoColumn exch def /BarLength exch def
 /ftD /Times-Bold findfont 12 UP scalefont def
 /ftF /Times-Roman findfont 14 UP scalefont def
 /ftP /Helvetica-Bold findfont 30 UP scalefont def}def
/U{1440 mul}def
/UP{U 72 div}def
/LB{/pts exch UP def /charcolor exch def /boxcolor exch def /font exch def
 /label exch def /dy exch def /dx exch def /lly exch def /llx exch def
 gsave boxcolor setgray
 llx lly moveto dx 0 rlineto 0 dy rlineto dx neg 0 rlineto closepath fill
 /lines label length def
 /yp lly dy add dy lines pts mul sub 2 div sub pts .85 mul sub def
 font setfont charcolor setgray
 label {dup stringwidth pop 2 div llx dx 2 div add exch sub yp moveto show
   /yp yp pts sub def}forall grestore}def
/Gaudy{/Page exch def /Date exch def /File exch def /Comment exch def
 .25 U 10.2 U BarLength .1 sub U .25 U [File] ftF .97 0 14 LB
 .25 U 10.45 U BarLength .1 sub U .25 U [Comment] ftF 1 0 14 LB
 .25 U 10.2 U 1 U .5 U Date ftD .7 0 12 LB
 BarLength .75 sub U 10.2 U 1 U .5 U [Page] ftP .7 1 30 LB
 TwoColumn{BarLength 2 div .19 add U 10.2 U moveto 0 -10 U rlineto stroke}if
}def
end
StartEnscriptDoc % end fixed prolog
1 200 /Courier-Bold
0 140 /Courier
2 SetUpFonts
10.55 true InitGaudy
%%EndProlog
%%Page: ? 1
StartPage
Landscape
()(gs.mak)[(97/06/06)(10:57:23)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1989, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# Generic makefile, common to all platforms.)B
360 11590(# The platform-specific makefiles `include' this file.)B
360 11430(# They define the following symbols:)B
360 11270(#)B
588(GS - the name of the executable \(without the extension, if any\).)X
360 11110(#)B
588(GS_LIB_DEFAULT - the default directory/ies for searching for the)X
360 10950(#)B
924(initialization and font files at run time.)X
360 10790(#)B
588(SEARCH_HERE_FIRST - the default setting of -P \(whether or not to)X
360 10630(#)B
924(look for files in the current directory first\).)X
360 10470(#)B
588(GS_DOCDIR - the directory where documentation will be available)X
360 10310(#)B
924(at run time.)X
360 10150(#)B
588(JSRCDIR - the directory where the IJG JPEG library source code)X
360 9990(#)B
924(is stored \(at compilation time\).)X
360 9830(#)B
588(JVERSION - the major version number of the IJG JPEG library.)X
360 9670(#)B
588(PSRCDIR, PVERSION - the same for libpng.)X
360 9510(#)B
588(ZSRCDIR - the same for zlib.)X
360 9350(#)B
588(SHARE_LIBPNG - normally 0; if set to 1, asks the linker to use)X
360 9190(#)B
924(an existing compiled libpng \(-lpng\) instead of compiling and)X
360 9030(#)B
924(linking libpng explicitly.)X
360 8870(#)B
588(LIBPNG_NAME, the name of the shared libpng, currently always)X
360 8710(#)B
924(png \(libpng, -lpng\).)X
360 8550(#)B
588(SHARE_ZLIB - normally 0; if set to 1, asks the linker to use)X
360 8390(#)B
924(an existing compiled zlib \(-lgz or -lz\) instead of compiling)X
360 8230(#)B
924(and linking libgz/libz explicitly.)X
360 8070(#)B
588(ZLIB_NAME - the name of the shared zlib, either gz \(for libgz, -lgz\))X
360 7910(#)B
924(or z \(for libz, -lz\).)X
360 7750(#)B
588(CONFIG - a configuration ID, added at the request of a customer,)X
360 7590(#)B
924(that is supposed to help in maintaining multiple variants in)X
360 7430(#)B
924(a single directory.  Normally this is an empty string;)X
360 7270(#)B
924(it may be any string that is legal as part of a file name.)X
360 7110(#)B
588(DEVICE_DEVS - the devices to include in the executable.)X
360 6950(#)B
924(See devs.mak for details.)X
360 6790(#)B
588(DEVICE_DEVS1...DEVICE_DEVS15 - additional devices, if the definition)X
360 6630(#)B
924(of DEVICE_DEVS doesn't fit on one line.  See devs.mak for details.)X
360 6470(#)B
588(FEATURE_DEVS - what features to include in the executable.)X
360 6310(#)B
924(Normally this is one of:)X
360 6150(#)B
1596(level1 - a standard PostScript Level 1 language)X
360 5990(#)B
1932(interpreter.)X
360 5830(#)B
1596(level2 - a standard PostScript Level 2 language)X
360 5670(#)B
1932(interpreter.)X
360 5510(#)B
1596(pdf - a PDF-capable interpreter.)X
360 5350(#)B
924(You may include both level1 and pdf, or both level2 and pdf.)X
360 5190(#)B
924(The following feature may be added to either of the standard)X
360 5030(#)B
1260(configurations:)X
360 4870(#)B
1596(ccfonts - precompile fonts into C, and link them)X
360 4710(#)B
1932(with the executable.  See fonts.txt for details.)X
360 4550(#)B
924(The remaining features are of interest primarily to developers)X
360 4390(#)B
1260(who want to "mix and match" features to create custom)X
7920 14470(#)B
1260(configurations:)X
7920 14310(#)B
1596(dps - \(partial\) support for Display PostScript extensions:)X
7920 14150(#)B
1932(see language.txt for details.)X
7920 13990(#)B
1596(btoken - support for binary token encodings.)X
7920 13830(#)B
1932(Included automatically in the dps and level2 features.)X
7920 13670(#)B
1596(cidfont - \(currently partial\) support for CID-keyed fonts.)X
7920 13510(#)B
1596(color - support for the Level 1 CMYK color extensions.)X
7920 13350(#)B
1932(Included automatically in the dps and level2 features.)X
7920 13190(#)B
1596(compfont - support for composite \(type 0\) fonts.)X
7920 13030(#)B
1932(Included automatically in the level2 feature.)X
7920 12870(#)B
1596(dct - support for DCTEncode/Decode filters.)X
7920 12710(#)B
1932(Included automatically in the level2 feature.)X
7920 12550(#)B
1596(epsf - support for recognizing and skipping the binary)X
7920 12390(#)B
1932(header of MS-DOS EPSF files.)X
7920 12230(#)B
1596(filter - support for Level 2 filters \(other than eexec,)X
7920 12070(#)B
1932(ASCIIHexEncode/Decode, NullEncode, PFBDecode,)X
7920 11910(#)B
1932(RunLengthEncode/Decode, and SubFileDecode, which are)X
7920 11750(#)B
1932(always included, and DCTEncode/Decode,)X
7920 11590(#)B
1932(which are separate\).)X
7920 11430(#)B
1932(Included automatically in the level2 feature.)X
7920 11270(#)B
1596(fzlib - support for zlibEncode/Decode filters.)X
7920 11110(#)B
1596(ttfont - support for TrueType fonts.)X
7920 10950(#)B
1596(type1 - support for Type 1 fonts and eexec;)X
7920 10790(#)B
1932(normally included automatically in all configurations.)X
7920 10630(#)B
1596(type42 - support for Type 42 \(embedded TrueType\) fonts.)X
7920 10470(#)B
1932(Included automatically in the level2 feature.)X
7920 10310(#)B
1260(There are quite a number of other sub-features that can be)X
7920 10150(#)B
1260(selectively included in or excluded from a configuration,)X
7920 9990(#)B
1260(but the above are the ones that are most likely to be of)X
7920 9830(#)B
1260(interest.)X
7920 9670(#)B
588(COMPILE_INITS - normally 0; if set to 1, compiles the PostScript)X
7920 9510(#)B
924(language initialization files \(gs_init.ps et al\) into the)X
7920 9350(#)B
924(executable, eliminating the need for these files to be present)X
7920 9190(#)B
924(at run time.)X
7920 9030(#)B
588(BAND_LIST_STORAGE - normally file; if set to memory, stores band)X
7920 8870(#)B
924(lists in memory \(with compression if needed\).)X
7920 8710(#)B
588(BAND_LIST_COMPRESSOR - normally zlib: selects the compression method)X
7920 8550(#)B
924(to use for band lists in memory.)X
7920 8390(#)B
588(FILE_IMPLEMENTATION - normally stdio; if set to fd, uses file)X
7920 8230(#)B
924(descriptors instead of buffered stdio for file I/O; if set to)X
7920 8070(#)B
924(both, provides both implementations with different procedure)X
7920 7910(#)B
924(names for the fd-based implementation \(see sfilefd.c for)X
7920 7750(#)B
924(more information\).)X
7920 7590(#)B
588(EXTEND_NAMES - a value N between 0 and 6, indicating that the name)X
7920 7430(#)B
924(table should have a capacity of 2^\(16+N\) names.  This normally)X
7920 7270(#)B
924(should be set to 0 \(or left undefined\), since non-zero values)X
7920 7110(#)B
924(result in a larger fixed space overhead and slightly slower code.)X
7920 6950(#)B
924(EXTEND_NAMES is ignored in 16-bit environments.)X
7920 6790(#)B
7920 6630(# It is very unlikely that anyone would want to edit the remaining)B
7920 6470(#   symbols, but we describe them here for completeness:)B
7920 6310(#)B
588(GS_INIT - the name of the initialization file for the interpreter,)X
7920 6150(#)B
1260(normally gs_init.ps.)X
7920 5990(#)B
588(PLATFORM - a "device" name for the platform, so that platforms can)X
7920 5830(#)B
1260(add various kinds of resources like devices and features.)X
7920 5670(#)B
588(CMD - the suffix for shell command files \(e.g., null or .bat\).)X
7920 5510(#)B
1260(\(This is only needed in a few places.\))X
7920 5350(#)B
588(D - the directory separator character \(\\ for MS-DOS, / for Unix\).)X
7920 5190(#)B
588(O - the string for specifying the output file from the C compiler)X
7920 5030(#)B
1260(\(-o for MS-DOS, -o ./ for Unix\).)X
7920 4870(#)B
588(OBJ - the extension for relocatable object files \(e.g., o or obj\).)X
7920 4710(#)B
588(XE - the extension for executable files \(e.g., null or .exe\).)X
7920 4550(#)B
588(XEAUX - the extension for the executable files \(e.g., null or .exe\))X
7920 4390(#)B
1260(for the utility programs \(ansi2knr and those compiled with)X
EndPage
%%Page: ? 2
StartPage
Landscape
()(gs.mak)[(97/06/06)(10:57:23)](2)Gaudy
0 F
360 14470(#)B
1260(CCAUX\).)X
360 14310(#)B
588(BEGINFILES - the list of files that `make begin' and `make clean')X
360 14150(#)B
1260(should delete.)X
360 13990(#)B
588(CCA2K - the C invocation for the ansi2knr program, which is the only)X
360 13830(#)B
1260(one that doesn't use ANSI C syntax.  \(It is only needed if)X
360 13670(#)B
1260(the main C compiler also isn't an ANSI compiler.\))X
360 13510(#)B
588(CCAUX - the C invocation for auxiliary programs \(echogs, genarch,)X
360 13350(#)B
1260(genconf, geninit\).)X
360 13190(#)B
588(CCBEGIN - the compilation command for `make begin', normally)X
360 13030(#)B
1260($\(CCC\) *.c.)X
360 12870(#)B
588(CCC - the C invocation for normal compilation.)X
360 12710(#)B
588(CCD - the C invocation for files that store into frame buffers or)X
360 12550(#)B
1260(device registers.  Needed because some optimizing compilers)X
360 12390(#)B
1260(will eliminate necessary stores.)X
360 12230(#)B
588(CCCF - the C invocation for compiled fonts and other large,)X
360 12070(#)B
1260(self-contained data modules.  Needed because MS-DOS)X
360 11910(#)B
1260(requires using the 'huge' memory model for these.)X
360 11750(#)B
588(CCINT - the C invocation for compiling the main interpreter module,)X
360 11590(#)B
1260(normally the same as CCC: this is needed because the)X
360 11430(#)B
1260(Borland compiler generates *worse* code for this module)X
360 11270(#)B
1260(\(but only this module\) when optimization \(-O\) is turned on.)X
360 11110(#)B
588(CCLEAF - the C invocation for compiling modules that contain only)X
360 10950(#)B
1260(leaf procedures, which don't need to build stack frames.)X
360 10790(#)B
1260(This is needed only because many compilers aren't able to)X
360 10630(#)B
1260(recognize leaf procedures on their own.)X
360 10470(#)B
588(AK - if source files must be converted from ANSI to K&R syntax,)X
360 10310(#)B
1260(this is $\(ANSI2KNR_XE\); if not, it is null.)X
360 10150(#)B
1260(If a particular platform requires other utility programs)X
360 9990(#)B
1260(to be built, AK must include them too.)X
360 9830(#)B
588(SHP - the prefix for invoking a shell script in the current directory)X
360 9670(#)B
1260(\(null for MS-DOS, $\(SH\) ./ for Unix\).)X
360 9510(#)B
588(EXPP, EXP - the prefix for invoking an executable program in the)X
360 9350(#)B
1260(current directory \(null for MS-DOS, ./ for Unix\).)X
360 9190(#)B
588(SH - the shell for scripts \(null on MS-DOS, sh on Unix\).)X
360 9030(#)B
588(CONFILES - the arguments for genconf to generate the appropriate)X
360 8870(#)B
1260(linker control files \(various\).)X
360 8710(#)B
588(CP_ - the command for copying one file to another.  Because of)X
360 8550(#)B
1260(limitations in the MS-DOS/MS Windows environment, the)X
360 8390(#)B
1260(second argument must either be '.' \(in which case the)X
360 8230(#)B
1260(write date may be either preserved or set to the current)X
360 8070(#)B
1260(date\) or a file name \(in which case the write date is)X
360 7910(#)B
1260(always updated\).)X
360 7750(#)B
588(RM_ - the command for deleting \(a\) file\(s\) \(including wild cards,)X
360 7590(#)B
1260(but limited to a single file or pattern\).)X
360 7430(#)B
588(RMN_ = the command for deleting multiple files / patterns.)X
360 7270(#)B
360 7110(# The platform-specific makefiles must also include rules for creating)B
360 6950(# certain dynamically generated files:)B
360 6790(#)B
588(gconfig_.h - this indicates the presence or absence of)X
360 6630(#)B
924(certain system header files that are located in different)X
360 6470(#)B
924(places on different systems.  \(It could be generated by)X
360 6310(#)B
924(the GNU `configure' program.\))X
360 6150(#)B
588(gconfigv.h - this indicates the status of certain machine-)X
360 5990(#)B
924(and configuration-specific features derived from definitions)X
360 5830(#)B
924(in the platform-specific makefile.)X
360 5510(# Define the name of this makefile.)B
360 5350(GS_MAK=gs.mak)B
360 5030(# Define the names of the executables.)B
360 4870(GS_XE=$\(GS\)$\(XE\))B
360 4710(ANSI2KNR_XE=ansi2knr$\(XEAUX\))B
360 4550(ECHOGS_XE=echogs$\(XEAUX\))B
360 4390(GENARCH_XE=genarch$\(XEAUX\))B
7920 14470(GENCONF_XE=genconf$\(XEAUX\))B
7920 14310(GENINIT_XE=geninit$\(XEAUX\))B
7920 13990(# Define the names of the CONFIG-dependent header files.)B
7920 13830(# gconfig*.h and gconfx*.h are generated dynamically.)B
7920 13670(gconfig_h=gconfxx$\(CONFIG\).h)B
7920 13510(gconfigf_h=gconfxc$\(CONFIG\).h)B
7920 13190(# Watcom make insists that rules have a non-empty body!)B
7920 13030(all default: $\(GS_XE\))B
8592 12870($\(RM_\) _temp_*)B
7920 12550(distclean maintainer-clean realclean: clean)B
8592 12390($\(RM_\) makefile)B
7920 12070(clean: mostlyclean)B
8592 11910($\(RM_\) arch.h)B
8592 11750($\(RM_\) $\(GS_XE\))B
7920 11430(mostlyclean:)B
8592 11270($\(RMN_\) *.$\(OBJ\) *.a core gmon.out)B
8592 11110($\(RMN_\) *.dev *.d_* devs*.tr gconfig*.h gconfx*.h j*.h o*.tr l*.tr)B
8592 10950($\(RMN_\) deflate.h zutil.h)B
8592 10790($\(RMN_\) gconfig*.c gscdefs*.c iconfig*.c)B
8592 10630($\(RMN_\) _temp_* _temp_*.* *.map *.sym)B
8592 10470($\(RMN_\) $\(ANSI2KNR_XE\) $\(ECHOGS_XE\) $\(GENARCH_XE\) $\(GENCONF_XE\) $\(GENINIT_XE\))B
8592 10310($\(RMN_\) gs_init.c $\(BEGINFILES\))B
7920 9990(# Remove only configuration-dependent information.)B
7920 9830(config-clean:)B
8592 9670($\(RMN_\) *.dev devs*.tr gconfig*.h gconfx*.h o*.tr l*.tr)B
7920 9350(# A rule to do a quick and dirty compilation attempt when first installing)B
7920 9190(# the interpreter.  Many of the compilations will fail:)B
7920 9030(# follow this with 'make'.)B
7920 8710(begin:)B
8592 8550($\(RMN_\) arch.h gconfig*.h gconfx*.h $\(GENARCH_XE\) $\(GS_XE\))B
8592 8390($\(RMN_\) gconfig*.c gscdefs*.c iconfig*.c)B
8592 8230($\(RMN_\) gs_init.c $\(BEGINFILES\))B
8592 8070(make arch.h gconfigv.h)B
8592 7910(- $\(CCBEGIN\))B
8592 7750($\(RMN_\) gconfig.$\(OBJ\) gdev*.$\(OBJ\) gp_*.$\(OBJ\) gscdefs.$\(OBJ\) gsmisc.$\(OBJ\))B
8592 7590($\(RMN_\) icfontab.$\(OBJ\) iconfig.$\(OBJ\) iinit.$\(OBJ\) interp.$\(OBJ\))B
7920 7270(# Auxiliary programs)B
7920 6950(arch.h: $\(GENARCH_XE\))B
8592 6790($\(EXPP\) $\(EXP\)genarch arch.h)B
7920 6470(# Macros for constructing the *.dev files that describe features and)B
7920 6310(# devices.)B
7920 6150(SETDEV=$\(EXP\)echogs -e .dev -w- -l-dev -F -s -l-obj)B
7920 5990(SETPDEV=$\(EXP\)echogs -e .dev -w- -l-dev -F -s -l-include -lpage -l-obj)B
7920 5830(SETMOD=$\(EXP\)echogs -e .dev -w- -l-obj)B
7920 5670(ADDMOD=$\(EXP\)echogs -e .dev -a-)B
7920 5350(# Define the compilation commands for the third-party libraries.)B
7920 5190(CCCP=$\(CCC\) -I$\(PSRCDIR\) -I$\(ZSRCDIR\) -DPNG_USE_CONST)B
7920 5030(CCCJ=$\(CCC\) -I. -I$\(JSRCDIR\))B
7920 4870(CCCZ=$\(CCC\) -I. -I$\(ZSRCDIR\))B
7920 4550(######################## How to define new 'features' #######################)B
7920 4390(#)B
EndPage
%%Page: ? 3
StartPage
Landscape
()(gs.mak)[(97/06/06)(10:57:23)](3)Gaudy
0 F
360 14470(# One defines new 'features' exactly like devices \(see devs.mak for details\).)B
360 14310(# For example, one would define a feature abc by adding the following to)B
360 14150(# gs.mak:)B
360 13990(#)B
360 13830(#)B
588(abc_=abc1.$\(OBJ\) ...)X
360 13670(#)B
588(abc.dev: $\(GS_MAK\) $\(ECHOGS_XE\) $\(abc_\))X
360 13510(#)B
1260($\(SETMOD\) abc $\(abc_\))X
360 13350(#)B
1260($\(ADDMOD\) abc -obj ... [if needed])X
360 13190(#)B
1260($\(ADDMOD\) abc -oper ... [if appropriate])X
360 13030(#)B
1260($\(ADDMOD\) abc -ps ... [if appropriate])X
360 12870(#)B
360 12710(# If the abc feature requires the presence of some other features jkl and)B
360 12550(# pqr, then the rules must look like this:)B
360 12390(#)B
360 12230(#)B
588(abc_=abc1.$\(OBJ\) ...)X
360 12070(#)B
588(abc.dev: $\(GS_MAK\) $\(ECHOGS_XE\) $\(abc_\) jkl.dev pqr.dev)X
360 11910(#)B
1260($\(SETMOD\) abc $\(abc_\))X
360 11750(#)B
1260(...)X
360 11590(#)B
1260($\(ADDMOD\) abc -include jkl pqr)X
360 11270(# --------------------- Configuration-dependent files --------------------- #)B
360 10950(# gconfig.h shouldn't have to depend on DEVS_ALL, but that would)B
360 10790(# involve rewriting gsconfig to only save the device name, not the)B
360 10630(# contents of the <device>.dev files.)B
360 10470(# FEATURE_DEVS must precede DEVICE_DEVS so that devices can override)B
360 10310(# features in obscure cases.)B
360 9990(DEVS_ALL=$\(PLATFORM\).dev $\(FEATURE_DEVS\) \\)B
528 9830($\(DEVICE_DEVS\) $\(DEVICE_DEVS1\) \\)B
528 9670($\(DEVICE_DEVS2\) $\(DEVICE_DEVS3\) $\(DEVICE_DEVS4\) $\(DEVICE_DEVS5\) \\)B
528 9510($\(DEVICE_DEVS6\) $\(DEVICE_DEVS7\) $\(DEVICE_DEVS8\) $\(DEVICE_DEVS9\) \\)B
528 9350($\(DEVICE_DEVS10\) $\(DEVICE_DEVS11\) $\(DEVICE_DEVS12\) $\(DEVICE_DEVS13\) \\)B
528 9190($\(DEVICE_DEVS14\) $\(DEVICE_DEVS15\))B
360 8870(devs_tr=devs.tr$\(CONFIG\))B
360 8710($\(devs_tr\): $\(GS_MAK\) $\(MAKEFILE\) $\(ECHOGS_XE\))B
1032 8550($\(EXP\)echogs -w $\(devs_tr\) - -include $\(PLATFORM\).dev)B
1032 8390($\(EXP\)echogs -a $\(devs_tr\) - $\(FEATURE_DEVS\))B
1032 8230($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS\))B
1032 8070($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS1\))B
1032 7910($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS2\))B
1032 7750($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS3\))B
1032 7590($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS4\))B
1032 7430($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS5\))B
1032 7270($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS6\))B
1032 7110($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS7\))B
1032 6950($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS8\))B
1032 6790($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS9\))B
1032 6630($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS10\))B
1032 6470($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS11\))B
1032 6310($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS12\))B
1032 6150($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS13\))B
1032 5990($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS14\))B
1032 5830($\(EXP\)echogs -a $\(devs_tr\) - $\(DEVICE_DEVS15\))B
360 5510(# GCONFIG_EXTRAS can be set on the command line.)B
360 5350(# Note that it consists of arguments for echogs, i.e.,)B
360 5190(# it isn't just literal text.)B
360 5030(GCONFIG_EXTRAS=)B
360 4710(ld_tr=ld$\(CONFIG\).tr)B
360 4550($\(gconfig_h\) $\(ld_tr\) lib.tr: \\)B
528 4390($\(GS_MAK\) $\(MAKEFILE\) version.mak $\(GENCONF_XE\) $\(ECHOGS_XE\) $\(devs_tr\) $\(DEVS_ALL\) li)B
7920 14470(bcore.dev)B
8592 14310($\(EXP\)genconf $\(devs_tr\) libcore.dev -h $\(gconfig_h\) $\(CONFILES\))B
8592 14150($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u GS_LIB_DEFAULT -x 2022 $\(GS_LIB_D)B
7920 13990(EFAULT\) -x 22)B
8592 13830($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u SEARCH_HERE_FIRST -s $\(SEARCH_HER)B
7920 13670(E_FIRST\))B
-160($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u GS_DOCDIR -x 2022 $\(GS_DOCDIR\) -x)Y
7920 13350( 22)B
8592 13190($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u GS_INIT -x 2022 $\(GS_INIT\) -x 22)B
8592 13030($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u GS_REVISION -s $\(GS_REVISION\))B
8592 12870($\(EXP\)echogs -a $\(gconfig_h\) -x 23 define -s -u GS_REVISIONDATE -s $\(GS_REVISIOND)B
7920 12710(ATE\))B
8592 12550($\(EXP\)echogs -a $\(gconfig_h\) $\(GCONFIG_EXTRAS\))B
7920 12230(################################################################)B
7920 12070(# The other platform-independent makefiles are concatenated)B
7920 11910(# \(or included\) after this one:)B
7920 11750(#)B
588(lib.mak)X
7920 11590(#)B
588(int.mak)X
7920 11430(#)B
588(jpeg.mak)X
7920 11270(#)B
588(libpng.mak)X
7920 11110(#)B
588(zlib.mak)X
7920 10950(#)B
588(devs.mak)X
7920 10790(################################################################)B
EndPage
%%Page: ? 4
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# \(Platform-independent\) makefile for graphics library and other support code.)B
360 11590(# See the end of gs.mak for where this fits into the build process.)B
360 11270(# Define the name of this makefile.)B
360 11110(LIB_MAK=lib.mak)B
360 10790(# Define the inter-dependencies of the .h files.)B
360 10630(# Since not all versions of `make' defer expansion of macros,)B
360 10470(# we must list these in bottom-to-top order.)B
360 10150(# Generic files)B
360 9830(arch_h=arch.h)B
360 9670(stdpre_h=stdpre.h)B
360 9510(std_h=std.h $\(arch_h\) $\(stdpre_h\))B
360 9190(# Platform interfaces)B
360 8870(gp_h=gp.h)B
360 8710(gpcheck_h=gpcheck.h)B
360 8390(# Configuration definitions)B
360 8070(# gconfig*.h are generated dynamically.)B
360 7910(gconfig__h=gconfig_.h)B
360 7750(gconfigv_h=gconfigv.h)B
360 7590(gscdefs_h=gscdefs.h)B
360 7270(# C library interfaces)B
360 6950(# Because of variations in the "standard" header files between systems, and)B
360 6790(# because we must include std.h before any file that includes sys/types.h,)B
360 6630(# we define local include files named *_.h to substitute for <*.h>.)B
360 6310(vmsmath_h=vmsmath.h)B
360 5990(dos__h=dos_.h)B
360 5830(ctype__h=ctype_.h $\(std_h\))B
360 5670(dirent__h=dirent_.h $\(std_h\) $\(gconfig__h\))B
360 5510(errno__h=errno_.h $\(std_h\))B
360 5350(malloc__h=malloc_.h $\(std_h\))B
360 5190(math__h=math_.h $\(std_h\) $\(vmsmath_h\))B
360 5030(memory__h=memory_.h $\(std_h\))B
360 4870(stat__h=stat_.h $\(std_h\))B
360 4710(stdio__h=stdio_.h $\(std_h\))B
360 4550(string__h=string_.h $\(std_h\))B
360 4390(time__h=time_.h $\(std_h\) $\(gconfig__h\))B
7920 14470(windows__h=windows_.h)B
7920 14150(# Miscellaneous)B
7920 13830(gdebug_h=gdebug.h)B
7920 13670(gsalloc_h=gsalloc.h)B
7920 13510(gsargs_h=gsargs.h)B
7920 13350(gserror_h=gserror.h)B
7920 13190(gserrors_h=gserrors.h)B
7920 13030(gsexit_h=gsexit.h)B
7920 12870(gsgc_h=gsgc.h)B
7920 12710(gsio_h=gsio.h)B
7920 12550(gsmdebug_h=gsmdebug.h)B
7920 12390(gsmemory_h=gsmemory.h)B
7920 12230(gsrefct_h=gsrefct.h)B
7920 12070(gsstruct_h=gsstruct.h)B
7920 11910(gstypes_h=gstypes.h)B
7920 11750(gx_h=gx.h $\(stdio__h\) $\(gdebug_h\) $\(gserror_h\) $\(gsio_h\) $\(gsmemory_h\) $\(gstypes_h\))B
7920 11430(GX=$\(AK\) $\(gx_h\))B
7920 11270(GXERR=$\(GX\) $\(gserrors_h\))B
7920 10950(###### Support)B
7920 10630(### Include files)B
7920 10310(gsbitops_h=gsbitops.h)B
7920 10150(gsbittab_h=gsbittab.h)B
7920 9990(gsflip_h=gsflip.h)B
7920 9830(gsuid_h=gsuid.h)B
7920 9670(gsutil_h=gsutil.h)B
7920 9510(gxarith_h=gxarith.h)B
7920 9350(gxbitmap_h=gxbitmap.h $\(gstypes_h\))B
7920 9190(gxfarith_h=gxfarith.h $\(gconfigv_h\) $\(gxarith_h\))B
7920 9030(gxfixed_h=gxfixed.h)B
7920 8870(gxobj_h=gxobj.h $\(gxbitmap_h\))B
7920 8710(# Out of order)B
7920 8550(gxalloc_h=gxalloc.h $\(gsalloc_h\) $\(gxobj_h\))B
7920 8230(### Executable code)B
7920 7910(gsalloc.$\(OBJ\): gsalloc.c $\(GX\) $\(memory__h\) $\(string_h\) \\)B
8088 7750($\(gsmdebug_h\) $\(gsstruct_h\) $\(gxalloc_h\))B
7920 7430(gsargs.$\(OBJ\): gsargs.c $\(ctype__h\) $\(stdio__h\) $\(string__h\)\\)B
8004 7270($\(gsargs_h\) $\(gsexit_h\) $\(gsmemory_h\))B
7920 6950(gsbitops.$\(OBJ\): gsbitops.c $\(AK\) $\(memory__h\) $\(stdio__h\)\\)B
8004 6790($\(gdebug_h\) $\(gsbitops_h\) $\(gstypes_h\))B
7920 6470(gsbittab.$\(OBJ\): gsbittab.c $\(AK\) $\(stdpre_h\) $\(gsbittab_h\))B
7920 6150(# gsfemu is only used in FPU-less configurations, and currently only with gcc.)B
7920 5990(# We thought using CCLEAF would produce smaller code, but it actually)B
7920 5830(# produces larger code!)B
7920 5670(gsfemu.$\(OBJ\): gsfemu.c $\(AK\) $\(std_h\))B
7920 5350(# gsflip is not part of the standard configuration: it's rather large,)B
7920 5190(# and no standard facility requires it.)B
7920 5030(gsflip.$\(OBJ\): gsflip.c $\(GX\) $\(gsbittab_h\) $\(gsflip_h\))B
8592 4870($\(CCLEAF\) gsflip.c)B
7920 4550(gsmemory.$\(OBJ\): gsmemory.c $\(GX\) $\(malloc__h\) $\(memory__h\) \\)B
8088 4390($\(gsmdebug_h\) $\(gsrefct_h\) $\(gsstruct_h\))B
EndPage
%%Page: ? 5
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](2)Gaudy
0 F
360 14310(gsmisc.$\(OBJ\): gsmisc.c $\(GXERR\) $\(gconfigv_h\) \\)B
528 14150($\(malloc__h\) $\(math__h\) $\(memory__h\) $\(gpcheck_h\) $\(gxfarith_h\) $\(gxfixed_h\))B
360 13830(# gsnogc currently is only used in library-only configurations.)B
360 13670(gsnogc.$\(OBJ\): gsnogc.c $\(GX\)\\)B
444 13510($\(gsgc_h\) $\(gsmdebug_h\) $\(gsstruct_h\) $\(gxalloc_h\))B
360 13190(gsutil.$\(OBJ\): gsutil.c $\(AK\) $\(memory__h\) $\(string__h\) $\(gconfigv_h\)\\)B
444 13030($\(gstypes_h\) $\(gsuid_h\) $\(gsutil_h\))B
360 12710(###### Low-level facilities and utilities)B
360 12390(### Include files)B
360 12070(gdevbbox_h=gdevbbox.h)B
360 11910(gdevmem_h=gdevmem.h $\(gsbitops_h\))B
360 11750(gdevmrop_h=gdevmrop.h)B
360 11430(gsccode_h=gsccode.h)B
360 11270(gsccolor_h=gsccolor.h $\(gsstruct_h\))B
360 11110(gscsel_h=gscsel.h)B
360 10950(gscolor1_h=gscolor1.h)B
360 10790(gscoord_h=gscoord.h)B
360 10630(gscpm_h=gscpm.h)B
360 10470(gsdevice_h=gsdevice.h)B
360 10310(gsfcmap_h=gsfcmap.h $\(gsccode_h\))B
360 10150(gsfont_h=gsfont.h)B
360 9990(gshsb_h=gshsb.h)B
360 9830(gsht_h=gsht.h)B
360 9670(gsht1_h=gsht1.h $\(gsht_h\))B
360 9510(gsiparam_h=gsiparam.h)B
360 9350(gsjconf_h=gsjconf.h $\(std_h\))B
360 9190(gslib_h=gslib.h)B
360 9030(gslparam_h=gslparam.h)B
360 8870(gsmatrix_h=gsmatrix.h)B
360 8710(gspaint_h=gspaint.h)B
360 8550(gsparam_h=gsparam.h)B
360 8390(gspath2_h=gspath2.h)B
360 8230(gspenum_h=gspenum.h)B
360 8070(gsropt_h=gsropt.h)B
360 7910(gsxfont_h=gsxfont.h)B
360 7750(# Out of order)B
360 7590(gschar_h=gschar.h $\(gsccode_h\) $\(gscpm_h\))B
360 7430(gscolor2_h=gscolor2.h $\(gsccolor_h\) $\(gsuid_h\) $\(gxbitmap_h\))B
360 7270(gsimage_h=gsimage.h $\(gsiparam_h\))B
360 7110(gsline_h=gsline.h $\(gslparam_h\))B
360 6950(gspath_h=gspath.h $\(gspenum_h\))B
360 6790(gsrop_h=gsrop.h $\(gsropt_h\))B
360 6470(gxbcache_h=gxbcache.h $\(gxbitmap_h\))B
360 6310(gxchar_h=gxchar.h $\(gschar_h\))B
360 6150(gxcindex_h=gxcindex.h)B
360 5990(gxcvalue_h=gxcvalue.h)B
360 5830(gxclio_h=gxclio.h)B
360 5670(gxclip2_h=gxclip2.h)B
360 5510(gxcolor2_h=gxcolor2.h $\(gscolor2_h\) $\(gsrefct_h\) $\(gxbitmap_h\))B
360 5350(gxcoord_h=gxcoord.h $\(gscoord_h\))B
360 5190(gxcpath_h=gxcpath.h)B
360 5030(gxdda_h=gxdda.h)B
360 4870(gxdevrop_h=gxdevrop.h)B
360 4710(gxdevmem_h=gxdevmem.h)B
360 4550(gxdither_h=gxdither.h)B
360 4390(gxfcache_h=gxfcache.h $\(gsuid_h\) $\(gsxfont_h\) $\(gxbcache_h\))B
7920 14470(gxfcmap_h=gxfcmap.h $\(gsfcmap_h\) $\(gsuid_h\))B
7920 14310(gxfont_h=gxfont.h $\(gsfont_h\) $\(gsuid_h\) $\(gsstruct_h\))B
7920 14150(gxfont0_h=gxfont0.h)B
7920 13990(gxfrac_h=gxfrac.h)B
7920 13830(gxhttile_h=gxhttile.h)B
7920 13670(gxhttype_h=gxhttype.h)B
7920 13510(gxiodev_h=gxiodev.h $\(stat__h\))B
7920 13350(gxline_h=gxline.h $\(gslparam_h\))B
7920 13190(gxlum_h=gxlum.h)B
7920 13030(gxmatrix_h=gxmatrix.h $\(gsmatrix_h\))B
7920 12870(gxpaint_h=gxpaint.h)B
7920 12710(gxpath_h=gxpath.h $\(gscpm_h\) $\(gslparam_h\) $\(gspenum_h\))B
7920 12550(gxpcache_h=gxpcache.h)B
7920 12390(gxpcolor_h=gxpcolor.h $\(gxpcache_h\))B
7920 12230(gxsample_h=gxsample.h)B
7920 12070(gxstate_h=gxstate.h)B
7920 11910(gxtmap_h=gxtmap.h)B
7920 11750(gxxfont_h=gxxfont.h $\(gsccode_h\) $\(gsmatrix_h\) $\(gsuid_h\) $\(gsxfont_h\))B
7920 11590(# The following are out of order because they include other files.)B
7920 11430(gsdcolor_h=gsdcolor.h $\(gsccolor_h\) $\(gxarith_h\) $\(gxbitmap_h\) $\(gxcindex_h\) $\(gxhttile_h)B
7920 11270(\))B
7920 11110(gxdcolor_h=gxdcolor.h $\(gscsel_h\) $\(gsdcolor_h\) $\(gsropt_h\) $\(gsstruct_h\))B
7920 10950(gxdevice_h=gxdevice.h $\(gsdcolor_h\) $\(gsiparam_h\) $\(gsmatrix_h\) \\)B
8088 10790($\(gsropt_h\) $\(gsstruct_h\) $\(gsxfont_h\) \\)B
8088 10630($\(gxbitmap_h\) $\(gxcindex_h\) $\(gxcvalue_h\) $\(gxfixed_h\))B
7920 10470(gxdht_h=gxdht.h $\(gsrefct_h\) $\(gxarith_h\) $\(gxhttype_h\))B
7920 10310(gxctable_h=gxctable.h $\(gxfixed_h\) $\(gxfrac_h\))B
7920 10150(gscie_h=gscie.h $\(gsrefct_h\) $\(gxctable_h\))B
7920 9990(gscsepr_h=gscsepr.h)B
7920 9830(gscspace_h=gscspace.h)B
7920 9670(gxdcconv_h=gxdcconv.h $\(gxfrac_h\))B
7920 9510(gxfmap_h=gxfmap.h $\(gsrefct_h\) $\(gxfrac_h\) $\(gxtmap_h\))B
7920 9350(gxistate_h=gxistate.h $\(gscsel_h\) $\(gsropt_h\) $\(gxcvalue_h\) $\(gxfixed_h\) $\(gxline_h\) $\(gx)B
7920 9190(matrix_h\) $\(gxtmap_h\))B
7920 9030(gxclist_h=gxclist.h $\(gscspace_h\) $\(gxbcache_h\) $\(gxclio_h\) $\(gxistate_h\))B
7920 8870(gxcmap_h=gxcmap.h $\(gscsel_h\) $\(gxcvalue_h\) $\(gxfmap_h\))B
7920 8710(gxcspace_h=gxcspace.h $\(gscspace_h\) $\(gsccolor_h\) $\(gscsel_h\) $\(gsstruct_h\) $\(gxfrac_h\))B
7920 8550(gxht_h=gxht.h $\(gsht1_h\) $\(gsrefct_h\) $\(gxhttype_h\) $\(gxtmap_h\))B
7920 8390(gscolor_h=gscolor.h $\(gxtmap_h\))B
7920 8230(gsstate_h=gsstate.h $\(gscolor_h\) $\(gscsel_h\) $\(gsdevice_h\) $\(gsht_h\) $\(gsline_h\))B
7920 7910(gzacpath_h=gzacpath.h)B
7920 7750(gzcpath_h=gzcpath.h $\(gxcpath_h\))B
7920 7590(gzht_h=gzht.h $\(gscsel_h\) $\(gxdht_h\) $\(gxfmap_h\) $\(gxht_h\) $\(gxhttile_h\))B
7920 7430(gzline_h=gzline.h $\(gxline_h\))B
7920 7270(gzpath_h=gzpath.h $\(gsstruct_h\) $\(gxpath_h\))B
7920 7110(gzstate_h=gzstate.h $\(gscpm_h\) $\(gsstate_h\) $\(gxdcolor_h\) $\(gxistate_h\) $\(gxstate_h\))B
7920 6790(gdevprn_h=gdevprn.h $\(memory__h\) $\(string__h\) $\(gx_h\) \\)B
8088 6630($\(gserrors_h\) $\(gsmatrix_h\) $\(gsparam_h\) $\(gsutil_h\) \\)B
8088 6470($\(gxdevice_h\) $\(gxdevmem_h\) $\(gxclist_h\))B
7920 6150(sa85x_h=sa85x.h)B
7920 5990(sbtx_h=sbtx.h)B
7920 5830(scanchar_h=scanchar.h)B
7920 5670(scommon_h=scommon.h $\(gsmemory_h\) $\(gstypes_h\) $\(gsstruct_h\))B
7920 5510(sdct_h=sdct.h)B
7920 5350(shc_h=shc.h $\(gsbittab_h\))B
7920 5190(siscale_h=siscale.h $\(gconfigv_h\))B
7920 5030(sjpeg_h=sjpeg.h)B
7920 4870(slzwx_h=slzwx.h)B
7920 4710(spcxx_h=spcxx.h)B
7920 4550(spdiffx_h=spdiffx.h)B
7920 4390(spngpx_h=spngpx.h)B
EndPage
%%Page: ? 6
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](3)Gaudy
0 F
360 14470(srlx_h=srlx.h)B
360 14310(sstring_h=sstring.h)B
360 14150(strimpl_h=strimpl.h $\(scommon_h\) $\(gstypes_h\) $\(gsstruct_h\))B
360 13990(szlibx_h=szlibx.h)B
360 13830(# Out of order)B
360 13670(scf_h=scf.h $\(shc_h\))B
360 13510(scfx_h=scfx.h $\(shc_h\))B
360 13350(gximage_h=gximage.h $\(gsiparam_h\) $\(gxcspace_h\) $\(gxdda_h\) $\(gxsample_h\)\\)B
444 13190($\(siscale_h\) $\(strimpl_h\))B
360 12870(### Executable code)B
360 12550(# gconfig and gscdefs are handled specially.  Currently they go in psbase)B
360 12390(# rather than in libcore, which is clearly wrong.)B
360 12230(gconfig=gconfig$\(CONFIG\))B
360 12070($\(gconfig\).$\(OBJ\): gconf.c $\(GX\) \\)B
528 11910($\(gscdefs_h\) $\(gconfig_h\) $\(gxdevice_h\) $\(gxiodev_h\) $\(MAKEFILE\))B
1032 11750($\(RM_\) gconfig.h)B
1032 11590($\(RM_\) $\(gconfig\).c)B
1032 11430($\(CP_\) $\(gconfig_h\) gconfig.h)B
1032 11270($\(CP_\) gconf.c $\(gconfig\).c)B
1032 11110($\(CCC\) $\(gconfig\).c)B
1032 10950($\(RM_\) gconfig.h)B
1032 10790($\(RM_\) $\(gconfig\).c)B
360 10470(gscdefs=gscdefs$\(CONFIG\))B
360 10310($\(gscdefs\).$\(OBJ\): gscdef.c $\(stdpre_h\) $\(gscdefs_h\) $\(gconfig_h\) $\(MAKEFILE\))B
1032 10150($\(RM_\) gconfig.h)B
1032 9990($\(RM_\) $\(gscdefs\).c)B
1032 9830($\(CP_\) $\(gconfig_h\) gconfig.h)B
1032 9670($\(CP_\) gscdef.c $\(gscdefs\).c)B
1032 9510($\(CCC\) $\(gscdefs\).c)B
1032 9350($\(RM_\) gconfig.h)B
1032 9190($\(RM_\) $\(gscdefs\).c)B
360 8870(gxacpath.$\(OBJ\): gxacpath.c $\(GXERR\) \\)B
528 8710($\(gsdcolor_h\) $\(gsrop_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
528 8550($\(gxdevice_h\) $\(gxfixed_h\) $\(gxpaint_h\) \\)B
528 8390($\(gzacpath_h\) $\(gzcpath_h\) $\(gzpath_h\))B
360 8070(gxbcache.$\(OBJ\): gxbcache.c $\(GX\) $\(memory__h\) \\)B
528 7910($\(gsmdebug_h\) $\(gxbcache_h\))B
360 7590(gxccache.$\(OBJ\): gxccache.c $\(GXERR\) $\(gpcheck_h\) \\)B
528 7430($\(gscspace_h\) $\(gsimage_h\) $\(gsstruct_h\) \\)B
528 7270($\(gxchar_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gxfcache_h\) \\)B
528 7110($\(gxfixed_h\) $\(gxfont_h\) $\(gxhttile_h\) $\(gxmatrix_h\) $\(gxxfont_h\) \\)B
528 6950($\(gzstate_h\) $\(gzpath_h\) $\(gzcpath_h\) )B
360 6630(gxccman.$\(OBJ\): gxccman.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
444 6470($\(gsbitops_h\) $\(gsstruct_h\) $\(gsutil_h\) $\(gxfixed_h\) $\(gxmatrix_h\)\\)B
444 6310($\(gxdevice_h\) $\(gxdevmem_h\) $\(gxfont_h\) $\(gxfcache_h\) $\(gxchar_h\)\\)B
444 6150($\(gxxfont_h\) $\(gzstate_h\) $\(gzpath_h\))B
360 5830(gxcht.$\(OBJ\): gxcht.c $\(GXERR\) $\(memory__h\)\\)B
444 5670($\(gsutil_h\)\\)B
444 5510($\(gxcmap_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxistate_h\)\\)B
444 5350($\(gxmatrix_h\) $\(gzht_h\))B
360 5030(gxcmap.$\(OBJ\): gxcmap.c $\(GXERR\) \\)B
528 4870($\(gsccolor_h\) \\)B
528 4710($\(gxcmap_h\) $\(gxcspace_h\) $\(gxdcconv_h\) $\(gxdevice_h\) $\(gxdither_h\) \\)B
528 4550($\(gxfarith_h\) $\(gxfrac_h\) $\(gxlum_h\) $\(gzstate_h\))B
7920 14470(gxcpath.$\(OBJ\): gxcpath.c $\(GXERR\)\\)B
8004 14310($\(gscoord_h\) $\(gsstruct_h\) $\(gsutil_h\)\\)B
8004 14150($\(gxdevice_h\) $\(gxfixed_h\) $\(gzpath_h\) $\(gzcpath_h\))B
7920 13830(gxdcconv.$\(OBJ\): gxdcconv.c $\(GX\) \\)B
8088 13670($\(gsdcolor_h\) $\(gxcmap_h\) $\(gxdcconv_h\) $\(gxdevice_h\) \\)B
8088 13510($\(gxfarith_h\) $\(gxistate_h\) $\(gxlum_h\))B
7920 13190(gxdcolor.$\(OBJ\): gxdcolor.c $\(GX\) \\)B
8088 13030($\(gsbittab_h\) $\(gxdcolor_h\) $\(gxdevice_h\))B
7920 12710(gxdither.$\(OBJ\): gxdither.c $\(GX\) \\)B
8088 12550($\(gsstruct_h\) $\(gsdcolor_h\) \\)B
8088 12390($\(gxcmap_h\) $\(gxdevice_h\) $\(gxdither_h\) $\(gxlum_h\) $\(gzht_h\))B
7920 12070(gxfill.$\(OBJ\): gxfill.c $\(GXERR\) $\(math__h\) \\)B
8088 11910($\(gsstruct_h\) \\)B
8088 11750($\(gxdcolor_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxhttile_h\) \\)B
8088 11590($\(gxistate_h\) $\(gxpaint_h\) \\)B
8088 11430($\(gzcpath_h\) $\(gzpath_h\))B
7920 11110(gxht.$\(OBJ\): gxht.c $\(GXERR\) $\(memory__h\)\\)B
8004 10950($\(gsbitops_h\) $\(gsstruct_h\) $\(gsutil_h\)\\)B
8004 10790($\(gxdcolor_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxistate_h\) $\(gzht_h\))B
7920 10470(gximage.$\(OBJ\): gximage.c $\(GXERR\) $\(math__h\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 10310($\(gsccolor_h\) $\(gspaint_h\) $\(gsstruct_h\)\\)B
8004 10150($\(gxfixed_h\) $\(gxfrac_h\) $\(gxarith_h\) $\(gxmatrix_h\)\\)B
8004 9990($\(gxdevice_h\) $\(gzpath_h\) $\(gzstate_h\)\\)B
8004 9830($\(gzcpath_h\) $\(gxdevmem_h\) $\(gximage_h\) $\(gdevmrop_h\))B
7920 9510(gximage0.$\(OBJ\): gximage0.c $\(GXERR\) $\(memory__h\)\\)B
8004 9350($\(gxcpath_h\) $\(gxdevice_h\) $\(gximage_h\))B
7920 9030(gximage1.$\(OBJ\): gximage1.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 8870($\(gdevmem_h\) $\(gsbittab_h\) $\(gsccolor_h\) $\(gspaint_h\) $\(gsutil_h\)\\)B
8004 8710($\(gxarith_h\) $\(gxcmap_h\) $\(gxcpath_h\) $\(gxdcolor_h\) $\(gxdevice_h\)\\)B
8004 8550($\(gxdevmem_h\) $\(gxfixed_h\) $\(gximage_h\) $\(gxistate_h\) $\(gxmatrix_h\)\\)B
8004 8390($\(gzht_h\) $\(gzpath_h\))B
7920 8070(gximage2.$\(OBJ\): gximage2.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 7910($\(gdevmem_h\) $\(gsccolor_h\) $\(gspaint_h\) $\(gsutil_h\)\\)B
8004 7750($\(gxarith_h\) $\(gxcmap_h\) $\(gxcpath_h\) $\(gxdcolor_h\) $\(gxdevice_h\)\\)B
8004 7590($\(gxdevmem_h\) $\(gxfixed_h\) $\(gximage_h\) $\(gxistate_h\) $\(gxmatrix_h\)\\)B
8004 7430($\(gzht_h\) $\(gzpath_h\))B
7920 7110(gxpaint.$\(OBJ\): gxpaint.c $\(GX\) \\)B
8088 6950($\(gxdevice_h\) $\(gxhttile_h\) $\(gxpaint_h\) $\(gxpath_h\) $\(gzstate_h\))B
7920 6630(gxpath.$\(OBJ\): gxpath.c $\(GXERR\) \\)B
8088 6470($\(gsstruct_h\) $\(gxfixed_h\) $\(gzpath_h\))B
7920 6150(gxpath2.$\(OBJ\): gxpath2.c $\(GXERR\) $\(math__h\) \\)B
8088 5990($\(gxfixed_h\) $\(gxarith_h\) $\(gzpath_h\))B
7920 5670(gxpcopy.$\(OBJ\): gxpcopy.c $\(GXERR\) $\(math__h\) $\(gconfigv_h\) \\)B
8088 5510($\(gxfarith_h\) $\(gxfixed_h\) $\(gzpath_h\))B
7920 5190(gxpdash.$\(OBJ\): gxpdash.c $\(GX\) $\(math__h\) \\)B
8088 5030($\(gscoord_h\) $\(gsline_h\) $\(gsmatrix_h\) \\)B
8088 4870($\(gxfixed_h\) $\(gzline_h\) $\(gzpath_h\))B
7920 4550(gxpflat.$\(OBJ\): gxpflat.c $\(GX\)\\)B
8004 4390($\(gxarith_h\) $\(gxfixed_h\) $\(gzpath_h\))B
EndPage
%%Page: ? 7
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](4)Gaudy
0 F
360 14310(gxsample.$\(OBJ\): gxsample.c $\(GX\)\\)B
444 14150($\(gxsample_h\))B
360 13830(gxstroke.$\(OBJ\): gxstroke.c $\(GXERR\) $\(math__h\) $\(gpcheck_h\) \\)B
528 13670($\(gscoord_h\) $\(gsdcolor_h\) $\(gsdevice_h\) \\)B
528 13510($\(gxdevice_h\) $\(gxfarith_h\) $\(gxfixed_h\) \\)B
528 13350($\(gxhttile_h\) $\(gxistate_h\) $\(gxmatrix_h\) $\(gxpaint_h\) \\)B
528 13190($\(gzcpath_h\) $\(gzline_h\) $\(gzpath_h\))B
360 12870(###### Higher-level facilities)B
360 12550(gschar.$\(OBJ\): gschar.c $\(GXERR\) $\(memory__h\) $\(string__h\)\\)B
444 12390($\(gspath_h\) $\(gsstruct_h\) \\)B
444 12230($\(gxfixed_h\) $\(gxarith_h\) $\(gxmatrix_h\) $\(gxcoord_h\) $\(gxdevice_h\) $\(gxdevmem_h\) \\)B
444 12070($\(gxfont_h\) $\(gxfont0_h\) $\(gxchar_h\) $\(gxfcache_h\) $\(gzpath_h\) $\(gzstate_h\))B
360 11750(gscolor.$\(OBJ\): gscolor.c $\(GXERR\) \\)B
528 11590($\(gsccolor_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
528 11430($\(gxcmap_h\) $\(gxcspace_h\) $\(gxdcconv_h\) $\(gxdevice_h\) $\(gzstate_h\))B
360 11110(gscoord.$\(OBJ\): gscoord.c $\(GXERR\) $\(math__h\) \\)B
528 10950($\(gsccode_h\) $\(gxcoord_h\) $\(gxdevice_h\) $\(gxfarith_h\) $\(gxfixed_h\) $\(gxfont_h\) \\)B
528 10790($\(gxmatrix_h\) $\(gxpath_h\) $\(gzstate_h\))B
360 10470(gsdevice.$\(OBJ\): gsdevice.c $\(GXERR\) $\(memory__h\)\\)B
444 10310($\(gscdefs_h\) $\(gscoord_h\) $\(gsmatrix_h\) $\(gspaint_h\) $\(gspath_h\) $\(gsstruct_h\)\\)B
444 10150($\(gxcmap_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gzstate_h\))B
360 9830(gsdevmem.$\(OBJ\): gsdevmem.c $\(GXERR\) $\(math__h\) $\(memory__h\) \\)B
528 9670($\(gxarith_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
360 9350(gsdparam.$\(OBJ\): gsdparam.c $\(GXERR\) $\(memory__h\) $\(string__h\) \\)B
528 9190($\(gsparam_h\) $\(gxdevice_h\) $\(gxfixed_h\))B
360 8870(gsfont.$\(OBJ\): gsfont.c $\(GXERR\) $\(memory__h\)\\)B
444 8710($\(gschar_h\) $\(gsstruct_h\) \\)B
444 8550($\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxfont_h\) $\(gxfcache_h\)\\)B
444 8390($\(gzstate_h\))B
360 8070(gsht.$\(OBJ\): gsht.c $\(GXERR\) $\(memory__h\)\\)B
444 7910($\(gsstruct_h\) $\(gsutil_h\) $\(gxarith_h\) $\(gxdevice_h\) $\(gzht_h\) $\(gzstate_h\))B
360 7590(gshtscr.$\(OBJ\): gshtscr.c $\(GXERR\) $\(math__h\) \\)B
528 7430($\(gsstruct_h\) $\(gxarith_h\) $\(gxdevice_h\) $\(gzht_h\) $\(gzstate_h\))B
360 7110(gsimage.$\(OBJ\): gsimage.c $\(GXERR\) $\(memory__h\)\\)B
528 6950($\(gscspace_h\) $\(gsimage_h\) $\(gsmatrix_h\) $\(gsstruct_h\) \\)B
528 6790($\(gxarith_h\) $\(gxdevice_h\) $\(gzstate_h\))B
360 6470(gsimpath.$\(OBJ\): gsimpath.c $\(GXERR\) \\)B
528 6310($\(gsmatrix_h\) $\(gsstate_h\) $\(gspath_h\))B
360 5990(gsinit.$\(OBJ\): gsinit.c $\(memory__h\) $\(stdio__h\) \\)B
528 5830($\(gdebug_h\) $\(gp_h\) $\(gscdefs_h\) $\(gslib_h\) $\(gsmemory_h\))B
360 5510(gsiodev.$\(OBJ\): gsiodev.c $\(GXERR\) $\(errno__h\) $\(string__h\) \\)B
528 5350($\(gp_h\) $\(gsparam_h\) $\(gxiodev_h\))B
360 5030(gsline.$\(OBJ\): gsline.c $\(GXERR\) $\(math__h\) $\(memory__h\)\\)B
444 4870($\(gsline_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gzstate_h\) $\(gzline_h\))B
360 4550(gsmatrix.$\(OBJ\): gsmatrix.c $\(GXERR\) $\(math__h\) \\)B
528 4390($\(gxfarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\))B
7920 14310(gspaint.$\(OBJ\): gspaint.c $\(GXERR\) $\(math__h\) $\(gpcheck_h\)\\)B
8004 14150($\(gspaint_h\) $\(gspath_h\) $\(gsropt_h\)\\)B
8004 13990($\(gxcpath_h\) $\(gxdevmem_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxpaint_h\)\\)B
8004 13830($\(gzpath_h\) $\(gzstate_h\))B
7920 13510(gsparam.$\(OBJ\): gsparam.c $\(GXERR\) $\(memory__h\) $\(string__h\)\\)B
8004 13350($\(gsparam_h\) $\(gsstruct_h\))B
7920 13030(gspath.$\(OBJ\): gspath.c $\(GXERR\) \\)B
8088 12870($\(gscoord_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) \\)B
8088 12710($\(gzcpath_h\) $\(gzpath_h\) $\(gzstate_h\))B
7920 12390(gsstate.$\(OBJ\): gsstate.c $\(GXERR\) $\(memory__h\)\\)B
8004 12230($\(gscie_h\) $\(gscolor2_h\) $\(gscoord_h\) $\(gspath_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
8004 12070($\(gxcmap_h\) $\(gxcspace_h\) $\(gxdevice_h\) $\(gxpcache_h\) \\)B
8004 11910($\(gzstate_h\) $\(gzht_h\) $\(gzline_h\) $\(gzpath_h\) $\(gzcpath_h\))B
7920 11590(###### The internal devices)B
7920 11270(### The built-in device implementations:)B
7920 10950(# The bounding box device is not normally a free-standing device.)B
7920 10790(# To configure it as one for testing, change SETMOD to SETDEV, and also)B
7920 10630(# define TEST in gdevbbox.c.)B
7920 10470(bbox.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) gdevbbox.$\(OBJ\))B
8592 10310($\(SETMOD\) bbox gdevbbox.$\(OBJ\))B
7920 9990(gdevbbox.$\(OBJ\): gdevbbox.c $\(GXERR\) $\(math__h\) $\(memory__h\) \\)B
8088 9830($\(gdevbbox_h\) $\(gsdevice_h\) $\(gsparam_h\) \\)B
8088 9670($\(gxcpath_h\) $\(gxdevice_h\) $\(gxistate_h\) $\(gxpaint_h\) $\(gxpath_h\))B
7920 9350(gdevddrw.$\(OBJ\): gdevddrw.c $\(GXERR\) $\(math__h\) $\(gpcheck_h\) \\)B
8088 9190($\(gxdcolor_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\))B
7920 8870(gdevdflt.$\(OBJ\): gdevdflt.c $\(GXERR\) $\(gpcheck_h\)\\)B
8004 8710($\(gsbittab_h\) $\(gsropt_h\)\\)B
8004 8550($\(gxcpath_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
7920 8230(gdevnfwd.$\(OBJ\): gdevnfwd.c $\(GX\) \\)B
8088 8070($\(gxdevice_h\))B
7920 7750(# The render/RGB device is only here as an example, but we can configure)B
7920 7590(# it as a real device for testing.)B
7920 7430(rrgb.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) gdevrrgb.$\(OBJ\) page.dev)B
8592 7270($\(SETPDEV\) rrgb gdevrrgb.$\(OBJ\))B
7920 6950(gdevrrgb.$\(OBJ\): gdevrrgb.c $\(AK\)\\)B
8004 6790($\(gdevprn_h\))B
7920 6470(### The memory devices:)B
7920 6150(gdevabuf.$\(OBJ\): gdevabuf.c $\(GXERR\) $\(memory__h\)\\)B
8004 5990($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
7920 5670(gdevmem.$\(OBJ\): gdevmem.c $\(GXERR\) $\(memory__h\)\\)B
8004 5510($\(gsstruct_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
7920 5190(gdevm1.$\(OBJ\): gdevm1.c $\(GX\) $\(memory__h\) $\(gsrop_h\)\\)B
8004 5030($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
7920 4710(gdevm2.$\(OBJ\): gdevm2.c $\(GX\) $\(memory__h\)\\)B
8004 4550($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
EndPage
%%Page: ? 8
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](5)Gaudy
0 F
360 14470(gdevm4.$\(OBJ\): gdevm4.c $\(GX\) $\(memory__h\)\\)B
444 14310($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 13990(gdevm8.$\(OBJ\): gdevm8.c $\(GX\) $\(memory__h\)\\)B
444 13830($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 13510(gdevm16.$\(OBJ\): gdevm16.c $\(GX\) $\(memory__h\)\\)B
444 13350($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 13030(gdevm24.$\(OBJ\): gdevm24.c $\(GX\) $\(memory__h\)\\)B
444 12870($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 12550(gdevm32.$\(OBJ\): gdevm32.c $\(GX\) $\(memory__h\)\\)B
444 12390($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 12070(gdevmpla.$\(OBJ\): gdevmpla.c $\(GX\) $\(memory__h\)\\)B
444 11910($\(gxdevice_h\) $\(gxdevmem_h\) $\(gdevmem_h\))B
360 11590(# Create a pseudo-"feature" for the entire graphics library.)B
360 11270(LIB1s=gsalloc.$\(OBJ\) gsbitops.$\(OBJ\) gsbittab.$\(OBJ\))B
360 11110(LIB2s=gschar.$\(OBJ\) gscolor.$\(OBJ\) gscoord.$\(OBJ\) gsdevice.$\(OBJ\) gsdevmem.$\(OBJ\))B
360 10950(LIB3s=gsdparam.$\(OBJ\) gsfont.$\(OBJ\) gsht.$\(OBJ\) gshtscr.$\(OBJ\))B
360 10790(LIB4s=gsimage.$\(OBJ\) gsimpath.$\(OBJ\) gsinit.$\(OBJ\) gsiodev.$\(OBJ\))B
360 10630(LIB5s=gsline.$\(OBJ\) gsmatrix.$\(OBJ\) gsmemory.$\(OBJ\) gsmisc.$\(OBJ\))B
360 10470(LIB6s=gspaint.$\(OBJ\) gsparam.$\(OBJ\) gspath.$\(OBJ\) gsstate.$\(OBJ\) gsutil.$\(OBJ\))B
360 10310(LIB1x=gxacpath.$\(OBJ\) gxbcache.$\(OBJ\))B
360 10150(LIB2x=gxccache.$\(OBJ\) gxccman.$\(OBJ\) gxcht.$\(OBJ\) gxcmap.$\(OBJ\) gxcpath.$\(OBJ\))B
360 9990(LIB3x=gxdcconv.$\(OBJ\) gxdcolor.$\(OBJ\) gxdither.$\(OBJ\) gxfill.$\(OBJ\) gxht.$\(OBJ\))B
360 9830(LIB4x=gximage.$\(OBJ\) gximage0.$\(OBJ\) gximage1.$\(OBJ\) gximage2.$\(OBJ\))B
360 9670(LIB5x=gxpaint.$\(OBJ\) gxpath.$\(OBJ\) gxpath2.$\(OBJ\) gxpcopy.$\(OBJ\))B
360 9510(LIB6x=gxpdash.$\(OBJ\) gxpflat.$\(OBJ\) gxsample.$\(OBJ\) gxstroke.$\(OBJ\))B
360 9350(LIB1d=gdevabuf.$\(OBJ\) gdevddrw.$\(OBJ\) gdevdflt.$\(OBJ\) gdevnfwd.$\(OBJ\))B
360 9190(LIB2d=gdevmem.$\(OBJ\) gdevm1.$\(OBJ\) gdevm2.$\(OBJ\) gdevm4.$\(OBJ\) gdevm8.$\(OBJ\))B
360 9030(LIB3d=gdevm16.$\(OBJ\) gdevm24.$\(OBJ\) gdevm32.$\(OBJ\) gdevmpla.$\(OBJ\))B
360 8870(LIBs=$\(LIB1s\) $\(LIB2s\) $\(LIB3s\) $\(LIB4s\) $\(LIB5s\) $\(LIB6s\))B
360 8710(LIBx=$\(LIB1x\) $\(LIB2x\) $\(LIB3x\) $\(LIB4x\) $\(LIB5x\) $\(LIB6x\))B
360 8550(LIBd=$\(LIB1d\) $\(LIB2d\) $\(LIB3d\))B
360 8390(LIB_ALL=$\(LIBs\) $\(LIBx\) $\(LIBd\))B
360 8230(libs.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(LIBs\))B
1032 8070($\(EXP\)echogs -w libs.dev $\(LIB1s\))B
1032 7910($\(EXP\)echogs -a libs.dev $\(LIB2s\))B
1032 7750($\(EXP\)echogs -a libs.dev $\(LIB3s\))B
1032 7590($\(EXP\)echogs -a libs.dev $\(LIB4s\))B
1032 7430($\(EXP\)echogs -a libs.dev $\(LIB5s\))B
1032 7270($\(EXP\)echogs -a libs.dev $\(LIB6s\))B
1032 7110($\(ADDMOD\) libs -init gscolor)B
360 6790(libx.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(LIBx\))B
1032 6630($\(EXP\)echogs -w libx.dev $\(LIB1x\))B
1032 6470($\(EXP\)echogs -a libx.dev $\(LIB2x\))B
1032 6310($\(EXP\)echogs -a libx.dev $\(LIB3x\))B
1032 6150($\(EXP\)echogs -a libx.dev $\(LIB4x\))B
1032 5990($\(EXP\)echogs -a libx.dev $\(LIB5x\))B
1032 5830($\(EXP\)echogs -a libx.dev $\(LIB6x\))B
1032 5670($\(ADDMOD\) libx -init gximage1 gximage2)B
360 5350(libd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(LIBd\))B
1032 5190($\(EXP\)echogs -w libd.dev $\(LIB1d\))B
1032 5030($\(EXP\)echogs -a libd.dev $\(LIB2d\))B
1032 4870($\(EXP\)echogs -a libd.dev $\(LIB3d\))B
360 4550(# roplib shouldn't be required....)B
360 4390(libcore.dev: $\(LIB_MAK\) $\(ECHOGS_XE\)\\)B
8088 14470(libs.dev libx.dev libd.dev iscale.dev roplib.dev)B
8592 14310($\(SETMOD\) libcore)B
8592 14150($\(ADDMOD\) libcore -dev nullpage)B
8592 13990($\(ADDMOD\) libcore -include libs libx libd iscale roplib)B
7920 13670(# ---------------- Stream support ---------------- #)B
7920 13510(# Currently the only thing in the library that uses this is clists.)B
7920 13190(stream_h=stream.h $\(scommon_h\))B
7920 12870(stream.$\(OBJ\): stream.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 12710($\(gdebug_h\) $\(gpcheck_h\) $\(stream_h\) $\(strimpl_h\))B
7920 12390(# ---------------- File streams ---------------- #)B
7920 12230(# Currently only the high-level drivers use these, but more drivers will)B
7920 12070(# probably use them eventually.)B
7920 11750(sfile_=sfx$\(FILE_IMPLEMENTATION\).$\(OBJ\))B
7920 11590(sfile.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(sfile_\))B
8592 11430($\(SETMOD\) sfile $\(sfile_\))B
7920 11110(sfxstdio.$\(OBJ\): sfxstdio.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 10950($\(gdebug_h\) $\(gpcheck_h\) $\(stream_h\) $\(strimpl_h\))B
7920 10630(sfxfd.$\(OBJ\): sfxfd.c $\(AK\) $\(stdio__h\) $\(errno__h\) $\(memory__h\) \\)B
8088 10470($\(gdebug_h\) $\(gpcheck_h\) $\(stream_h\) $\(strimpl_h\))B
7920 10150(sfxboth.$\(OBJ\): sfxboth.c sfxstdio.c sfxfd.c)B
7920 9830(# ---------------- CCITTFax filters ---------------- #)B
7920 9670(# These are used by clists, some drivers, and Level 2 in general.)B
7920 9350(cfe_=scfe.$\(OBJ\) scfetab.$\(OBJ\) shc.$\(OBJ\))B
7920 9190(cfe.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(cfe_\))B
8592 9030($\(SETMOD\) cfe $\(cfe_\))B
7920 8710(scfe.$\(OBJ\): scfe.c $\(AK\) $\(memory__h\) $\(stdio__h\) $\(gdebug_h\)\\)B
8088 8550($\(scf_h\) $\(strimpl_h\) $\(scfx_h\))B
7920 8230(scfetab.$\(OBJ\): scfetab.c $\(AK\) $\(std_h\) $\(scommon_h\) $\(scf_h\))B
7920 7910(shc.$\(OBJ\): shc.c $\(AK\) $\(std_h\) $\(scommon_h\) $\(shc_h\))B
7920 7590(cfd_=scfd.$\(OBJ\) scfdtab.$\(OBJ\))B
7920 7430(cfd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(cfd_\))B
8592 7270($\(SETMOD\) cfd $\(cfd_\))B
7920 6950(scfd.$\(OBJ\): scfd.c $\(AK\) $\(memory__h\) $\(stdio__h\) $\(gdebug_h\)\\)B
8088 6790($\(scf_h\) $\(strimpl_h\) $\(scfx_h\))B
7920 6470(scfdtab.$\(OBJ\): scfdtab.c $\(AK\) $\(std_h\) $\(scommon_h\) $\(scf_h\))B
7920 6150(# ---------------- DCT \(JPEG\) filters ---------------- #)B
7920 5990(# These are used by Level 2, and by the JPEG-writing driver.)B
7920 5670(# Common code)B
7920 5350(sdctc_=sdctc.$\(OBJ\) sjpegc.$\(OBJ\))B
7920 5030(sdctc.$\(OBJ\): sdctc.c $\(AK\) $\(stdio__h\)\\)B
8004 4870($\(sdct_h\) $\(strimpl_h\)\\)B
8004 4710(jpeglib.h)B
7920 4390(sjpegc.$\(OBJ\): sjpegc.c $\(AK\) $\(stdio__h\) $\(string__h\) $\(gx_h\)\\)B
EndPage
%%Page: ? 9
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](6)Gaudy
0 F
444 14470($\(gserrors_h\) $\(sjpeg_h\) $\(sdct_h\) $\(strimpl_h\) \\)B
444 14310(jerror.h jpeglib.h)B
360 13990(# Encoding \(compression\))B
360 13670(sdcte_=$\(sdctc_\) sdcte.$\(OBJ\) sjpege.$\(OBJ\))B
360 13510(sdcte.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(sdcte_\) jpege.dev)B
1032 13350($\(SETMOD\) sdcte $\(sdcte_\))B
1032 13190($\(ADDMOD\) sdcte -include jpege)B
360 12870(sdcte.$\(OBJ\): sdcte.c $\(AK\) $\(memory__h\) $\(stdio__h\) $\(gdebug_h\)\\)B
528 12710($\(sdct_h\) $\(sjpeg_h\) $\(strimpl_h\) \\)B
528 12550(jerror.h jpeglib.h)B
360 12230(sjpege.$\(OBJ\): sjpege.c $\(AK\) $\(stdio__h\) $\(string__h\) $\(gx_h\)\\)B
444 12070($\(gserrors_h\) $\(sjpeg_h\) $\(sdct_h\) $\(strimpl_h\) \\)B
444 11910(jerror.h jpeglib.h)B
360 11590(# Decoding \(decompression\))B
360 11270(sdctd_=$\(sdctc_\) sdctd.$\(OBJ\) sjpegd.$\(OBJ\))B
360 11110(sdctd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(sdctd_\) jpegd.dev)B
1032 10950($\(SETMOD\) sdctd $\(sdctd_\))B
1032 10790($\(ADDMOD\) sdctd -include jpegd)B
360 10470(sdctd.$\(OBJ\): sdctd.c $\(AK\) $\(memory__h\) $\(stdio__h\) $\(gdebug_h\)\\)B
528 10310($\(sdct_h\) $\(sjpeg_h\) $\(strimpl_h\) \\)B
528 10150(jerror.h jpeglib.h)B
360 9830(sjpegd.$\(OBJ\): sjpegd.c $\(AK\) $\(stdio__h\) $\(string__h\) $\(gx_h\)\\)B
444 9670($\(gserrors_h\) $\(sjpeg_h\) $\(sdct_h\) $\(strimpl_h\)\\)B
444 9510(jerror.h jpeglib.h)B
360 9190(# ---------------- LZW filters ---------------- #)B
360 9030(# These are used by Level 2 in general.)B
360 8710(slzwe_=slzwce)B
360 8550(#slzwe_=slzwe)B
360 8390(lzwe_=$\(slzwe_\).$\(OBJ\) slzwc.$\(OBJ\))B
360 8230(lzwe.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(lzwe_\))B
1032 8070($\(SETMOD\) lzwe $\(lzwe_\))B
360 7750(# We need slzwe.dev as a synonym for lzwe.dev for BAND_LIST_STORAGE = memory.)B
360 7590(slzwe.dev: lzwe.dev)B
1032 7430($\(CP_\) lzwe.dev slzwe.dev)B
360 7110(slzwce.$\(OBJ\): slzwce.c $\(AK\) $\(stdio__h\) $\(gdebug_h\)\\)B
528 6950($\(slzwx_h\) $\(strimpl_h\))B
360 6630(slzwe.$\(OBJ\): slzwe.c $\(AK\) $\(stdio__h\) $\(gdebug_h\)\\)B
528 6470($\(slzwx_h\) $\(strimpl_h\))B
360 6150(slzwc.$\(OBJ\): slzwc.c $\(AK\) $\(std_h\)\\)B
528 5990($\(slzwx_h\) $\(strimpl_h\))B
360 5670(lzwd_=slzwd.$\(OBJ\) slzwc.$\(OBJ\))B
360 5510(lzwd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(lzwd_\))B
1032 5350($\(SETMOD\) lzwd $\(lzwd_\))B
360 5030(# We need slzwd.dev as a synonym for lzwd.dev for BAND_LIST_STORAGE = memory.)B
360 4870(slzwd.dev: lzwd.dev)B
1032 4710($\(CP_\) lzwd.dev slzwd.dev)B
360 4390(slzwd.$\(OBJ\): slzwd.c $\(AK\) $\(stdio__h\) $\(gdebug_h\)\\)B
8088 14470($\(slzwx_h\) $\(strimpl_h\))B
7920 14150(# ---------------- PCX decoding filter ---------------- #)B
7920 13990(# This is an adhoc filter not used by anything in the standard configuration.)B
7920 13670(pcxd_=spcxd.$\(OBJ\))B
7920 13510(pcxd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(pcxd_\))B
8592 13350($\(SETMOD\) pcxd $\(pcxd_\))B
7920 13030(spcxd.$\(OBJ\): spcxd.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 12870($\(spcxx_h\) $\(strimpl_h\))B
7920 12550(# ---------------- Pixel-difference filters ---------------- #)B
7920 12390(# The Predictor facility of the LZW and Flate filters uses these.)B
7920 12070(pdiff_=spdiff.$\(OBJ\))B
7920 11910(pdiff.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(pdiff_\))B
8592 11750($\(SETMOD\) pdiff $\(pdiff_\))B
7920 11430(spdiff.$\(OBJ\): spdiff.c $\(AK\) $\(stdio__h\)\\)B
8004 11270($\(spdiffx_h\) $\(strimpl_h\))B
7920 10950(# ---------------- PNG pixel prediction filters ---------------- #)B
7920 10790(# The Predictor facility of the LZW and Flate filters uses these.)B
7920 10470(pngp_=spngp.$\(OBJ\))B
7920 10310(pngp.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(pngp_\))B
8592 10150($\(SETMOD\) pngp $\(pngp_\))B
7920 9830(spngp.$\(OBJ\): spngp.c $\(AK\) $\(memory__h\)\\)B
8088 9670($\(spngpx_h\) $\(strimpl_h\))B
7920 9350(# ---------------- RunLength filters ---------------- #)B
7920 9190(# These are used by clists and also by Level 2 in general.)B
7920 8870(rle_=srle.$\(OBJ\))B
7920 8710(rle.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(rle_\))B
8592 8550($\(SETMOD\) rle $\(rle_\))B
7920 8230(srle.$\(OBJ\): srle.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 8070($\(srlx_h\) $\(strimpl_h\))B
7920 7750(rld_=srld.$\(OBJ\))B
7920 7590(rld.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(rld_\))B
8592 7430($\(SETMOD\) rld $\(rld_\))B
7920 7110(srld.$\(OBJ\): srld.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 6950($\(srlx_h\) $\(strimpl_h\))B
7920 6630(# ---------------- String encoding/decoding filters ---------------- #)B
7920 6470(# These are used by the PostScript and PDF writers, and also by the)B
7920 6310(# PostScript interpreter.)B
7920 5990(scantab.$\(OBJ\): scantab.c $\(AK\) $\(stdpre_h\)\\)B
8004 5830($\(scanchar_h\) $\(scommon_h\))B
7920 5510(sfilter2.$\(OBJ\): sfilter2.c $\(AK\) $\(memory__h\) $\(stdio__h\)\\)B
8004 5350($\(sa85x_h\) $\(scanchar_h\) $\(sbtx_h\) $\(strimpl_h\))B
7920 5030(sstring.$\(OBJ\): sstring.c $\(AK\) $\(stdio__h\) $\(memory__h\) $\(string__h\)\\)B
8004 4870($\(scanchar_h\) $\(sstring_h\) $\(strimpl_h\))B
7920 4550(# ---------------- zlib filters ---------------- #)B
7920 4390(# These are used by clists and are also available as filters.)B
EndPage
%%Page: ? 10
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](7)Gaudy
0 F
360 14310(szlibc_=szlibc.$\(OBJ\))B
360 13990(szlibc.$\(OBJ\): szlibc.c $\(AK\) $\(std_h\) \\)B
528 13830($\(gsmemory_h\) $\(gsstruct_h\) $\(gstypes_h\) $\(strimpl_h\) $\(szlibx_h\))B
1032 13670($\(CCCZ\) szlibc.c)B
360 13350(szlibe_=$\(szlibc_\) szlibe.$\(OBJ\))B
360 13190(szlibe.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) zlibe.dev $\(szlibe_\))B
1032 13030($\(SETMOD\) szlibe $\(szlibe_\))B
1032 12870($\(ADDMOD\) szlibe -include zlibe)B
360 12550(szlibe.$\(OBJ\): szlibe.c $\(AK\) $\(std_h\) \\)B
528 12390($\(gsmemory_h\) $\(strimpl_h\) $\(szlibx_h\))B
1032 12230($\(CCCZ\) szlibe.c)B
360 11910(szlibd_=$\(szlibc_\) szlibd.$\(OBJ\))B
360 11750(szlibd.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) zlibd.dev $\(szlibd_\))B
1032 11590($\(SETMOD\) szlibd $\(szlibd_\))B
1032 11430($\(ADDMOD\) szlibd -include zlibd)B
360 11110(szlibd.$\(OBJ\): szlibd.c $\(AK\) $\(std_h\) \\)B
528 10950($\(gsmemory_h\) $\(strimpl_h\) $\(szlibx_h\))B
1032 10790($\(CCCZ\) szlibd.c)B
360 10470(# ---------------- Command lists ---------------- #)B
360 10150(gxcldev_h=gxcldev.h $\(gxclist_h\) $\(gsropt_h\) $\(gxht_h\) $\(gxtmap_h\) $\(gxdht_h\)\\)B
528 9990($\(strimpl_h\) $\(scfx_h\) $\(srlx_h\))B
360 9830(gxclpage_h=gxclpage.h $\(gxclio_h\))B
360 9670(gxclpath_h=gxclpath.h $\(gxfixed_h\))B
360 9350(# Command list package.  Currently the higher-level facilities are required,)B
360 9190(# but eventually they will be optional.)B
360 9030(clist.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) clbase.dev clpath.dev)B
1032 8870($\(SETMOD\) clist -include clbase clpath)B
360 8550(# Base command list facility.)B
360 8390(clbase1_=gxclist.$\(OBJ\) gxclbits.$\(OBJ\) gxclpage.$\(OBJ\))B
360 8230(clbase2_=gxclread.$\(OBJ\) gxclrect.$\(OBJ\) stream.$\(OBJ\))B
360 8070(clbase_=$\(clbase1_\) $\(clbase2_\))B
360 7910(clbase.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(clbase_\) cl$\(BAND_LIST_STORAGE\).dev \\)B
528 7750(cfe.dev cfd.dev rle.dev rld.dev)B
1032 7590($\(SETMOD\) clbase $\(clbase1_\))B
1032 7430($\(ADDMOD\) clbase -obj $\(clbase2_\))B
1032 7270($\(ADDMOD\) clbase -include cl$\(BAND_LIST_STORAGE\) cfe cfd rle rld)B
360 6950(gdevht_h=gdevht.h $\(gzht_h\))B
360 6630(gdevht.$\(OBJ\): gdevht.c $\(GXERR\) \\)B
528 6470($\(gdevht_h\) $\(gxdcconv_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdither_h\))B
360 6150(gxclist.$\(OBJ\): gxclist.c $\(GXERR\) $\(memory__h\) $\(gp_h\) $\(gpcheck_h\)\\)B
444 5990($\(gxcldev_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
360 5670(gxclbits.$\(OBJ\): gxclbits.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
444 5510($\(gsbitops_h\) $\(gxcldev_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gxfmap_h\))B
360 5190(gxclpage.$\(OBJ\): gxclpage.c $\(AK\)\\)B
444 5030($\(gdevprn_h\) $\(gxcldev_h\) $\(gxclpage_h\))B
360 4710(# \(gxclread shouldn't need gxclpath.h\))B
360 4550(gxclread.$\(OBJ\): gxclread.c $\(GXERR\) $\(memory__h\) $\(gp_h\) $\(gpcheck_h\)\\)B
444 4390($\(gdevht_h\)\\)B
8004 14470($\(gsbitops_h\) $\(gscoord_h\) $\(gsdevice_h\) $\(gsstate_h\)\\)B
8004 14310($\(gxcldev_h\) $\(gxclpath_h\) $\(gxcmap_h\) $\(gxcspace_h\) $\(gxdcolor_h\)\\)B
8004 14150($\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 13990($\(gxhttile_h\) $\(gxpaint_h\) $\(gzacpath_h\) $\(gzcpath_h\) $\(gzpath_h\)\\)B
8004 13830($\(stream_h\) $\(strimpl_h\))B
7920 13510(gxclrect.$\(OBJ\): gxclrect.c $\(GXERR\)\\)B
8004 13350($\(gsutil_h\) $\(gxcldev_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
7920 13030(# Higher-level command list facilities.)B
7920 12870(clpath_=gxclimag.$\(OBJ\) gxclpath.$\(OBJ\))B
7920 12710(clpath.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(clpath_\) psl2cs.dev)B
8592 12550($\(SETMOD\) clpath $\(clpath_\))B
8592 12390($\(ADDMOD\) clpath -include psl2cs)B
8592 12230($\(ADDMOD\) clpath -init climag clpath)B
7920 11910(gxclimag.$\(OBJ\): gxclimag.c $\(GXERR\) $\(math__h\) $\(memory__h\)\\)B
8004 11750($\(gscspace_h\)\\)B
8004 11590($\(gxarith_h\) $\(gxcldev_h\) $\(gxclpath_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 11430($\(gxfmap_h\))B
7920 11110(gxclpath.$\(OBJ\): gxclpath.c $\(GXERR\) $\(math__h\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 10950($\(gxcldev_h\) $\(gxclpath_h\) $\(gxcolor2_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 10790($\(gxpaint_h\) \\)B
8004 10630($\(gzcpath_h\) $\(gzpath_h\))B
7920 10310(# Implement band lists on files.)B
7920 9990(clfile_=gxclfile.$\(OBJ\))B
7920 9830(clfile.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(clfile_\))B
8592 9670($\(SETMOD\) clfile $\(clfile_\))B
7920 9350(gxclfile.$\(OBJ\): gxclfile.c $\(stdio__h\) $\(string__h\) \\)B
8088 9190($\(gp_h\) $\(gsmemory_h\) $\(gserror_h\) $\(gserrors_h\) $\(gxclio_h\))B
7920 8870(# Implement band lists in memory \(RAM\).)B
7920 8550(clmemory_=gxclmem.$\(OBJ\) gxcl$\(BAND_LIST_COMPRESSOR\).$\(OBJ\))B
7920 8390(clmemory.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(clmemory_\) s$\(BAND_LIST_COMPRESSOR\)e.dev s$\(BAND_)B
7920 8230(LIST_COMPRESSOR\)d.dev)B
8592 8070($\(SETMOD\) clmemory $\(clmemory_\))B
8592 7910($\(ADDMOD\) clmemory -include s$\(BAND_LIST_COMPRESSOR\)e s$\(BAND_LIST_COMPRESSOR\)d)B
8592 7750($\(ADDMOD\) clmemory -init cl_$\(BAND_LIST_COMPRESSOR\))B
7920 7430(gxclmem_h=gxclmem.h $\(gxclio_h\) $\(strimpl_h\))B
7920 7110(gxclmem.$\(OBJ\): gxclmem.c $\(GXERR\) $\(LIB_MAK\) $\(memory__h\) \\)B
8088 6950($\(gxclmem_h\))B
7920 6630(# Implement the compression method for RAM-based band lists.)B
7920 6310(gxcllzw.$\(OBJ\): gxcllzw.c $\(std_h\)\\)B
8004 6150($\(gsmemory_h\) $\(gstypes_h\) $\(gxclmem_h\) $\(slzwx_h\))B
7920 5830(gxclzlib.$\(OBJ\): gxclzlib.c $\(std_h\)\\)B
8004 5670($\(gsmemory_h\) $\(gstypes_h\) $\(gxclmem_h\) $\(szlibx_h\))B
8592 5510($\(CCCZ\) gxclzlib.c)B
7920 5190(# ---------------- Page devices ---------------- #)B
7920 5030(# We include this here, rather than in devs.mak, because it is more like)B
7920 4870(# a feature than a simple device.)B
7920 4550(page_=gdevprn.$\(OBJ\))B
7920 4390(page.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(page_\) clist.dev)B
EndPage
%%Page: ? 11
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](8)Gaudy
0 F
1032 14470($\(SETMOD\) page $\(page_\))B
1032 14310($\(ADDMOD\) page -include clist)B
360 13990(gdevprn.$\(OBJ\): gdevprn.c $\(ctype__h\) \\)B
528 13830($\(gdevprn_h\) $\(gp_h\) $\(gsparam_h\) $\(gxclio_h\))B
360 13510(# ---------------- Vector devices ---------------- #)B
360 13350(# We include this here for the same reasons as page.dev.)B
360 13030(gdevvec_h=gdevvec.h $\(gdevbbox_h\) $\(gsropt_h\) $\(gxdevice_h\) $\(gxistate_h\) $\(stream_h\))B
360 12710(vector_=gdevvec.$\(OBJ\))B
360 12550(vector.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(vector_\) bbox.dev)B
1032 12390($\(SETMOD\) vector $\(vector_\))B
1032 12230($\(ADDMOD\) vector -include bbox)B
360 11910(gdevvec.$\(OBJ\): gdevvec.c $\(GXERR\) $\(math__h\) $\(memory__h\) $\(string__h\)\\)B
444 11750($\(gdevvec_h\) $\(gp_h\) $\(gscspace_h\) $\(gsparam_h\) $\(gsutil_h\)\\)B
444 11590($\(gxdcolor_h\) $\(gxfixed_h\) $\(gxpaint_h\)\\)B
444 11430($\(gzcpath_h\) $\(gzpath_h\))B
360 11110(# ---------------- Image scaling filter ---------------- #)B
360 10790(iscale_=siscale.$\(OBJ\))B
360 10630(iscale.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(iscale_\))B
1032 10470($\(SETMOD\) iscale $\(iscale_\))B
360 10150(siscale.$\(OBJ\): siscale.c $\(AK\) $\(math__h\) $\(memory__h\) $\(stdio__h\) \\)B
528 9990($\(siscale_h\) $\(strimpl_h\))B
360 9670(# ---------------- RasterOp et al ---------------- #)B
360 9510(# Currently this module is required, but it should be optional.)B
360 9190(roplib_=gdevmrop.$\(OBJ\) gsrop.$\(OBJ\) gsroptab.$\(OBJ\))B
360 9030(roplib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(roplib_\))B
1032 8870($\(SETMOD\) roplib $\(roplib_\))B
1032 8710($\(ADDMOD\) roplib -init roplib)B
360 8390(gdevrun.$\(OBJ\): gdevrun.c $\(GXERR\) $\(memory__h\) \\)B
528 8230($\(gxdevice_h\) $\(gxdevmem_h\))B
360 7910(gdevmrop.$\(OBJ\): gdevmrop.c $\(GXERR\) $\(memory__h\) \\)B
528 7750($\(gsbittab_h\) $\(gsropt_h\) \\)B
528 7590($\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gxdevrop_h\) \\)B
528 7430($\(gdevmrop_h\))B
360 7110(gsrop.$\(OBJ\): gsrop.c $\(GXERR\) \\)B
528 6950($\(gsrop_h\) $\(gzstate_h\))B
360 6630(gsroptab.$\(OBJ\): gsroptab.c $\(stdpre_h\) $\(gsropt_h\))B
1032 6470($\(CCLEAF\) gsroptab.c)B
360 6150(# -------- Composite \(PostScript Type 0\) font support -------- #)B
360 5830(cmaplib_=gsfcmap.$\(OBJ\))B
360 5670(cmaplib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(cmaplib_\))B
1032 5510($\(SETMOD\) cmaplib $\(cmaplib_\))B
360 5190(gsfcmap.$\(OBJ\): gsfcmap.c $\(GXERR\)\\)B
444 5030($\(gsstruct_h\) $\(gxfcmap_h\))B
360 4710(psf0lib_=gschar0.$\(OBJ\) gsfont0.$\(OBJ\))B
360 4550(psf0lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) cmaplib.dev $\(psf0lib_\))B
1032 4390($\(SETMOD\) psf0lib $\(psf0lib_\))B
8592 14470($\(ADDMOD\) psf0lib -include cmaplib)B
7920 14150(gschar0.$\(OBJ\): gschar0.c $\(GXERR\) $\(memory__h\)\\)B
8004 13990($\(gsstruct_h\) $\(gxfixed_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 13830($\(gsfcmap_h\) $\(gxfont_h\) $\(gxfont0_h\) $\(gxchar_h\))B
7920 13510(gsfont0.$\(OBJ\): gsfont0.c $\(GXERR\) $\(memory__h\)\\)B
8004 13350($\(gsmatrix_h\) $\(gsstruct_h\) $\(gxfixed_h\) $\(gxdevmem_h\) $\(gxfcache_h\)\\)B
8004 13190($\(gxfont_h\) $\(gxfont0_h\) $\(gxchar_h\) $\(gxdevice_h\))B
7920 12870(# ---------------- Pattern color ---------------- #)B
7920 12550(patlib_=gspcolor.$\(OBJ\) gxclip2.$\(OBJ\) gxpcmap.$\(OBJ\))B
7920 12390(patlib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) cmyklib.dev psl2cs.dev $\(patlib_\))B
8592 12230($\(SETMOD\) patlib -include cmyklib psl2cs)B
8592 12070($\(ADDMOD\) patlib -obj $\(patlib_\))B
7920 11750(gspcolor.$\(OBJ\): gspcolor.c $\(GXERR\) $\(math__h\) \\)B
8088 11590($\(gsimage_h\) $\(gspath_h\) $\(gsrop_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
8088 11430($\(gxarith_h\) $\(gxcolor2_h\) $\(gxcoord_h\) $\(gxclip2_h\) $\(gxcspace_h\) \\)B
8088 11270($\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\) \\)B
8088 11110($\(gxfixed_h\) $\(gxmatrix_h\) $\(gxpath_h\) $\(gxpcolor_h\) $\(gzstate_h\))B
7920 10790(gxclip2.$\(OBJ\): gxclip2.c $\(GXERR\) $\(memory__h\) \\)B
8088 10630($\(gsstruct_h\) $\(gxclip2_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
7920 10310(gxpcmap.$\(OBJ\): gxpcmap.c $\(GXERR\) $\(math__h\) $\(memory__h\)\\)B
8004 10150($\(gsstruct_h\) $\(gsutil_h\)\\)B
8004 9990($\(gxcolor2_h\) $\(gxcspace_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 9830($\(gxfixed_h\) $\(gxmatrix_h\) $\(gxpcolor_h\)\\)B
8004 9670($\(gzcpath_h\) $\(gzpath_h\) $\(gzstate_h\))B
7920 9350(# ---------------- PostScript Type 1 \(and Type 4\) fonts ---------------- #)B
7920 9030(type1lib_=gxtype1.$\(OBJ\) gxhint1.$\(OBJ\) gxhint2.$\(OBJ\) gxhint3.$\(OBJ\))B
7920 8710(gscrypt1_h=gscrypt1.h)B
7920 8550(gstype1_h=gstype1.h)B
7920 8390(gxfont1_h=gxfont1.h)B
7920 8230(gxop1_h=gxop1.h)B
7920 8070(gxtype1_h=gxtype1.h $\(gscrypt1_h\) $\(gstype1_h\) $\(gxop1_h\))B
7920 7750(gxtype1.$\(OBJ\): gxtype1.c $\(GXERR\) $\(math__h\)\\)B
8004 7590($\(gsccode_h\) $\(gsline_h\) $\(gsstruct_h\)\\)B
8004 7430($\(gxarith_h\) $\(gxcoord_h\) $\(gxfixed_h\) $\(gxmatrix_h\)\\)B
8004 7270($\(gxfont_h\) $\(gxfont1_h\) $\(gxistate_h\) $\(gxtype1_h\)\\)B
8004 7110($\(gzpath_h\))B
7920 6790(gxhint1.$\(OBJ\): gxhint1.c $\(GXERR\)\\)B
8004 6630($\(gxarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxchar_h\)\\)B
8004 6470($\(gxfont_h\) $\(gxfont1_h\) $\(gxtype1_h\))B
7920 6150(gxhint2.$\(OBJ\): gxhint2.c $\(GXERR\) $\(memory__h\)\\)B
8004 5990($\(gxarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxchar_h\)\\)B
8004 5830($\(gxfont_h\) $\(gxfont1_h\) $\(gxtype1_h\))B
7920 5510(gxhint3.$\(OBJ\): gxhint3.c $\(GXERR\)\\)B
8004 5350($\(gxarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxchar_h\)\\)B
8004 5190($\(gxfont_h\) $\(gxfont1_h\) $\(gxtype1_h\)\\)B
8004 5030($\(gzpath_h\))B
7920 4710(# Type 1 charstrings)B
7920 4390(psf1lib_=gstype1.$\(OBJ\))B
EndPage
%%Page: ? 12
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](9)Gaudy
0 F
360 14470(psf1lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(psf1lib_\) $\(type1lib_\))B
1032 14310($\(SETMOD\) psf1lib $\(psf1lib_\))B
1032 14150($\(ADDMOD\) psf1lib $\(type1lib_\))B
1032 13990($\(ADDMOD\) psf1lib -init gstype1)B
360 13670(gstype1.$\(OBJ\): gstype1.c $\(GXERR\) $\(math__h\) $\(memory__h\)\\)B
444 13510($\(gsstruct_h\)\\)B
444 13350($\(gxarith_h\) $\(gxcoord_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxchar_h\)\\)B
444 13190($\(gxfont_h\) $\(gxfont1_h\) $\(gxistate_h\) $\(gxtype1_h\)\\)B
444 13030($\(gzpath_h\))B
360 12710(# Type 2 charstrings)B
360 12390(psf2lib_=gstype2.$\(OBJ\))B
360 12230(psf2lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(psf2lib_\) $\(type1lib_\))B
1032 12070($\(SETMOD\) psf2lib $\(psf2lib_\))B
1032 11910($\(ADDMOD\) psf2lib $\(type1lib_\))B
1032 11750($\(ADDMOD\) psf2lib -init gstype2)B
360 11430(gstype2.$\(OBJ\): gstype2.c $\(GXERR\) $\(math__h\) $\(memory__h\)\\)B
444 11270($\(gsstruct_h\)\\)B
444 11110($\(gxarith_h\) $\(gxcoord_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gxchar_h\)\\)B
444 10950($\(gxfont_h\) $\(gxfont1_h\) $\(gxistate_h\) $\(gxtype1_h\)\\)B
444 10790($\(gzpath_h\))B
360 10470(# ---------------- TrueType and PostScript Type 42 fonts ---------------- #)B
360 10150(ttflib_=gstype42.$\(OBJ\))B
360 9990(ttflib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(ttflib_\))B
1032 9830($\(SETMOD\) ttflib $\(ttflib_\))B
360 9510(gxfont42_h=gxfont42.h)B
360 9190(gstype42.$\(OBJ\): gstype42.c $\(GXERR\) $\(memory__h\) \\)B
528 9030($\(gsccode_h\) $\(gsmatrix_h\) $\(gsstruct_h\) \\)B
528 8870($\(gxfixed_h\) $\(gxfont_h\) $\(gxfont42_h\) $\(gxistate_h\) $\(gxpath_h\))B
360 8550(# -------- Level 1 color extensions \(CMYK color and colorimage\) -------- #)B
360 8230(cmyklib_=gscolor1.$\(OBJ\) gsht1.$\(OBJ\))B
360 8070(cmyklib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(cmyklib_\))B
1032 7910($\(SETMOD\) cmyklib $\(cmyklib_\))B
1032 7750($\(ADDMOD\) cmyklib -init gscolor1)B
360 7430(gscolor1.$\(OBJ\): gscolor1.c $\(GXERR\) \\)B
528 7270($\(gsccolor_h\) $\(gscolor1_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
528 7110($\(gxcmap_h\) $\(gxcspace_h\) $\(gxdcconv_h\) $\(gxdevice_h\) \\)B
528 6950($\(gzstate_h\))B
360 6630(gsht1.$\(OBJ\): gsht1.c $\(GXERR\) $\(memory__h\)\\)B
444 6470($\(gsstruct_h\) $\(gsutil_h\) $\(gxdevice_h\) $\(gzht_h\) $\(gzstate_h\))B
360 6150(colimlib_=gximage3.$\(OBJ\))B
360 5990(colimlib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(colimlib_\))B
1032 5830($\(SETMOD\) colimlib $\(colimlib_\))B
1032 5670($\(ADDMOD\) colimlib -init gximage3)B
360 5350(gximage3.$\(OBJ\): gximage3.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
444 5190($\(gsccolor_h\) $\(gspaint_h\)\\)B
444 5030($\(gxarith_h\) $\(gxcmap_h\) $\(gxcpath_h\) $\(gxdcconv_h\) $\(gxdcolor_h\)\\)B
444 4870($\(gxdevice_h\) $\(gxdevmem_h\) $\(gxfixed_h\) $\(gxfrac_h\)\\)B
444 4710($\(gximage_h\) $\(gxistate_h\) $\(gxmatrix_h\)\\)B
444 4550($\(gzpath_h\) $\(gzstate_h\))B
7920 14470(# ---------------- HSB color ---------------- #)B
7920 14150(hsblib_=gshsb.$\(OBJ\))B
7920 13990(hsblib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(hsblib_\))B
8592 13830($\(SETMOD\) hsblib $\(hsblib_\))B
7920 13510(gshsb.$\(OBJ\): gshsb.c $\(GX\) \\)B
8088 13350($\(gscolor_h\) $\(gshsb_h\) $\(gxfrac_h\))B
7920 13030(# ---- Level 1 path miscellany \(arcs, pathbbox, path enumeration\) ---- #)B
7920 12710(path1lib_=gspath1.$\(OBJ\))B
7920 12550(path1lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(path1lib_\))B
8592 12390($\(SETMOD\) path1lib $\(path1lib_\))B
7920 12070(gspath1.$\(OBJ\): gspath1.c $\(GXERR\) $\(math__h\) \\)B
8088 11910($\(gscoord_h\) $\(gspath_h\) $\(gsstruct_h\) \\)B
8088 11750($\(gxfarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\) \\)B
8088 11590($\(gzstate_h\) $\(gzpath_h\))B
7920 11270(# --------------- Level 2 color space and color image support --------------- #)B
7920 10950(psl2cs_=gscolor2.$\(OBJ\))B
7920 10790(psl2cs.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(psl2cs_\))B
8592 10630($\(SETMOD\) psl2cs $\(psl2cs_\))B
7920 10310(gscolor2.$\(OBJ\): gscolor2.c $\(GXERR\) \\)B
8088 10150($\(gxarith_h\) $\(gxcolor2_h\) $\(gxcspace_h\) $\(gxfixed_h\) $\(gxmatrix_h\) \\)B
8088 9990($\(gzstate_h\))B
7920 9670(psl2lib_=gximage4.$\(OBJ\) gximage5.$\(OBJ\))B
7920 9510(psl2lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(psl2lib_\) colimlib.dev psl2cs.dev)B
8592 9350($\(SETMOD\) psl2lib $\(psl2lib_\))B
8592 9190($\(ADDMOD\) psl2lib -init gximage4 gximage5)B
8592 9030($\(ADDMOD\) psl2lib -include colimlib psl2cs)B
7920 8710(gximage4.$\(OBJ\): gximage4.c $\(GXERR\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 8550($\(gsccolor_h\) $\(gspaint_h\)\\)B
8004 8390($\(gxarith_h\) $\(gxcmap_h\) $\(gxcpath_h\) $\(gxdcolor_h\) $\(gxdevice_h\)\\)B
8004 8230($\(gxdevmem_h\) $\(gxfixed_h\) $\(gxfrac_h\) $\(gximage_h\) $\(gxistate_h\)\\)B
8004 8070($\(gxmatrix_h\)\\)B
8004 7910($\(gzpath_h\))B
7920 7590(gximage5.$\(OBJ\): gximage5.c $\(GXERR\) $\(math__h\) $\(memory__h\) $\(gpcheck_h\)\\)B
8004 7430($\(gsccolor_h\) $\(gspaint_h\)\\)B
8004 7270($\(gxarith_h\) $\(gxcmap_h\) $\(gxcpath_h\) $\(gxdcolor_h\) $\(gxdevice_h\)\\)B
8004 7110($\(gxdevmem_h\) $\(gxfixed_h\) $\(gxfrac_h\) $\(gximage_h\) $\(gxistate_h\)\\)B
8004 6950($\(gxmatrix_h\)\\)B
8004 6790($\(gzpath_h\))B
7920 6470(# ---------------- Display Postscript / Level 2 support ---------------- #)B
7920 6150(dps2lib_=gsdps1.$\(OBJ\))B
7920 5990(dps2lib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(dps2lib_\))B
8592 5830($\(SETMOD\) dps2lib $\(dps2lib_\))B
7920 5510(gsdps1.$\(OBJ\): gsdps1.c $\(GXERR\) $\(math__h\)\\)B
8004 5350($\(gscoord_h\) $\(gsmatrix_h\) $\(gspaint_h\) $\(gspath_h\) $\(gspath2_h\)\\)B
8004 5190($\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) $\(gzcpath_h\) $\(gzpath_h\) $\(gzstate_h\))B
7920 4870(# ---------------- CIE color ---------------- #)B
7920 4550(cielib_=gscie.$\(OBJ\) gxctable.$\(OBJ\))B
7920 4390(cielib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(cielib_\))B
EndPage
%%Page: ? 13
StartPage
Landscape
()(lib.mak)[(97/06/06)(11:51:28)](10)Gaudy
0 F
1032 14470($\(SETMOD\) cielib $\(cielib_\))B
360 14150(gscie.$\(OBJ\): gscie.c $\(GXERR\) $\(math__h\) \\)B
528 13990($\(gscie_h\) $\(gscolor2_h\) $\(gsmatrix_h\) $\(gsstruct_h\) \\)B
528 13830($\(gxarith_h\) $\(gxcmap_h\) $\(gxcspace_h\) $\(gxdevice_h\) $\(gzstate_h\))B
360 13510(gxctable.$\(OBJ\): gxctable.c $\(GX\) \\)B
528 13350($\(gxfixed_h\) $\(gxfrac_h\) $\(gxctable_h\))B
360 13030(# ---------------- Separation colors ---------------- #)B
360 12710(seprlib_=gscsepr.$\(OBJ\))B
360 12550(seprlib.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) $\(seprlib_\))B
1032 12390($\(SETMOD\) seprlib $\(seprlib_\))B
360 12070(gscsepr.$\(OBJ\): gscsepr.c $\(GXERR\)\\)B
444 11910($\(gscsepr_h\) $\(gsmatrix_h\) $\(gsrefct_h\)\\)B
444 11750($\(gxcolor2_h\) $\(gxcspace_h\) $\(gxfixed_h\) $\(gzstate_h\))B
360 11430(# ----------------------- Platform-specific modules ----------------------- #)B
360 11270(# Platform-specific code doesn't really belong here: this is code that is)B
360 11110(# shared among multiple platforms.)B
360 10790(# Frame buffer implementations.)B
360 10470(gp_nofb.$\(OBJ\): gp_nofb.c $\(GX\) \\)B
528 10310($\(gp_h\) $\(gxdevice_h\))B
360 9990(gp_dosfb.$\(OBJ\): gp_dosfb.c $\(AK\) $\(malloc__h\) $\(memory__h\)\\)B
444 9830($\(gx_h\) $\(gp_h\) $\(gserrors_h\) $\(gxdevice_h\))B
360 9510(# MS-DOS file system, also used by Desqview/X.)B
360 9350(gp_dosfs.$\(OBJ\): gp_dosfs.c $\(AK\) $\(dos__h\) $\(gp_h\) $\(gx_h\))B
360 9030(# MS-DOS file enumeration, *not* used by Desqview/X.)B
360 8870(gp_dosfe.$\(OBJ\): gp_dosfe.c $\(AK\) $\(stdio__h\) $\(memory__h\) $\(string__h\) \\)B
528 8710($\(dos__h\) $\(gstypes_h\) $\(gsmemory_h\) $\(gsstruct_h\) $\(gp_h\) $\(gsutil_h\))B
360 8390(# Other MS-DOS facilities.)B
360 8230(gp_msdos.$\(OBJ\): gp_msdos.c $\(AK\) $\(dos__h\) $\(stdio__h\) $\(string__h\)\\)B
444 8070($\(gsmemory_h\) $\(gstypes_h\) $\(gp_h\))B
360 7750(# Unix\(-like\) file system, also used by Desqview/X.)B
360 7590(gp_unifs.$\(OBJ\): gp_unifs.c $\(AK\) $\(memory__h\) $\(string__h\) $\(gx_h\) $\(gp_h\) \\)B
528 7430($\(gsstruct_h\) $\(gsutil_h\) $\(stat__h\) $\(dirent__h\))B
360 7110(# Unix\(-like\) file name syntax, *not* used by Desqview/X.)B
360 6950(gp_unifn.$\(OBJ\): gp_unifn.c $\(AK\) $\(gx_h\) $\(gp_h\))B
360 6630(# ----------------------------- Main program ------------------------------ #)B
360 6310(# Main program for library testing)B
360 5990(gslib.$\(OBJ\): gslib.c $\(AK\) $\(math__h\) \\)B
528 5830($\(gx_h\) $\(gp_h\) $\(gserrors_h\) $\(gsmatrix_h\) $\(gsstate_h\) $\(gscspace_h\) \\)B
528 5670($\(gscdefs_h\) $\(gscolor2_h\) $\(gscoord_h\) $\(gslib_h\) $\(gsparam_h\) \\)B
528 5510($\(gspaint_h\) $\(gspath_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
528 5350($\(gxalloc_h\) $\(gxdevice_h\))B
EndPage
%%Page: ? 14
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# \(Platform-independent\) makefile for language interpreters.)B
360 11590(# See the end of gs.mak for where this fits into the build process.)B
360 11270(# Define the name of this makefile.)B
360 11110(INT_MAK=int.mak)B
360 10790(# ======================== Interpreter support ======================== #)B
360 10470(# This is support code for all interpreters, not just PostScript and PDF.)B
360 10310(# It knows about the PostScript data types, but isn't supposed to)B
360 10150(# depend on anything outside itself.)B
360 9830(errors_h=errors.h)B
360 9670(idebug_h=idebug.h)B
360 9510(idict_h=idict.h)B
360 9350(igc_h=igc.h)B
360 9190(igcstr_h=igcstr.h)B
360 9030(iname_h=iname.h)B
360 8870(inamedef_h=inamedef.h $\(gconfigv_h\) $\(iname_h\))B
360 8710(ipacked_h=ipacked.h)B
360 8550(iref_h=iref.h)B
360 8390(isave_h=isave.h)B
360 8230(isstate_h=isstate.h)B
360 8070(istruct_h=istruct.h $\(gsstruct_h\))B
360 7910(iutil_h=iutil.h)B
360 7750(ivmspace_h=ivmspace.h $\(gsgc_h\))B
360 7590(opdef_h=opdef.h)B
360 7430(# Nested include files)B
360 7270(ghost_h=ghost.h $\(gx_h\) $\(iref_h\))B
360 7110(imemory_h=imemory.h $\(gsalloc_h\) $\(ivmspace_h\))B
360 6950(ialloc_h=ialloc.h $\(imemory_h\))B
360 6790(iastruct_h=iastruct.h $\(gxobj_h\) $\(ialloc_h\))B
360 6630(iastate_h=iastate.h $\(gxalloc_h\) $\(ialloc_h\) $\(istruct_h\))B
360 6470(store_h=store.h $\(ialloc_h\))B
360 6150(GH=$\(AK\) $\(ghost_h\))B
360 5830(isupport1_=ialloc.$\(OBJ\) igc.$\(OBJ\) igcref.$\(OBJ\) igcstr.$\(OBJ\))B
360 5670(isupport2_=ilocate.$\(OBJ\) iname.$\(OBJ\) isave.$\(OBJ\))B
360 5510(isupport_=$\(isupport1_\) $\(isupport2_\))B
360 5350(isupport.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(isupport_\))B
1032 5190($\(SETMOD\) isupport $\(isupport1_\))B
1032 5030($\(ADDMOD\) isupport -obj $\(isupport2_\))B
1032 4870($\(ADDMOD\) isupport -init igcref)B
360 4550(ialloc.$\(OBJ\): ialloc.c $\(AK\) $\(memory__h\) $\(gx_h\)\\)B
444 4390($\(errors_h\) $\(gsstruct_h\) $\(gxarith_h\)\\)B
8004 14470($\(iastate_h\) $\(iref_h\) $\(ivmspace_h\) $\(store_h\))B
7920 14150(# igc.c, igcref.c, and igcstr.c should really be in the dpsand2 list,)B
7920 13990(# but since all the GC enumeration and relocation routines refer to them,)B
7920 13830(# it's too hard to separate them out from the Level 1 base.)B
7920 13670(igc.$\(OBJ\): igc.c $\(GH\) $\(memory__h\)\\)B
8088 13510($\(errors_h\) $\(gsexit_h\) $\(gsmdebug_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
8088 13350($\(iastate_h\) $\(idict_h\) $\(igc_h\) $\(igcstr_h\) $\(inamedef_h\) \\)B
8088 13190($\(ipacked_h\) $\(isave_h\) $\(isstate_h\) $\(istruct_h\) $\(opdef_h\))B
7920 12870(igcref.$\(OBJ\): igcref.c $\(GH\) $\(memory__h\)\\)B
8004 12710($\(gsexit_h\) $\(gsstruct_h\)\\)B
8004 12550($\(iastate_h\) $\(idebug_h\) $\(igc_h\) $\(iname_h\) $\(ipacked_h\) $\(store_h\))B
7920 12230(igcstr.$\(OBJ\): igcstr.c $\(GH\) $\(memory__h\)\\)B
8004 12070($\(gsmdebug_h\) $\(gsstruct_h\) $\(iastate_h\) $\(igcstr_h\))B
7920 11750(ilocate.$\(OBJ\): ilocate.c $\(GH\) $\(memory__h\)\\)B
8004 11590($\(errors_h\) $\(gsexit_h\) $\(gsstruct_h\)\\)B
8004 11430($\(iastate_h\) $\(idict_h\) $\(igc_h\) $\(igcstr_h\) $\(iname_h\)\\)B
8004 11270($\(ipacked_h\) $\(isstate_h\) $\(iutil_h\) $\(ivmspace_h\)\\)B
8004 11110($\(store_h\))B
7920 10790(iname.$\(OBJ\): iname.c $\(GH\) $\(memory__h\) $\(string__h\)\\)B
8004 10630($\(gsstruct_h\) $\(gxobj_h\)\\)B
8004 10470($\(errors_h\) $\(imemory_h\) $\(inamedef_h\) $\(isave_h\) $\(store_h\))B
7920 10150(isave.$\(OBJ\): isave.c $\(GH\) $\(memory__h\)\\)B
8004 9990($\(errors_h\) $\(gsexit_h\) $\(gsstruct_h\) $\(gsutil_h\)\\)B
8004 9830($\(iastate_h\) $\(inamedef_h\) $\(isave_h\) $\(isstate_h\) $\(ivmspace_h\)\\)B
8004 9670($\(ipacked_h\) $\(store_h\))B
7920 9350(### Include files)B
7920 9030(idparam_h=idparam.h)B
7920 8870(ilevel_h=ilevel.h)B
7920 8710(iparam_h=iparam.h $\(gsparam_h\))B
7920 8550(istack_h=istack.h)B
7920 8390(iutil2_h=iutil2.h)B
7920 8230(opcheck_h=opcheck.h)B
7920 8070(opextern_h=opextern.h)B
7920 7910(# Nested include files)B
7920 7750(dstack_h=dstack.h $\(istack_h\))B
7920 7590(estack_h=estack.h $\(istack_h\))B
7920 7430(ostack_h=ostack.h $\(istack_h\))B
7920 7270(oper_h=oper.h $\(iutil_h\) $\(opcheck_h\) $\(opdef_h\) $\(opextern_h\) $\(ostack_h\))B
7920 6950(idebug.$\(OBJ\): idebug.c $\(GH\) $\(string__h\)\\)B
8004 6790($\(ialloc_h\) $\(idebug_h\) $\(idict_h\) $\(iname_h\) $\(istack_h\) $\(iutil_h\) $\(ivmspace_h\)\\)B
8004 6630($\(ostack_h\) $\(opdef_h\) $\(ipacked_h\) $\(store_h\))B
7920 6310(idict.$\(OBJ\): idict.c $\(GH\) $\(string__h\) $\(errors_h\)\\)B
8004 6150($\(ialloc_h\) $\(idebug_h\) $\(ivmspace_h\) $\(inamedef_h\) $\(ipacked_h\)\\)B
8004 5990($\(isave_h\) $\(store_h\) $\(iutil_h\) $\(idict_h\) $\(dstack_h\))B
7920 5670(idparam.$\(OBJ\): idparam.c $\(GH\) $\(memory__h\) $\(string__h\) $\(errors_h\)\\)B
8004 5510($\(gsmatrix_h\) $\(gsuid_h\)\\)B
8004 5350($\(idict_h\) $\(idparam_h\) $\(ilevel_h\) $\(imemory_h\) $\(iname_h\) $\(iutil_h\)\\)B
8004 5190($\(oper_h\) $\(store_h\))B
7920 4870(iparam.$\(OBJ\): iparam.c $\(GH\) $\(memory__h\) $\(string__h\) $\(errors_h\)\\)B
8004 4710($\(ialloc_h\) $\(idict_h\) $\(iname_h\) $\(imemory_h\) $\(iparam_h\) $\(istack_h\) $\(iutil_h\) $\(ivms)B
7920 4550(pace_h\)\\)B
8004 4390($\(opcheck_h\) $\(store_h\))B
EndPage
%%Page: ? 15
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](2)Gaudy
0 F
360 14310(istack.$\(OBJ\): istack.c $\(GH\) $\(memory__h\) \\)B
528 14150($\(errors_h\) $\(gsstruct_h\) $\(gsutil_h\) \\)B
528 13990($\(ialloc_h\) $\(istack_h\) $\(istruct_h\) $\(iutil_h\) $\(ivmspace_h\) $\(store_h\))B
360 13670(iutil.$\(OBJ\): iutil.c $\(GH\) $\(math__h\) $\(memory__h\) $\(string__h\)\\)B
444 13510($\(gsccode_h\) $\(gsmatrix_h\) $\(gsutil_h\) $\(gxfont_h\)\\)B
444 13350($\(errors_h\) $\(idict_h\) $\(imemory_h\) $\(iutil_h\) $\(ivmspace_h\)\\)B
444 13190($\(iname_h\) $\(ipacked_h\) $\(oper_h\) $\(store_h\))B
360 12870(# ======================== PostScript Level 1 ======================== #)B
360 12550(###### Include files)B
360 12230(files_h=files.h)B
360 12070(fname_h=fname.h)B
360 11910(ichar_h=ichar.h)B
360 11750(icharout_h=icharout.h)B
360 11590(icolor_h=icolor.h)B
360 11430(icontext_h=icontext.h $\(imemory_h\) $\(istack_h\))B
360 11270(icsmap_h=icsmap.h)B
360 11110(ifont_h=ifont.h $\(gsccode_h\) $\(gsstruct_h\))B
360 10950(iht_h=iht.h)B
360 10790(iimage_h=iimage.h)B
360 10630(imain_h=imain.h $\(gsexit_h\))B
360 10470(imainarg_h=imainarg.h)B
360 10310(iminst_h=iminst.h $\(imain_h\))B
360 10150(interp_h=interp.h)B
360 9990(iparray_h=iparray.h)B
360 9830(iscannum_h=iscannum.h)B
360 9670(istream_h=istream.h)B
360 9510(main_h=main.h $\(iminst_h\))B
360 9350(overlay_h=overlay.h)B
360 9190(sbwbs_h=sbwbs.h)B
360 9030(sfilter_h=sfilter.h $\(gstypes_h\))B
360 8870(shcgen_h=shcgen.h)B
360 8710(smtf_h=smtf.h)B
360 8550(# Nested include files)B
360 8390(bfont_h=bfont.h $\(ifont_h\))B
360 8230(ifilter_h=ifilter.h $\(istream_h\) $\(ivmspace_h\))B
360 8070(igstate_h=igstate.h $\(gsstate_h\) $\(gxstate_h\) $\(istruct_h\))B
360 7910(iscan_h=iscan.h $\(sa85x_h\) $\(sstring_h\))B
360 7750(sbhc_h=sbhc.h $\(shc_h\))B
360 7590(# Include files for optional features)B
360 7430(ibnum_h=ibnum.h)B
360 7110(### Initialization and scanning)B
360 6790(iconfig=iconfig$\(CONFIG\))B
360 6630($\(iconfig\).$\(OBJ\): iconf.c $\(stdio__h\) \\)B
528 6470($\(gconfig_h\) $\(gscdefs_h\) $\(gsmemory_h\) \\)B
528 6310($\(files_h\) $\(iminst_h\) $\(iref_h\) $\(ivmspace_h\) $\(opdef_h\) $\(stream_h\))B
1032 6150($\(RM_\) gconfig.h)B
1032 5990($\(RM_\) $\(iconfig\).c)B
1032 5830($\(CP_\) $\(gconfig_h\) gconfig.h)B
1032 5670($\(CP_\) iconf.c $\(iconfig\).c)B
1032 5510($\(CCC\) $\(iconfig\).c)B
1032 5350($\(RM_\) gconfig.h)B
1032 5190($\(RM_\) $\(iconfig\).c)B
360 4870(iinit.$\(OBJ\): iinit.c $\(GH\) $\(string__h\)\\)B
444 4710($\(gscdefs_h\) $\(gsexit_h\) $\(gsstruct_h\)\\)B
444 4550($\(ialloc_h\) $\(idict_h\) $\(dstack_h\) $\(errors_h\)\\)B
444 4390($\(ilevel_h\) $\(iname_h\) $\(interp_h\) $\(opdef_h\)\\)B
8004 14470($\(ipacked_h\) $\(iparray_h\) $\(iutil_h\) $\(ivmspace_h\) $\(store_h\))B
7920 14150(iscan.$\(OBJ\): iscan.c $\(GH\) $\(memory__h\)\\)B
8004 13990($\(ialloc_h\) $\(idict_h\) $\(dstack_h\) $\(errors_h\) $\(files_h\)\\)B
8004 13830($\(ilevel_h\) $\(iutil_h\) $\(iscan_h\) $\(iscannum_h\) $\(istruct_h\) $\(ivmspace_h\)\\)B
8004 13670($\(iname_h\) $\(ipacked_h\) $\(iparray_h\) $\(istream_h\) $\(ostack_h\) $\(store_h\)\\)B
8004 13510($\(stream_h\) $\(strimpl_h\) $\(sfilter_h\) $\(scanchar_h\))B
7920 13190(iscannum.$\(OBJ\): iscannum.c $\(GH\) $\(math__h\)\\)B
8088 13030($\(errors_h\) $\(iscannum_h\) $\(scanchar_h\) $\(scommon_h\) $\(store_h\))B
7920 12710(### Streams)B
7920 12390(sfilter1.$\(OBJ\): sfilter1.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 12230($\(sfilter_h\) $\(strimpl_h\))B
7920 11910(###### Operators)B
7920 11590(OP=$\(GH\) $\(errors_h\) $\(oper_h\))B
7920 11270(### Non-graphics operators)B
7920 10950(zarith.$\(OBJ\): zarith.c $\(OP\) $\(math__h\) $\(store_h\))B
7920 10630(zarray.$\(OBJ\): zarray.c $\(OP\) $\(memory__h\) $\(ialloc_h\) $\(ipacked_h\) $\(store_h\))B
7920 10310(zcontrol.$\(OBJ\): zcontrol.c $\(OP\) $\(string__h\)\\)B
8004 10150($\(estack_h\) $\(files_h\) $\(ipacked_h\) $\(iutil_h\) $\(store_h\) $\(stream_h\))B
7920 9830(zdict.$\(OBJ\): zdict.c $\(OP\) \\)B
8088 9670($\(dstack_h\) $\(idict_h\) $\(ilevel_h\) $\(iname_h\) $\(ipacked_h\) $\(ivmspace_h\) \\)B
8088 9510($\(store_h\))B
7920 9190(zfile.$\(OBJ\): zfile.c $\(OP\) $\(memory__h\) $\(string__h\) $\(gp_h\)\\)B
8004 9030($\(gsstruct_h\) $\(gxiodev_h\) \\)B
8004 8870($\(ialloc_h\) $\(estack_h\) $\(files_h\) $\(fname_h\) $\(ilevel_h\) $\(interp_h\) $\(iutil_h\)\\)B
8004 8710($\(isave_h\) $\(main_h\) $\(sfilter_h\) $\(stream_h\) $\(strimpl_h\) $\(store_h\))B
7920 8390(zfileio.$\(OBJ\): zfileio.c $\(OP\) $\(gp_h\) \\)B
8088 8230($\(files_h\) $\(ifilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\) \\)B
8088 8070($\(gsmatrix_h\) $\(gxdevice_h\) $\(gxdevmem_h\))B
7920 7750(zfilter.$\(OBJ\): zfilter.c $\(OP\) $\(memory__h\)\\)B
8004 7590($\(gsstruct_h\) $\(files_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(ifilter_h\) \\)B
8004 7430($\(sfilter_h\) $\(srlx_h\) $\(sstring_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
7920 7110(zfname.$\(OBJ\): zfname.c $\(OP\) $\(memory__h\)\\)B
8004 6950($\(fname_h\) $\(gxiodev_h\) $\(ialloc_h\) $\(stream_h\))B
7920 6630(zfproc.$\(OBJ\): zfproc.c $\(GH\) $\(memory__h\)\\)B
8004 6470($\(errors_h\) $\(oper_h\)\\)B
8004 6310($\(estack_h\) $\(files_h\) $\(gsstruct_h\) $\(ialloc_h\) $\(ifilter_h\) $\(istruct_h\)\\)B
8004 6150($\(store_h\) $\(stream_h\) $\(strimpl_h\))B
7920 5830(zgeneric.$\(OBJ\): zgeneric.c $\(OP\) $\(memory__h\)\\)B
8004 5670($\(idict_h\) $\(estack_h\) $\(ivmspace_h\) $\(iname_h\) $\(ipacked_h\) $\(store_h\))B
7920 5350(ziodev.$\(OBJ\): ziodev.c $\(OP\) $\(memory__h\) $\(stdio__h\) $\(string__h\)\\)B
8004 5190($\(gp_h\) $\(gpcheck_h\)\\)B
8004 5030($\(gsstruct_h\) $\(gxiodev_h\)\\)B
8004 4870($\(files_h\) $\(ialloc_h\) $\(ivmspace_h\) $\(store_h\) $\(stream_h\))B
7920 4550(zmath.$\(OBJ\): zmath.c $\(OP\) $\(math__h\) $\(gxfarith_h\) $\(store_h\))B
EndPage
%%Page: ? 16
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](3)Gaudy
0 F
360 14470(zmisc.$\(OBJ\): zmisc.c $\(OP\) $\(gscdefs_h\) $\(gp_h\) \\)B
528 14310($\(errno__h\) $\(memory__h\) $\(string__h\) \\)B
528 14150($\(ialloc_h\) $\(idict_h\) $\(dstack_h\) $\(iname_h\) $\(ivmspace_h\) $\(ipacked_h\) $\(store_h\))B
360 13830(zpacked.$\(OBJ\): zpacked.c $\(OP\) \\)B
528 13670($\(ialloc_h\) $\(idict_h\) $\(ivmspace_h\) $\(iname_h\) $\(ipacked_h\) $\(iparray_h\) \\)B
528 13510($\(istack_h\) $\(store_h\))B
360 13190(zrelbit.$\(OBJ\): zrelbit.c $\(OP\) $\(gsutil_h\) $\(store_h\) $\(idict_h\))B
360 12870(zstack.$\(OBJ\): zstack.c $\(OP\) $\(memory__h\)\\)B
444 12710($\(ialloc_h\) $\(istack_h\) $\(store_h\))B
360 12390(zstring.$\(OBJ\): zstring.c $\(OP\) $\(memory__h\)\\)B
444 12230($\(gsutil_h\)\\)B
444 12070($\(ialloc_h\) $\(iname_h\) $\(ivmspace_h\) $\(store_h\))B
360 11750(zsysvm.$\(OBJ\): zsysvm.c $\(GH\)\\)B
444 11590($\(ialloc_h\) $\(ivmspace_h\) $\(oper_h\) $\(store_h\))B
360 11270(ztoken.$\(OBJ\): ztoken.c $\(OP\) \\)B
528 11110($\(estack_h\) $\(files_h\) $\(gsstruct_h\) $\(iscan_h\) \\)B
528 10950($\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
360 10630(ztype.$\(OBJ\): ztype.c $\(OP\) $\(math__h\) $\(memory__h\) $\(string__h\)\\)B
444 10470($\(dstack_h\) $\(idict_h\) $\(imemory_h\) $\(iname_h\)\\)B
444 10310($\(iscan_h\) $\(iutil_h\) $\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
360 9990(zvmem.$\(OBJ\): zvmem.c $\(OP\)\\)B
444 9830($\(dstack_h\) $\(estack_h\) $\(files_h\)\\)B
444 9670($\(ialloc_h\) $\(idict_h\) $\(igstate_h\) $\(isave_h\) $\(store_h\) $\(stream_h\)\\)B
444 9510($\(gsmatrix_h\) $\(gsstate_h\) $\(gsstruct_h\))B
360 9190(### Graphics operators)B
360 8870(zchar.$\(OBJ\): zchar.c $\(OP\)\\)B
444 8710($\(gsstruct_h\) $\(gxarith_h\) $\(gxfixed_h\) $\(gxmatrix_h\)\\)B
444 8550($\(gxchar_h\) $\(gxdevice_h\) $\(gxfont_h\) $\(gzpath_h\) $\(gzstate_h\)\\)B
444 8390($\(dstack_h\) $\(estack_h\) $\(ialloc_h\) $\(ichar_h\) $\(idict_h\) $\(ifont_h\)\\)B
444 8230($\(ilevel_h\) $\(iname_h\) $\(igstate_h\) $\(ipacked_h\) $\(store_h\))B
360 7910(# zcharout is used for Type 1 and Type 42 fonts only.)B
360 7750(zcharout.$\(OBJ\): zcharout.c $\(OP\)\\)B
444 7590($\(gschar_h\) $\(gxdevice_h\) $\(gxfont_h\)\\)B
444 7430($\(dstack_h\) $\(estack_h\) $\(ichar_h\) $\(icharout_h\)\\)B
444 7270($\(idict_h\) $\(ifont_h\) $\(igstate_h\) $\(store_h\))B
360 6950(zcolor.$\(OBJ\): zcolor.c $\(OP\) \\)B
528 6790($\(gxfixed_h\) $\(gxmatrix_h\) $\(gzstate_h\) $\(gxdevice_h\) $\(gxcmap_h\) \\)B
528 6630($\(ialloc_h\) $\(icolor_h\) $\(estack_h\) $\(iutil_h\) $\(igstate_h\) $\(store_h\))B
360 6310(zdevice.$\(OBJ\): zdevice.c $\(OP\) $\(string__h\)\\)B
444 6150($\(ialloc_h\) $\(idict_h\) $\(igstate_h\) $\(iname_h\) $\(interp_h\) $\(iparam_h\) $\(ivmspace_h\)\\)B
444 5990($\(gsmatrix_h\) $\(gsstate_h\) $\(gxdevice_h\) $\(store_h\))B
360 5670(zfont.$\(OBJ\): zfont.c $\(OP\)\\)B
444 5510($\(gschar_h\) $\(gsstruct_h\) $\(gxdevice_h\) $\(gxfont_h\) $\(gxfcache_h\)\\)B
444 5350($\(gzstate_h\)\\)B
444 5190($\(ialloc_h\) $\(idict_h\) $\(igstate_h\) $\(iname_h\) $\(isave_h\) $\(ivmspace_h\)\\)B
444 5030($\(bfont_h\) $\(store_h\))B
360 4710(zfont2.$\(OBJ\): zfont2.c $\(OP\) $\(memory__h\) $\(string__h\)\\)B
444 4550($\(gsmatrix_h\) $\(gxdevice_h\) $\(gschar_h\) $\(gxfixed_h\) $\(gxfont_h\)\\)B
444 4390($\(ialloc_h\) $\(bfont_h\) $\(idict_h\) $\(idparam_h\) $\(ilevel_h\) $\(iname_h\) $\(istruct_h\)\\)B
8004 14470($\(ipacked_h\) $\(store_h\))B
7920 14150(zgstate.$\(OBJ\): zgstate.c $\(OP\) \\)B
8088 13990($\(gsmatrix_h\) $\(ialloc_h\) $\(idict_h\) $\(igstate_h\) $\(istruct_h\) $\(store_h\))B
7920 13670(zht.$\(OBJ\): zht.c $\(OP\) $\(memory__h\)\\)B
8004 13510($\(gsmatrix_h\) $\(gsstate_h\) $\(gsstruct_h\) $\(gxdevice_h\) $\(gzht_h\) \\)B
8004 13350($\(ialloc_h\) $\(estack_h\) $\(igstate_h\) $\(iht_h\) $\(store_h\))B
7920 13030(zimage.$\(OBJ\): zimage.c $\(OP\) \\)B
8088 12870($\(estack_h\) $\(ialloc_h\) $\(ifilter_h\) $\(igstate_h\) $\(iimage_h\) $\(ilevel_h\) \\)B
8088 12710($\(gscspace_h\) $\(gsimage_h\) $\(gsmatrix_h\) $\(gsstruct_h\) \\)B
8088 12550($\(store_h\) $\(stream_h\))B
7920 12230(zmatrix.$\(OBJ\): zmatrix.c $\(OP\)\\)B
8004 12070($\(gsmatrix_h\) $\(igstate_h\) $\(gscoord_h\) $\(store_h\))B
7920 11750(zpaint.$\(OBJ\): zpaint.c $\(OP\)\\)B
8004 11590($\(gspaint_h\) $\(igstate_h\))B
7920 11270(zpath.$\(OBJ\): zpath.c $\(OP\) $\(math__h\) \\)B
8088 11110($\(gsmatrix_h\) $\(gspath_h\) $\(igstate_h\) $\(store_h\))B
7920 10790(# Define the base PostScript language interpreter.)B
7920 10630(# This is the subset of PostScript Level 1 required by our PDF reader.)B
7920 10310(INT1=icontext.$\(OBJ\) idebug.$\(OBJ\) idict.$\(OBJ\) idparam.$\(OBJ\))B
7920 10150(INT2=iinit.$\(OBJ\) interp.$\(OBJ\) iparam.$\(OBJ\) ireclaim.$\(OBJ\))B
7920 9990(INT3=iscan.$\(OBJ\) iscannum.$\(OBJ\) istack.$\(OBJ\) iutil.$\(OBJ\))B
7920 9830(INT4=scantab.$\(OBJ\) sfilter1.$\(OBJ\) sstring.$\(OBJ\) stream.$\(OBJ\))B
7920 9670(Z1=zarith.$\(OBJ\) zarray.$\(OBJ\) zcontrol.$\(OBJ\) zdict.$\(OBJ\))B
7920 9510(Z1OPS=zarith zarray zcontrol zdict)B
7920 9350(Z2=zfile.$\(OBJ\) zfileio.$\(OBJ\) zfilter.$\(OBJ\) zfname.$\(OBJ\) zfproc.$\(OBJ\))B
7920 9190(Z2OPS=zfile zfileio zfilter zfproc)B
7920 9030(Z3=zgeneric.$\(OBJ\) ziodev.$\(OBJ\) zmath.$\(OBJ\) zmisc.$\(OBJ\) zpacked.$\(OBJ\))B
7920 8870(Z3OPS=zgeneric ziodev zmath zmisc zpacked)B
7920 8710(Z4=zrelbit.$\(OBJ\) zstack.$\(OBJ\) zstring.$\(OBJ\) zsysvm.$\(OBJ\))B
7920 8550(Z4OPS=zrelbit zstack zstring zsysvm)B
7920 8390(Z5=ztoken.$\(OBJ\) ztype.$\(OBJ\) zvmem.$\(OBJ\))B
7920 8230(Z5OPS=ztoken ztype zvmem)B
7920 8070(Z6=zchar.$\(OBJ\) zcolor.$\(OBJ\) zdevice.$\(OBJ\) zfont.$\(OBJ\) zfont2.$\(OBJ\))B
7920 7910(Z6OPS=zchar zcolor zdevice zfont zfont2)B
7920 7750(Z7=zgstate.$\(OBJ\) zht.$\(OBJ\) zimage.$\(OBJ\) zmatrix.$\(OBJ\) zpaint.$\(OBJ\) zpath.$\(OBJ\))B
7920 7590(Z7OPS=zgstate zht zimage zmatrix zpaint zpath)B
7920 7430(# We have to be a little underhanded with *config.$\(OBJ\) so as to avoid)B
7920 7270(# circular definitions.)B
7920 7110(INT_OBJS=imainarg.$\(OBJ\) gsargs.$\(OBJ\) imain.$\(OBJ\) \\)B
8088 6950($\(INT1\) $\(INT2\) $\(INT3\) $\(INT4\) \\)B
8088 6790($\(Z1\) $\(Z2\) $\(Z3\) $\(Z4\) $\(Z5\) $\(Z6\) $\(Z7\))B
7920 6630(INT_CONFIG=$\(gconfig\).$\(OBJ\) $\(gscdefs\).$\(OBJ\) $\(iconfig\).$\(OBJ\) \\)B
8088 6470(iccinit$\(COMPILE_INITS\).$\(OBJ\))B
7920 6310(INT_ALL=$\(INT_OBJS\) $\(INT_CONFIG\))B
7920 6150(# We omit libcore.dev, which should be included here, because problems)B
7920 5990(# with the Unix linker require libcore to appear last in the link list)B
7920 5830(# when libcore is really a library.)B
7920 5670(# We omit $\(INT_CONFIG\) from the dependency list because they have special)B
7920 5510(# dependency requirements and are added to the link list at the very end.)B
7920 5350(# zfilter.c shouldn't include the RLE and RLD filters, but we don't want to)B
7920 5190(# change this now.)B
7920 5030(psbase.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(INT_OBJS\)\\)B
8004 4870(isupport.dev rld.dev rle.dev sfile.dev)B
8592 4710($\(SETMOD\) psbase imainarg.$\(OBJ\) gsargs.$\(OBJ\) imain.$\(OBJ\))B
8592 4550($\(ADDMOD\) psbase -obj $\(INT_CONFIG\))B
8592 4390($\(ADDMOD\) psbase -obj $\(INT1\))B
EndPage
%%Page: ? 17
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](4)Gaudy
0 F
1032 14470($\(ADDMOD\) psbase -obj $\(INT2\))B
1032 14310($\(ADDMOD\) psbase -obj $\(INT3\))B
1032 14150($\(ADDMOD\) psbase -obj $\(INT4\))B
1032 13990($\(ADDMOD\) psbase -obj $\(Z1\))B
1032 13830($\(ADDMOD\) psbase -oper $\(Z1OPS\))B
1032 13670($\(ADDMOD\) psbase -obj $\(Z2\))B
1032 13510($\(ADDMOD\) psbase -oper $\(Z2OPS\))B
1032 13350($\(ADDMOD\) psbase -obj $\(Z3\))B
1032 13190($\(ADDMOD\) psbase -oper $\(Z3OPS\))B
1032 13030($\(ADDMOD\) psbase -obj $\(Z4\))B
1032 12870($\(ADDMOD\) psbase -oper $\(Z4OPS\))B
1032 12710($\(ADDMOD\) psbase -obj $\(Z5\))B
1032 12550($\(ADDMOD\) psbase -oper $\(Z5OPS\))B
1032 12390($\(ADDMOD\) psbase -obj $\(Z6\))B
1032 12230($\(ADDMOD\) psbase -oper $\(Z6OPS\))B
1032 12070($\(ADDMOD\) psbase -obj $\(Z7\))B
1032 11910($\(ADDMOD\) psbase -oper $\(Z7OPS\))B
1032 11750($\(ADDMOD\) psbase -iodev stdin stdout stderr lineedit statementedit)B
1032 11590($\(ADDMOD\) psbase -include isupport rld rle sfile)B
360 11270(# -------------------------- Feature definitions -------------------------- #)B
360 10950(# ---------------- Full Level 1 interpreter ---------------- #)B
360 10630(level1.dev: $\(INT_MAK\) $\(ECHOGS_XE\) psbase.dev bcp.dev hsb.dev path1.dev type1.dev)B
1032 10470($\(SETMOD\) level1 -include psbase bcp hsb path1 type1)B
1032 10310($\(ADDMOD\) level1 -emulator PostScript PostScriptLevel1)B
360 9990(# -------- Level 1 color extensions \(CMYK color and colorimage\) -------- #)B
360 9670(color.dev: $\(INT_MAK\) $\(ECHOGS_XE\) cmyklib.dev colimlib.dev cmykread.dev)B
1032 9510($\(SETMOD\) color -include cmyklib colimlib cmykread)B
360 9190(cmykread_=zcolor1.$\(OBJ\) zht1.$\(OBJ\))B
360 9030(cmykread.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(cmykread_\))B
1032 8870($\(SETMOD\) cmykread $\(cmykread_\))B
1032 8710($\(ADDMOD\) cmykread -oper zcolor1 zht1)B
360 8390(zcolor1.$\(OBJ\): zcolor1.c $\(OP\) \\)B
528 8230($\(gscolor1_h\) \\)B
528 8070($\(gxcmap_h\) $\(gxcspace_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) \\)B
528 7910($\(gzstate_h\) \\)B
528 7750($\(ialloc_h\) $\(icolor_h\) $\(iimage_h\) $\(estack_h\) $\(iutil_h\) $\(igstate_h\) $\(store_h\))B
360 7430(zht1.$\(OBJ\): zht1.c $\(OP\) $\(memory__h\)\\)B
444 7270($\(gsmatrix_h\) $\(gsstate_h\) $\(gsstruct_h\) $\(gxdevice_h\) $\(gzht_h\)\\)B
444 7110($\(ialloc_h\) $\(estack_h\) $\(igstate_h\) $\(iht_h\) $\(store_h\))B
360 6790(# ---------------- HSB color ---------------- #)B
360 6470(hsb_=zhsb.$\(OBJ\))B
360 6310(hsb.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(hsb_\) hsblib.dev)B
1032 6150($\(SETMOD\) hsb $\(hsb_\))B
1032 5990($\(ADDMOD\) hsb -include hsblib)B
1032 5830($\(ADDMOD\) hsb -oper zhsb)B
360 5510(zhsb.$\(OBJ\): zhsb.c $\(OP\) \\)B
528 5350($\(gshsb_h\) $\(igstate_h\) $\(store_h\))B
360 5030(# ---- Level 1 path miscellany \(arcs, pathbbox, path enumeration\) ---- #)B
360 4710(path1_=zpath1.$\(OBJ\))B
360 4550(path1.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(path1_\) path1lib.dev)B
1032 4390($\(SETMOD\) path1 $\(path1_\))B
8592 14470($\(ADDMOD\) path1 -include path1lib)B
8592 14310($\(ADDMOD\) path1 -oper zpath1)B
7920 13990(zpath1.$\(OBJ\): zpath1.c $\(OP\) $\(memory__h\)\\)B
8004 13830($\(ialloc_h\) $\(estack_h\) $\(gspath_h\) $\(gsstruct_h\) $\(igstate_h\) $\(store_h\))B
7920 13510(# ================ Level-independent PostScript options ================ #)B
7920 13190(# ---------------- BCP filters ---------------- #)B
7920 12870(bcp_=sbcp.$\(OBJ\) zfbcp.$\(OBJ\))B
7920 12710(bcp.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(bcp_\))B
8592 12550($\(SETMOD\) bcp $\(bcp_\))B
8592 12390($\(ADDMOD\) bcp -oper zfbcp)B
7920 12070(sbcp.$\(OBJ\): sbcp.c $\(AK\) $\(stdio__h\) \\)B
8088 11910($\(sfilter_h\) $\(strimpl_h\))B
7920 11590(zfbcp.$\(OBJ\): zfbcp.c $\(OP\) $\(memory__h\)\\)B
8004 11430($\(gsstruct_h\) $\(ialloc_h\) $\(ifilter_h\)\\)B
8004 11270($\(sfilter_h\) $\(stream_h\) $\(strimpl_h\))B
7920 10950(# ---------------- Incremental font loading ---------------- #)B
7920 10790(# \(This only works for Type 1 fonts without eexec encryption.\))B
7920 10470(diskfont.dev: $\(INT_MAK\) $\(ECHOGS_XE\))B
8592 10310($\(SETMOD\) diskfont -ps gs_diskf)B
7920 9990(# ---------------- Double-precision floats ---------------- #)B
7920 9670(double_=zdouble.$\(OBJ\))B
7920 9510(double.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(double_\))B
8592 9350($\(SETMOD\) double $\(double_\))B
8592 9190($\(ADDMOD\) double -oper zdouble)B
7920 8870(zdouble.$\(OBJ\): zdouble.c $\(OP\) $\(ctype__h\) $\(math__h\) $\(memory__h\) $\(string__h\) \\)B
8088 8710($\(gxfarith_h\) $\(store_h\))B
7920 8390(# ---------------- EPSF files with binary headers ---------------- #)B
7920 8070(epsf.dev: $\(INT_MAK\) $\(ECHOGS_XE\))B
8592 7910($\(SETMOD\) epsf -ps gs_epsf)B
7920 7590(# ---------------- RasterOp ---------------- #)B
7920 7430(# This should be a separable feature in the core also....)B
7920 7110(rasterop.dev: $\(INT_MAK\) $\(ECHOGS_XE\) roplib.dev ropread.dev)B
8592 6950($\(SETMOD\) rasterop -include roplib ropread)B
7920 6630(ropread_=zrop.$\(OBJ\))B
7920 6470(ropread.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(ropread_\))B
8592 6310($\(SETMOD\) ropread $\(ropread_\))B
8592 6150($\(ADDMOD\) ropread -oper zrop)B
7920 5830(zrop.$\(OBJ\): zrop.c $\(OP\) $\(memory__h\)\\)B
8004 5670($\(gsrop_h\) $\(gsutil_h\) $\(gxdevice_h\)\\)B
8004 5510($\(idict_h\) $\(idparam_h\) $\(igstate_h\) $\(store_h\))B
7920 5190(# ---------------- PostScript Type 1 \(and Type 4\) fonts ---------------- #)B
7920 4870(type1.dev: $\(INT_MAK\) $\(ECHOGS_XE\) psf1lib.dev psf1read.dev)B
8592 4710($\(SETMOD\) type1 -include psf1lib psf1read)B
7920 4390(psf1read_=seexec.$\(OBJ\) zchar1.$\(OBJ\) zcharout.$\(OBJ\) zfont1.$\(OBJ\) zmisc1.$\(OBJ\))B
EndPage
%%Page: ? 18
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](5)Gaudy
0 F
360 14470(psf1read.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(psf1read_\))B
1032 14310($\(SETMOD\) psf1read $\(psf1read_\))B
1032 14150($\(ADDMOD\) psf1read -oper zchar1 zfont1 zmisc1)B
1032 13990($\(ADDMOD\) psf1read -ps gs_type1)B
360 13670(seexec.$\(OBJ\): seexec.c $\(AK\) $\(stdio__h\) \\)B
528 13510($\(gscrypt1_h\) $\(scanchar_h\) $\(sfilter_h\) $\(strimpl_h\))B
360 13190(zchar1.$\(OBJ\): zchar1.c $\(OP\) \\)B
528 13030($\(gspaint_h\) $\(gspath_h\) $\(gsstruct_h\) \\)B
528 12870($\(gxchar_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxmatrix_h\) \\)B
528 12710($\(gxfont_h\) $\(gxfont1_h\) $\(gxtype1_h\) $\(gzstate_h\) \\)B
528 12550($\(estack_h\) $\(ialloc_h\) $\(ichar_h\) $\(icharout_h\) \\)B
528 12390($\(idict_h\) $\(ifont_h\) $\(igstate_h\) $\(store_h\))B
360 12070(zfont1.$\(OBJ\): zfont1.c $\(OP\) \\)B
528 11910($\(gsmatrix_h\) $\(gxdevice_h\) $\(gschar_h\) \\)B
528 11750($\(gxfixed_h\) $\(gxfont_h\) $\(gxfont1_h\) \\)B
528 11590($\(bfont_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(store_h\))B
360 11270(zmisc1.$\(OBJ\): zmisc1.c $\(OP\) $\(memory__h\)\\)B
444 11110($\(gscrypt1_h\)\\)B
444 10950($\(idict_h\) $\(idparam_h\) $\(ifilter_h\)\\)B
444 10790($\(sfilter_h\) $\(stream_h\) $\(strimpl_h\))B
360 10470(# -------------- Compact Font Format and Type 2 charstrings ------------- #)B
360 10150(cff.dev: $\(INT_MAK\) $\(ECHOGS_XE\) gs_cff.ps psl2int.dev)B
1032 9990($\(SETMOD\) cff -ps gs_cff)B
360 9670(type2.dev: $\(INT_MAK\) $\(ECHOGS_XE\) type1.dev psf2lib.dev)B
1032 9510($\(SETMOD\) type2 -include psf2lib)B
360 9190(# ---------------- TrueType and PostScript Type 42 fonts ---------------- #)B
360 8870(# Native TrueType support)B
360 8710(ttfont.dev: $\(INT_MAK\) $\(ECHOGS_XE\) type42.dev)B
1032 8550($\(SETMOD\) ttfont -include type42)B
1032 8390($\(ADDMOD\) ttfont -ps gs_mro_e gs_wan_e gs_ttf)B
360 8070(# Type 42 \(embedded TrueType\) support)B
360 7910(type42read_=zchar42.$\(OBJ\) zcharout.$\(OBJ\) zfont42.$\(OBJ\))B
360 7750(type42.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(type42read_\) ttflib.dev)B
1032 7590($\(SETMOD\) type42 $\(type42read_\))B
1032 7430($\(ADDMOD\) type42 -include ttflib)B
1032 7270($\(ADDMOD\) type42 -oper zchar42 zfont42)B
1032 7110($\(ADDMOD\) type42 -ps gs_typ42)B
360 6790(zchar42.$\(OBJ\): zchar42.c $\(OP\) \\)B
528 6630($\(gsmatrix_h\) $\(gspaint_h\) $\(gspath_h\) \\)B
528 6470($\(gxfixed_h\) $\(gxchar_h\) $\(gxfont_h\) $\(gxfont42_h\) \\)B
528 6310($\(gxistate_h\) $\(gxpath_h\) $\(gzstate_h\) \\)B
528 6150($\(dstack_h\) $\(estack_h\) $\(ichar_h\) $\(icharout_h\) \\)B
528 5990($\(ifont_h\) $\(igstate_h\) $\(store_h\))B
360 5670(zfont42.$\(OBJ\): zfont42.c $\(OP\) \\)B
528 5510($\(gsccode_h\) $\(gsmatrix_h\) $\(gxfont_h\) $\(gxfont42_h\) \\)B
528 5350($\(bfont_h\) $\(idict_h\) $\(idparam_h\) $\(store_h\))B
360 5030(# ======================== Precompilation options ======================== #)B
360 4710(# ---------------- Precompiled fonts ---------------- #)B
360 4550(# See fonts.txt for more information.)B
7920 14470(ccfont_h=ccfont.h $\(std_h\) $\(gsmemory_h\) $\(iref_h\) $\(ivmspace_h\) $\(store_h\))B
7920 14150(CCFONT=$\(OP\) $\(ccfont_h\))B
7920 13830(# List the fonts we are going to compile.)B
7920 13670(# Because of intrinsic limitations in `make', we have to list)B
7920 13510(# the object file names and the font names separately.)B
7920 13350(# Because of limitations in the DOS shell, we have to break the fonts up)B
7920 13190(# into lists that will fit on a single line \(120 characters\).)B
7920 13030(# The rules for constructing the .c files from the fonts themselves,)B
7920 12870(# and for compiling the .c files, are in cfonts.mak, not here.)B
7920 12710(# For example, to compile the Courier fonts, you should invoke)B
7920 12550(#)B
588(make -f cfonts.mak Courier_o)X
7920 12390(# By convention, the names of the 35 standard compiled fonts use '0' for)B
7920 12230(# the foundry name.  This allows users to substitute different foundries)B
7920 12070(# without having to change this makefile.)B
7920 11910(ccfonts_ps=gs_ccfnt)B
7920 11750(ccfonts1_=0agk.$\(OBJ\) 0agko.$\(OBJ\) 0agd.$\(OBJ\) 0agdo.$\(OBJ\))B
7920 11590(ccfonts1=agk agko agd agdo)B
7920 11430(ccfonts2_=0bkl.$\(OBJ\) 0bkli.$\(OBJ\) 0bkd.$\(OBJ\) 0bkdi.$\(OBJ\))B
7920 11270(ccfonts2=bkl bkli bkd bkdi)B
7920 11110(ccfonts3_=0crr.$\(OBJ\) 0cri.$\(OBJ\) 0crb.$\(OBJ\) 0crbi.$\(OBJ\))B
7920 10950(ccfonts3=crr cri crb crbi)B
7920 10790(ccfonts4_=0hvr.$\(OBJ\) 0hvro.$\(OBJ\) 0hvb.$\(OBJ\) 0hvbo.$\(OBJ\))B
7920 10630(ccfonts4=hvr hvro hvb hvbo)B
7920 10470(ccfonts5_=0hvrrn.$\(OBJ\) 0hvrorn.$\(OBJ\) 0hvbrn.$\(OBJ\) 0hvborn.$\(OBJ\))B
7920 10310(ccfonts5=hvrrn hvrorn hvbrn hvborn)B
7920 10150(ccfonts6_=0ncr.$\(OBJ\) 0ncri.$\(OBJ\) 0ncb.$\(OBJ\) 0ncbi.$\(OBJ\))B
7920 9990(ccfonts6=ncr ncri ncb ncbi)B
7920 9830(ccfonts7_=0plr.$\(OBJ\) 0plri.$\(OBJ\) 0plb.$\(OBJ\) 0plbi.$\(OBJ\))B
7920 9670(ccfonts7=plr plri plb plbi)B
7920 9510(ccfonts8_=0tmr.$\(OBJ\) 0tmri.$\(OBJ\) 0tmb.$\(OBJ\) 0tmbi.$\(OBJ\))B
7920 9350(ccfonts8=tmr tmri tmb tmbi)B
7920 9190(ccfonts9_=0syr.$\(OBJ\) 0zcmi.$\(OBJ\) 0zdr.$\(OBJ\))B
7920 9030(ccfonts9=syr zcmi zdr)B
7920 8870(# The free distribution includes Bitstream Charter, Utopia, and)B
7920 8710(# freeware Cyrillic and Kana fonts.  We only provide for compiling)B
7920 8550(# Charter and Utopia.)B
7920 8390(ccfonts10free_=bchr.$\(OBJ\) bchri.$\(OBJ\) bchb.$\(OBJ\) bchbi.$\(OBJ\))B
7920 8230(ccfonts10free=chr chri chb chbi)B
7920 8070(ccfonts11free_=putr.$\(OBJ\) putri.$\(OBJ\) putb.$\(OBJ\) putbi.$\(OBJ\))B
7920 7910(ccfonts11free=utr utri utb utbi)B
7920 7750(# Uncomment the alternatives in the next 4 lines if you want)B
7920 7590(# Charter and Utopia compiled in.)B
7920 7430(#ccfonts10_=$\(ccfonts10free_\))B
7920 7270(ccfonts10_=)B
7920 7110(#ccfonts10=$\(ccfonts10free\))B
7920 6950(ccfonts10=)B
7920 6790(#ccfonts11_=$\(ccfonts11free_\))B
7920 6630(ccfonts11_=)B
7920 6470(#ccfonts11=$\(ccfonts11free\))B
7920 6310(ccfonts11=)B
7920 6150(# Add your own fonts here if desired.)B
7920 5990(ccfonts12_=)B
7920 5830(ccfonts12=)B
7920 5670(ccfonts13_=)B
7920 5510(ccfonts13=)B
7920 5350(ccfonts14_=)B
7920 5190(ccfonts14=)B
7920 5030(ccfonts15_=)B
7920 4870(ccfonts15=)B
7920 4550(# It's OK for ccfonts_.dev not to be CONFIG-dependent, because it only)B
7920 4390(# exists during the execution of the following rule.)B
EndPage
%%Page: ? 19
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](6)Gaudy
0 F
360 14470(# font2c has the prefix "gs" built into it, so we need to instruct)B
360 14310(# genconf to use the same one.)B
360 14150($\(gconfigf_h\): $\(MAKEFILE\) $\(INT_MAK\) $\(GENCONF_XE\))B
1032 13990($\(SETMOD\) ccfonts_ -font $\(ccfonts1\))B
1032 13830($\(ADDMOD\) ccfonts_ -font $\(ccfonts2\))B
1032 13670($\(ADDMOD\) ccfonts_ -font $\(ccfonts3\))B
1032 13510($\(ADDMOD\) ccfonts_ -font $\(ccfonts4\))B
1032 13350($\(ADDMOD\) ccfonts_ -font $\(ccfonts5\))B
1032 13190($\(ADDMOD\) ccfonts_ -font $\(ccfonts6\))B
1032 13030($\(ADDMOD\) ccfonts_ -font $\(ccfonts7\))B
1032 12870($\(ADDMOD\) ccfonts_ -font $\(ccfonts8\))B
1032 12710($\(ADDMOD\) ccfonts_ -font $\(ccfonts9\))B
1032 12550($\(ADDMOD\) ccfonts_ -font $\(ccfonts10\))B
1032 12390($\(ADDMOD\) ccfonts_ -font $\(ccfonts11\))B
1032 12230($\(ADDMOD\) ccfonts_ -font $\(ccfonts12\))B
1032 12070($\(ADDMOD\) ccfonts_ -font $\(ccfonts13\))B
1032 11910($\(ADDMOD\) ccfonts_ -font $\(ccfonts14\))B
1032 11750($\(ADDMOD\) ccfonts_ -font $\(ccfonts15\))B
1032 11590($\(EXP\)genconf ccfonts_.dev -n gs -f $\(gconfigf_h\))B
360 11270(# We separate icfontab.dev from ccfonts.dev so that a customer can put)B
360 11110(# compiled fonts into a separate shared library.)B
360 10790(icfontab=icfontab$\(CONFIG\))B
360 10470(# Define ccfont_table separately, so it can be set from the command line)B
360 10310(# to select an alternate compiled font table.)B
360 10150(ccfont_table=$\(icfontab\))B
360 9830($\(icfontab\).dev: $\(MAKEFILE\) $\(INT_MAK\) $\(ECHOGS_XE\) $\(icfontab\).$\(OBJ\) \\)B
528 9670($\(ccfonts1_\) $\(ccfonts2_\) $\(ccfonts3_\) $\(ccfonts4_\) $\(ccfonts5_\) \\)B
528 9510($\(ccfonts6_\) $\(ccfonts7_\) $\(ccfonts8_\) $\(ccfonts9_\) $\(ccfonts10_\) \\)B
528 9350($\(ccfonts11_\) $\(ccfonts12_\) $\(ccfonts13_\) $\(ccfonts14_\) $\(ccfonts15_\))B
1032 9190($\(SETMOD\) $\(icfontab\) -obj $\(icfontab\).$\(OBJ\))B
1032 9030($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts1_\))B
1032 8870($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts2_\))B
1032 8710($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts3_\))B
1032 8550($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts4_\))B
1032 8390($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts5_\))B
1032 8230($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts6_\))B
1032 8070($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts7_\))B
1032 7910($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts8_\))B
1032 7750($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts9_\))B
1032 7590($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts10_\))B
1032 7430($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts11_\))B
1032 7270($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts12_\))B
1032 7110($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts13_\))B
1032 6950($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts14_\))B
1032 6790($\(ADDMOD\) $\(icfontab\) -obj $\(ccfonts15_\))B
360 6470($\(icfontab\).$\(OBJ\): icfontab.c $\(AK\) $\(ccfont_h\) $\(gconfigf_h\))B
1032 6310($\(CP_\) $\(gconfigf_h\) gconfigf.h)B
1032 6150($\(CCCF\) icfontab.c)B
360 5830(# Strictly speaking, ccfonts shouldn't need to include type1,)B
360 5670(# since one could choose to precompile only Type 0 fonts,)B
360 5510(# but getting this exactly right would be too much work.)B
360 5350(ccfonts=ccfonts$\(CONFIG\))B
360 5190($\(ccfonts\).dev: $\(MAKEFILE\) $\(INT_MAK\) type1.dev iccfont.$\(OBJ\) \\)B
528 5030($\(ccfont_table\).dev)B
1032 4870($\(SETMOD\) $\(ccfonts\) -include type1)B
1032 4710($\(ADDMOD\) $\(ccfonts\) -include $\(ccfont_table\))B
1032 4550($\(ADDMOD\) $\(ccfonts\) -obj iccfont.$\(OBJ\))B
1032 4390($\(ADDMOD\) $\(ccfonts\) -oper ccfonts)B
8592 14470($\(ADDMOD\) $\(ccfonts\) -ps $\(ccfonts_ps\))B
7920 14150(iccfont.$\(OBJ\): iccfont.c $\(GH\) $\(string__h\)\\)B
8004 13990($\(gsstruct_h\) $\(ccfont_h\) $\(errors_h\)\\)B
8004 13830($\(ialloc_h\) $\(idict_h\) $\(ifont_h\) $\(iname_h\) $\(isave_h\) $\(iutil_h\)\\)B
8004 13670($\(oper_h\) $\(ostack_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\) $\(sfilter_h\) $\(iscan_h\))B
8592 13510($\(CCCF\) iccfont.c)B
7920 13190(# ---------------- Compiled initialization code ---------------- #)B
7920 12870(# We select either iccinit0 or iccinit1 depending on COMPILE_INITS.)B
7920 12550(iccinit0.$\(OBJ\): iccinit0.c $\(stdpre_h\))B
8592 12390($\(CCCF\) iccinit0.c)B
7920 12070(iccinit1.$\(OBJ\): gs_init.$\(OBJ\))B
8592 11910($\(CP_\) gs_init.$\(OBJ\) iccinit1.$\(OBJ\))B
7920 11590(# All the gs_*.ps files should be prerequisites of gs_init.c,)B
7920 11430(# but we don't have any convenient list of them.)B
7920 11270(gs_init.c: $\(GS_INIT\) $\(GENINIT_XE\) $\(gconfig_h\))B
8592 11110($\(EXP\)geninit $\(GS_INIT\) $\(gconfig_h\) -c gs_init.c)B
7920 10790(gs_init.$\(OBJ\): gs_init.c $\(stdpre_h\))B
8592 10630($\(CCCF\) gs_init.c)B
7920 10310(# ======================== PostScript Level 2 ======================== #)B
7920 9990(### In addition to the true Level 2 configuration, we define a 'minimal')B
7920 9830(### Level 2 that can be used with -dDEBUG in the 16-bit Windows environment.)B
7920 9670(### This also may require trimming down the sizes of the stacks in interp.c.)B
7920 9350(lev2min.dev: $\(INT_MAK\) $\(ECHOGS_XE\) \\)B
8088 9190(psbase.dev devctrl.dev color.dev \\)B
8088 9030(dps2lib.dev dps2read.dev fdecode.dev path1.dev type1.dev \\)B
8088 8870(psl2lib.dev psl2read.dev)B
8592 8710($\(SETMOD\) lev2min -include psbase devctrl color)B
8592 8550($\(ADDMOD\) lev2min -include dps2lib dps2read fdecode path1 type1)B
8592 8390($\(ADDMOD\) lev2min -include psl2lib psl2read)B
8592 8230($\(ADDMOD\) lev2min -emulator PostScript PostScriptLevel1 PostScriptLevel2)B
7920 7910(level2.dev: $\(INT_MAK\) $\(ECHOGS_XE\) \\)B
8004 7750(cidfont.dev cie.dev cmapread.dev compfont.dev dct.dev devctrl.dev dpsand2.dev\\)B
8004 7590(filter.dev level1.dev pattern.dev psl2lib.dev psl2read.dev sepr.dev\\)B
8004 7430(type42.dev xfilter.dev)B
8592 7270($\(SETMOD\) level2 -include cidfont cie cmapread compfont)B
8592 7110($\(ADDMOD\) level2 -include dct devctrl dpsand2 filter)B
8592 6950($\(ADDMOD\) level2 -include level1 pattern psl2lib psl2read)B
8592 6790($\(ADDMOD\) level2 -include sepr type42 xfilter)B
8592 6630($\(ADDMOD\) level2 -emulator PostScript PostScriptLevel2)B
7920 6310(# Define basic Level 2 language support.)B
7920 6150(# This is the minimum required for CMap and CIDFont support.)B
7920 5830(psl2int_=iutil2.$\(OBJ\) zmisc2.$\(OBJ\) zusparam.$\(OBJ\))B
7920 5670(psl2int.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(psl2int_\) dps2int.dev)B
8592 5510($\(SETMOD\) psl2int $\(psl2int_\))B
8592 5350($\(ADDMOD\) psl2int -include dps2int)B
8592 5190($\(ADDMOD\) psl2int -oper zmisc2 zusparam)B
8592 5030($\(ADDMOD\) psl2int -ps gs_lev2 gs_res)B
7920 4710(iutil2.$\(OBJ\): iutil2.c $\(GH\) $\(memory__h\) $\(string__h\)\\)B
8004 4550($\(gsparam_h\) $\(gsutil_h\)\\)B
8004 4390($\(errors_h\) $\(opcheck_h\) $\(imemory_h\) $\(iutil_h\) $\(iutil2_h\))B
EndPage
%%Page: ? 20
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](7)Gaudy
0 F
360 14310(zmisc2.$\(OBJ\): zmisc2.c $\(OP\) $\(memory__h\) $\(string__h\)\\)B
444 14150($\(idict_h\) $\(idparam_h\) $\(iparam_h\) $\(dstack_h\) $\(estack_h\)\\)B
444 13990($\(ilevel_h\) $\(iname_h\) $\(iutil2_h\) $\(ivmspace_h\) $\(store_h\))B
360 13670(# Note that zusparam includes both Level 1 and Level 2 operators.)B
360 13510(zusparam.$\(OBJ\): zusparam.c $\(OP\) $\(memory__h\) $\(string__h\)\\)B
444 13350($\(gscdefs_h\) $\(gsfont_h\) $\(gsstruct_h\) $\(gsutil_h\) $\(gxht_h\)\\)B
444 13190($\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(iparam_h\) $\(dstack_h\) $\(estack_h\)\\)B
444 13030($\(iname_h\) $\(iutil2_h\) $\(store_h\))B
360 12710(# Define full Level 2 support.)B
360 12390(psl2read_=zcolor2.$\(OBJ\) zcsindex.$\(OBJ\) zht2.$\(OBJ\) zimage2.$\(OBJ\))B
360 12230(# Note that zmisc2 includes both Level 1 and Level 2 operators.)B
360 12070(psl2read.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(psl2read_\) psl2int.dev dps2read.dev)B
1032 11910($\(SETMOD\) psl2read $\(psl2read_\))B
1032 11750($\(ADDMOD\) psl2read -include psl2int dps2read)B
1032 11590($\(ADDMOD\) psl2read -oper zcolor2_l2 zcsindex_l2)B
1032 11430($\(ADDMOD\) psl2read -oper zht2_l2 zimage2_l2)B
360 11110(zcolor2.$\(OBJ\): zcolor2.c $\(OP\)\\)B
444 10950($\(gscolor_h\) $\(gsmatrix_h\) $\(gsstruct_h\)\\)B
444 10790($\(gxcolor2_h\) $\(gxcspace_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\) $\(gxfixed_h\) $\(gx)B
360 10630(pcolor_h\)\\)B
444 10470($\(estack_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(igstate_h\) $\(istruct_h\)\\)B
444 10310($\(store_h\))B
360 9990(zcsindex.$\(OBJ\): zcsindex.c $\(OP\) $\(memory__h\) \\)B
528 9830($\(gscolor_h\) $\(gsstruct_h\) $\(gxfixed_h\) $\(gxcolor2_h\) $\(gxcspace_h\) $\(gsmatrix_h\) \\)B
528 9670($\(ialloc_h\) $\(icsmap_h\) $\(estack_h\) $\(igstate_h\) $\(ivmspace_h\) $\(store_h\))B
360 9350(zht2.$\(OBJ\): zht2.c $\(OP\) \\)B
528 9190($\(gsstruct_h\) $\(gxdevice_h\) $\(gzht_h\) \\)B
528 9030($\(estack_h\) $\(ialloc_h\) $\(icolor_h\) $\(idict_h\) $\(idparam_h\) $\(igstate_h\) \\)B
528 8870($\(iht_h\) $\(store_h\))B
360 8550(zimage2.$\(OBJ\): zimage2.c $\(OP\) $\(math__h\) $\(memory__h\)\\)B
444 8390($\(gscolor_h\) $\(gscolor2_h\) $\(gscspace_h\) $\(gsimage_h\) $\(gsmatrix_h\)\\)B
444 8230($\(idict_h\) $\(idparam_h\) $\(iimage_h\) $\(ilevel_h\) $\(igstate_h\))B
360 7910(# ---------------- Device control ---------------- #)B
360 7750(# This is a catch-all for setpagedevice and IODevices.)B
360 7430(devctrl_=zdevice2.$\(OBJ\) ziodev2.$\(OBJ\) zmedia2.$\(OBJ\) zdevcal.$\(OBJ\))B
360 7270(devctrl.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(devctrl_\))B
1032 7110($\(SETMOD\) devctrl $\(devctrl_\))B
1032 6950($\(ADDMOD\) devctrl -oper zdevice2_l2 ziodev2_l2 zmedia2_l2)B
1032 6790($\(ADDMOD\) devctrl -iodev null ram calendar)B
1032 6630($\(ADDMOD\) devctrl -ps gs_setpd)B
360 6310(zdevice2.$\(OBJ\): zdevice2.c $\(OP\) $\(math__h\) $\(memory__h\)\\)B
444 6150($\(dstack_h\) $\(estack_h\) $\(idict_h\) $\(idparam_h\) $\(igstate_h\) $\(iname_h\) $\(store_h\)\\)B
444 5990($\(gxdevice_h\) $\(gsstate_h\))B
360 5670(ziodev2.$\(OBJ\): ziodev2.c $\(OP\) $\(string__h\) $\(gp_h\)\\)B
444 5510($\(gxiodev_h\) $\(stream_h\) $\(files_h\) $\(iparam_h\) $\(iutil2_h\) $\(store_h\))B
360 5190(zmedia2.$\(OBJ\): zmedia2.c $\(OP\) $\(math__h\) $\(memory__h\) \\)B
528 5030($\(gsmatrix_h\) $\(idict_h\) $\(idparam_h\) $\(iname_h\) $\(store_h\))B
360 4710(zdevcal.$\(OBJ\): zdevcal.c $\(GH\) $\(time__h\) \\)B
528 4550($\(gxiodev_h\) $\(iparam_h\) $\(istack_h\))B
7920 14470(# ---------------- Filters other than the ones in sfilter.c ---------------- #)B
7920 14150(# Standard Level 2 decoding filters only.  The PDF configuration uses this.)B
7920 13990(fdecode_=scantab.$\(OBJ\) sfilter2.$\(OBJ\) zfdecode.$\(OBJ\))B
7920 13830(fdecode.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(fdecode_\) cfd.dev lzwd.dev pdiff.dev pngp.dev rld.)B
7920 13670(dev)B
8592 13510($\(SETMOD\) fdecode $\(fdecode_\))B
8592 13350($\(ADDMOD\) fdecode -include cfd lzwd pdiff pngp rld)B
8592 13190($\(ADDMOD\) fdecode -oper zfdecode)B
7920 12870(zfdecode.$\(OBJ\): zfdecode.c $\(OP\) $\(memory__h\)\\)B
8004 12710($\(gsstruct_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(ifilter_h\) \\)B
8004 12550($\(sa85x_h\) $\(scf_h\) $\(scfx_h\) $\(sfilter_h\) $\(slzwx_h\) $\(spdiffx_h\) $\(spngpx_h\) \\)B
8004 12390($\(store_h\) $\(stream_h\) $\(strimpl_h\))B
7920 12070(# Complete Level 2 filter capability.)B
7920 11910(filter_=zfilter2.$\(OBJ\))B
7920 11750(filter.dev: $\(INT_MAK\) $\(ECHOGS_XE\) fdecode.dev $\(filter_\) cfe.dev lzwe.dev rle.dev)B
8592 11590($\(SETMOD\) filter -include fdecode)B
8592 11430($\(ADDMOD\) filter -obj $\(filter_\))B
8592 11270($\(ADDMOD\) filter -include cfe lzwe rle)B
8592 11110($\(ADDMOD\) filter -oper zfilter2)B
7920 10790(zfilter2.$\(OBJ\): zfilter2.c $\(OP\) $\(memory__h\)\\)B
8088 10630($\(gsstruct_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(ifilter_h\) $\(store_h\) \\)B
8088 10470($\(sfilter_h\) $\(scfx_h\) $\(slzwx_h\) $\(spdiffx_h\) $\(spngpx_h\) $\(strimpl_h\))B
7920 10150(# Extensions beyond Level 2 standard.)B
7920 9990(xfilter_=sbhc.$\(OBJ\) sbwbs.$\(OBJ\) shcgen.$\(OBJ\) smtf.$\(OBJ\) \\)B
8004 9830(zfilterx.$\(OBJ\))B
7920 9670(xfilter.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(xfilter_\) pcxd.dev pngp.dev)B
8592 9510($\(SETMOD\) xfilter $\(xfilter_\))B
8592 9350($\(ADDMOD\) xfilter -include pcxd)B
8592 9190($\(ADDMOD\) xfilter -oper zfilterx)B
7920 8870(sbhc.$\(OBJ\): sbhc.c $\(AK\) $\(memory__h\) $\(stdio__h\)\\)B
8004 8710($\(gdebug_h\) $\(sbhc_h\) $\(shcgen_h\) $\(strimpl_h\))B
7920 8390(sbwbs.$\(OBJ\): sbwbs.c $\(AK\) $\(stdio__h\) $\(memory__h\) \\)B
8088 8230($\(gdebug_h\) $\(sbwbs_h\) $\(sfilter_h\) $\(strimpl_h\))B
7920 7910(shcgen.$\(OBJ\): shcgen.c $\(AK\) $\(memory__h\) $\(stdio__h\)\\)B
8004 7750($\(gdebug_h\) $\(gserror_h\) $\(gserrors_h\) $\(gsmemory_h\)\\)B
8004 7590($\(scommon_h\) $\(shc_h\) $\(shcgen_h\))B
7920 7270(smtf.$\(OBJ\): smtf.c $\(AK\) $\(stdio__h\) \\)B
8088 7110($\(smtf_h\) $\(strimpl_h\))B
7920 6790(zfilterx.$\(OBJ\): zfilterx.c $\(OP\) $\(memory__h\)\\)B
8004 6630($\(gsstruct_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(ifilter_h\)\\)B
8004 6470($\(store_h\) $\(sfilter_h\) $\(sbhc_h\) $\(sbtx_h\) $\(sbwbs_h\) $\(shcgen_h\)\\)B
8004 6310($\(smtf_h\) $\(spcxx_h\) $\(strimpl_h\))B
7920 5990(# ---------------- Binary tokens ---------------- #)B
7920 5670(btoken_=iscanbin.$\(OBJ\) zbseq.$\(OBJ\))B
7920 5510(btoken.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(btoken_\))B
8592 5350($\(SETMOD\) btoken $\(btoken_\))B
8592 5190($\(ADDMOD\) btoken -oper zbseq_l2)B
8592 5030($\(ADDMOD\) btoken -ps gs_btokn)B
7920 4710(bseq_h=bseq.h)B
7920 4550(btoken_h=btoken.h)B
EndPage
%%Page: ? 21
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](8)Gaudy
0 F
360 14470(iscanbin.$\(OBJ\): iscanbin.c $\(GH\) $\(math__h\) $\(memory__h\) $\(errors_h\)\\)B
444 14310($\(gsutil_h\) $\(ialloc_h\) $\(ibnum_h\) $\(idict_h\) $\(iname_h\)\\)B
444 14150($\(iscan_h\) $\(iutil_h\) $\(ivmspace_h\)\\)B
444 13990($\(bseq_h\) $\(btoken_h\) $\(dstack_h\) $\(ostack_h\)\\)B
444 13830($\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
360 13510(zbseq.$\(OBJ\): zbseq.c $\(OP\) $\(memory__h\)\\)B
444 13350($\(ialloc_h\) $\(idict_h\) $\(isave_h\)\\)B
444 13190($\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\)\\)B
444 13030($\(iname_h\) $\(ibnum_h\) $\(btoken_h\) $\(bseq_h\))B
360 12710(# ---------------- User paths & insideness testing ---------------- #)B
360 12390(upath_=zupath.$\(OBJ\) ibnum.$\(OBJ\))B
360 12230(upath.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(upath_\))B
1032 12070($\(SETMOD\) upath $\(upath_\))B
1032 11910($\(ADDMOD\) upath -oper zupath_l2)B
360 11590(zupath.$\(OBJ\): zupath.c $\(OP\) \\)B
528 11430($\(idict_h\) $\(dstack_h\) $\(iutil_h\) $\(igstate_h\) $\(store_h\) $\(stream_h\) $\(ibnum_h\) \\)B
528 11270($\(gscoord_h\) $\(gsmatrix_h\) $\(gspaint_h\) $\(gspath_h\) $\(gsstate_h\) \\)B
528 11110($\(gxfixed_h\) $\(gxdevice_h\) $\(gzpath_h\) $\(gzstate_h\))B
360 10790(# -------- Additions common to Display PostScript and Level 2 -------- #)B
360 10470(dpsand2.dev: $\(INT_MAK\) $\(ECHOGS_XE\) btoken.dev color.dev upath.dev dps2lib.dev dps2read)B
360 10310(.dev)B
1032 10150($\(SETMOD\) dpsand2 -include btoken color upath dps2lib dps2read)B
360 9830(dps2int_=zvmem2.$\(OBJ\) zdps1.$\(OBJ\))B
360 9670(# Note that zvmem2 includes both Level 1 and Level 2 operators.)B
360 9510(dps2int.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(dps2int_\))B
1032 9350($\(SETMOD\) dps2int $\(dps2int_\))B
1032 9190($\(ADDMOD\) dps2int -oper zvmem2 zdps1_l2)B
1032 9030($\(ADDMOD\) dps2int -ps gs_dps1)B
360 8710(dps2read_=ibnum.$\(OBJ\) zchar2.$\(OBJ\))B
360 8550(dps2read.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(dps2read_\) dps2int.dev)B
1032 8390($\(SETMOD\) dps2read $\(dps2read_\))B
1032 8230($\(ADDMOD\) dps2read -include dps2int)B
1032 8070($\(ADDMOD\) dps2read -oper ireclaim_l2 zchar2_l2)B
1032 7910($\(ADDMOD\) dps2read -ps gs_dps2)B
360 7590(ibnum.$\(OBJ\): ibnum.c $\(GH\) $\(math__h\) $\(memory__h\)\\)B
444 7430($\(errors_h\) $\(stream_h\) $\(ibnum_h\) $\(imemory_h\) $\(iutil_h\))B
360 7110(zchar2.$\(OBJ\): zchar2.c $\(OP\) \\)B
528 6950($\(gschar_h\) $\(gsmatrix_h\) $\(gspath_h\) $\(gsstruct_h\) $\(gxfixed_h\) $\(gxfont_h\) \\)B
528 6790($\(ialloc_h\) $\(ichar_h\) $\(estack_h\) $\(ifont_h\) $\(iname_h\) $\(igstate_h\) \\)B
528 6630($\(store_h\) $\(stream_h\) $\(ibnum_h\))B
360 6310(zdps1.$\(OBJ\): zdps1.c $\(OP\) \\)B
528 6150($\(gsmatrix_h\) $\(gspath_h\) $\(gspath2_h\) $\(gsstate_h\) \\)B
528 5990($\(ialloc_h\) $\(ivmspace_h\) $\(igstate_h\) $\(store_h\) $\(stream_h\) $\(ibnum_h\))B
360 5670(zvmem2.$\(OBJ\): zvmem2.c $\(OP\) \\)B
528 5510($\(estack_h\) $\(ialloc_h\) $\(ivmspace_h\) $\(store_h\))B
360 5190(# ---------------- Display PostScript ---------------- #)B
360 4870(# The context machinery is NOT USABLE in this release.  DO NOT USE IT.)B
360 4710(# IT WILL CAUSE AN IMMEDIATE CRASH.)B
360 4550(#dps_=zdps.$\(OBJ\) zcontext.$\(OBJ\))B
360 4390(dps_=zdps.$\(OBJ\))B
7920 14470(# Note that zcontext is omitted from the -oper list below.)B
7920 14310(dps.dev: $\(INT_MAK\) $\(ECHOGS_XE\) level2.dev $\(dps_\))B
8592 14150($\(SETMOD\) dps -include level2)B
8592 13990($\(ADDMOD\) dps -obj $\(dps_\))B
8592 13830($\(ADDMOD\) dps -oper zdps)B
8592 13670($\(ADDMOD\) dps -ps gs_dps)B
7920 13350(zdps.$\(OBJ\): zdps.c $\(OP\)\\)B
8004 13190($\(gsstate_h\) $\(igstate_h\) $\(iname_h\) $\(store_h\))B
7920 12870(zcontext.$\(OBJ\): zcontext.c $\(OP\) $\(gp_h\) $\(memory__h\)\\)B
8004 12710($\(gsexit_h\) $\(gsstruct_h\) $\(gsutil_h\) $\(gxalloc_h\)\\)B
8004 12550($\(icontext_h\) $\(idict_h\) $\(igstate_h\) $\(istruct_h\)\\)B
8004 12390($\(dstack_h\) $\(estack_h\) $\(ostack_h\) $\(store_h\))B
7920 12070(# ---------------- NeXT Display PostScript ---------------- #)B
7920 11910(#**************** NOT READY FOR USE YET ****************#)B
7920 11590(dpsnext_=zdpnext.$\(OBJ\))B
7920 11430(dpsnext.dev: $\(INT_MAK\) $\(ECHOGS_XE\) dps.dev $\(dpsnext_\) gs_dpnxt.ps)B
8592 11270($\(SETMOD\) dpsnext -include dps)B
8592 11110($\(ADDMOD\) dpsnext -obj $\(dpsnext_\))B
8592 10950($\(ADDMOD\) dpsnext -oper zdpnext)B
8592 10790($\(ADDMOD\) dpsnext -ps gs_dpnxt)B
7920 10470(zdpnext.$\(OBJ\): zdpnext.c $\(OP\)\\)B
8004 10310($\(gscspace_h\) $\(gsiparam_h\) $\(gsmatrix_h\) $\(gxcvalue_h\) $\(gxsample_h\)\\)B
8004 10150($\(ialloc_h\) $\(igstate_h\) $\(iimage_h\))B
7920 9830(# -------- Composite \(PostScript Type 0\) font support -------- #)B
7920 9510(compfont.dev: $\(INT_MAK\) $\(ECHOGS_XE\) psf0lib.dev psf0read.dev)B
8592 9350($\(SETMOD\) compfont -include psf0lib psf0read)B
7920 9030(# We always include zfcmap.$\(OBJ\) because zfont0.c refers to it,)B
7920 8870(# and it's not worth the trouble to exclude.)B
7920 8710(psf0read_=zchar2.$\(OBJ\) zfcmap.$\(OBJ\) zfont0.$\(OBJ\))B
7920 8550(psf0read.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(psf0read_\))B
8592 8390($\(SETMOD\) psf0read $\(psf0read_\))B
8592 8230($\(ADDMOD\) psf0read -oper zfont0 zchar2 zfcmap)B
7920 7910(zfcmap.$\(OBJ\): zfcmap.c $\(OP\)\\)B
8004 7750($\(gsmatrix_h\) $\(gsstruct_h\) $\(gsutil_h\)\\)B
8004 7590($\(gxfcmap_h\) $\(gxfont_h\)\\)B
8004 7430($\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(ifont_h\) $\(iname_h\) $\(store_h\))B
7920 7110(zfont0.$\(OBJ\): zfont0.c $\(OP\)\\)B
8004 6950($\(gschar_h\) $\(gsstruct_h\)\\)B
8004 6790($\(gxdevice_h\) $\(gxfcmap_h\) $\(gxfixed_h\) $\(gxfont_h\) $\(gxfont0_h\) $\(gxmatrix_h\)\\)B
8004 6630($\(gzstate_h\)\\)B
8004 6470($\(bfont_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(igstate_h\) $\(iname_h\)\\)B
8004 6310($\(store_h\))B
7920 5990(# ---------------- CMap support ---------------- #)B
7920 5830(# Note that this requires at least minimal Level 2 support,)B
7920 5670(# because it requires findresource.)B
7920 5350(cmapread_=zfcmap.$\(OBJ\))B
7920 5190(cmapread.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(cmapread_\) cmaplib.dev psl2int.dev)B
8592 5030($\(SETMOD\) cmapread $\(cmapread_\))B
8592 4870($\(ADDMOD\) cmapread -include cmaplib psl2int)B
8592 4710($\(ADDMOD\) cmapread -oper zfcmap)B
8592 4550($\(ADDMOD\) cmapread -ps gs_cmap)B
EndPage
%%Page: ? 22
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](9)Gaudy
0 F
360 14470(# ---------------- CIDFont support ---------------- #)B
360 14310(# Note that this requires at least minimal Level 2 support,)B
360 14150(# because it requires findresource.)B
360 13830(cidread_=zcid.$\(OBJ\))B
360 13670(cidfont.dev: $\(INT_MAK\) $\(ECHOGS_XE\) psf1read.dev psl2int.dev type42.dev\\)B
444 13510($\(cidread_\))B
1032 13350($\(SETMOD\) cidfont $\(cidread_\))B
1032 13190($\(ADDMOD\) cidfont -include psf1read psl2int type42)B
1032 13030($\(ADDMOD\) cidfont -ps gs_cidfn)B
1032 12870($\(ADDMOD\) cidfont -oper zcid)B
360 12550(zcid.$\(OBJ\): zcid.c $\(OP\)\\)B
444 12390($\(gsccode_h\) $\(gsmatrix_h\) $\(gxfont_h\)\\)B
444 12230($\(bfont_h\) $\(iname_h\) $\(store_h\))B
360 11910(# ---------------- CIE color ---------------- #)B
360 11590(cieread_=zcie.$\(OBJ\) zcrd.$\(OBJ\))B
360 11430(cie.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(cieread_\) cielib.dev)B
1032 11270($\(SETMOD\) cie $\(cieread_\))B
1032 11110($\(ADDMOD\) cie -oper zcie_l2 zcrd_l2)B
1032 10950($\(ADDMOD\) cie -include cielib)B
360 10630(icie_h=icie.h)B
360 10310(zcie.$\(OBJ\): zcie.c $\(OP\) $\(math__h\) $\(memory__h\) \\)B
528 10150($\(gscolor2_h\) $\(gscie_h\) $\(gsstruct_h\) $\(gxcspace_h\) \\)B
528 9990($\(ialloc_h\) $\(icie_h\) $\(idict_h\) $\(idparam_h\) $\(estack_h\) \\)B
528 9830($\(isave_h\) $\(igstate_h\) $\(ivmspace_h\) $\(store_h\))B
360 9510(zcrd.$\(OBJ\): zcrd.c $\(OP\) $\(math__h\) \\)B
528 9350($\(gscspace_h\) $\(gscolor2_h\) $\(gscie_h\) $\(gsstruct_h\) \\)B
528 9190($\(ialloc_h\) $\(icie_h\) $\(idict_h\) $\(idparam_h\) $\(estack_h\) \\)B
528 9030($\(isave_h\) $\(igstate_h\) $\(ivmspace_h\) $\(store_h\))B
360 8710(# ---------------- Pattern color ---------------- #)B
360 8390(pattern.dev: $\(INT_MAK\) $\(ECHOGS_XE\) patlib.dev patread.dev)B
1032 8230($\(SETMOD\) pattern -include patlib patread)B
360 7910(patread_=zpcolor.$\(OBJ\))B
360 7750(patread.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(patread_\))B
1032 7590($\(SETMOD\) patread $\(patread_\))B
1032 7430($\(ADDMOD\) patread -oper zpcolor_l2)B
360 7110(zpcolor.$\(OBJ\): zpcolor.c $\(OP\)\\)B
444 6950($\(gscolor_h\) $\(gsmatrix_h\) $\(gsstruct_h\)\\)B
444 6790($\(gxcolor2_h\) $\(gxcspace_h\) $\(gxdcolor_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
612 6630($\(gxfixed_h\) $\(gxpcolor_h\)\\)B
444 6470($\(estack_h\) $\(ialloc_h\) $\(idict_h\) $\(idparam_h\) $\(igstate_h\) $\(istruct_h\)\\)B
444 6310($\(store_h\))B
360 5990(# ---------------- Separation color ---------------- #)B
360 5670(seprread_=zcssepr.$\(OBJ\))B
360 5510(sepr.dev: $\(INT_MAK\) $\(ECHOGS_XE\) $\(seprread_\) seprlib.dev)B
1032 5350($\(SETMOD\) sepr $\(seprread_\))B
1032 5190($\(ADDMOD\) sepr -oper zcssepr_l2)B
1032 5030($\(ADDMOD\) sepr -include seprlib)B
360 4710(zcssepr.$\(OBJ\): zcssepr.c $\(OP\) \\)B
528 4550($\(gscolor_h\) $\(gscsepr_h\) $\(gsmatrix_h\) $\(gsstruct_h\) \\)B
528 4390($\(gxcolor2_h\) $\(gxcspace_h\) $\(gxfixed_h\) \\)B
8088 14470($\(ialloc_h\) $\(icsmap_h\) $\(estack_h\) $\(igstate_h\) $\(ivmspace_h\) $\(store_h\))B
7920 14150(# ---------------- DCT filters ---------------- #)B
7920 13990(# The definitions for jpeg*.dev are in jpeg.mak.)B
7920 13670(dct.dev: $\(INT_MAK\) $\(ECHOGS_XE\) dcte.dev dctd.dev)B
8592 13510($\(SETMOD\) dct -include dcte dctd)B
7920 13190(# Common code)B
7920 12870(dctc_=zfdctc.$\(OBJ\))B
7920 12550(zfdctc.$\(OBJ\): zfdctc.c $\(GH\) $\(memory__h\) $\(stdio__h\)\\)B
8004 12390($\(errors_h\) $\(opcheck_h\)\\)B
8004 12230($\(idict_h\) $\(idparam_h\) $\(imemory_h\) $\(ipacked_h\) $\(iutil_h\)\\)B
8004 12070($\(sdct_h\) $\(sjpeg_h\) $\(strimpl_h\)\\)B
8004 11910(jpeglib.h)B
7920 11590(# Encoding \(compression\))B
7920 11270(dcte_=$\(dctc_\) zfdcte.$\(OBJ\))B
7920 11110(dcte.dev: $\(INT_MAK\) $\(ECHOGS_XE\) sdcte.dev $\(dcte_\))B
8592 10950($\(SETMOD\) dcte -include sdcte)B
8592 10790($\(ADDMOD\) dcte -obj $\(dcte_\))B
8592 10630($\(ADDMOD\) dcte -oper zfdcte)B
7920 10310(zfdcte.$\(OBJ\): zfdcte.c $\(OP\) $\(memory__h\) $\(stdio__h\)\\)B
8088 10150($\(idict_h\) $\(idparam_h\) $\(ifilter_h\) $\(sdct_h\) $\(sjpeg_h\) $\(strimpl_h\) \\)B
8088 9990(jpeglib.h)B
7920 9670(# Decoding \(decompression\))B
7920 9350(dctd_=$\(dctc_\) zfdctd.$\(OBJ\))B
7920 9190(dctd.dev: $\(INT_MAK\) $\(ECHOGS_XE\) sdctd.dev $\(dctd_\))B
8592 9030($\(SETMOD\) dctd -include sdctd)B
8592 8870($\(ADDMOD\) dctd -obj $\(dctd_\))B
8592 8710($\(ADDMOD\) dctd -oper zfdctd)B
7920 8390(zfdctd.$\(OBJ\): zfdctd.c $\(OP\) $\(memory__h\) $\(stdio__h\)\\)B
8004 8230($\(ifilter_h\) $\(sdct_h\) $\(sjpeg_h\) $\(strimpl_h\) \\)B
8004 8070(jpeglib.h)B
7920 7750(# ---------------- zlib/Flate filters ---------------- #)B
7920 7430(fzlib.dev: $\(INT_MAK\) $\(ECHOGS_XE\) zfzlib.$\(OBJ\) szlibe.dev szlibd.dev)B
8592 7270($\(SETMOD\) fzlib -include szlibe szlibd)B
8592 7110($\(ADDMOD\) fzlib -obj zfzlib.$\(OBJ\))B
8592 6950($\(ADDMOD\) fzlib -oper zfzlib)B
7920 6630(zfzlib.$\(OBJ\): zfzlib.c $\(OP\) \\)B
8088 6470($\(errors_h\) $\(idict_h\) $\(ifilter_h\) \\)B
8088 6310($\(spdiffx_h\) $\(spngpx_h\) $\(strimpl_h\) $\(szlibx_h\))B
8592 6150($\(CCCZ\) zfzlib.c)B
7920 5830(# ================================ PDF ================================ #)B
7920 5510(# We need most of the Level 2 interpreter to do PDF, but not all of it.)B
7920 5350(# In fact, we don't even need all of a Level 1 interpreter.)B
7920 5030(# Because of the way the PDF encodings are defined, they must get loaded)B
7920 4870(# before we install the Level 2 resource machinery.)B
7920 4710(# On the other hand, the PDF .ps files must get loaded after)B
7920 4550(# level2dict is defined.)B
7920 4390(pdfmin.dev: $\(INT_MAK\) $\(ECHOGS_XE\)\\)B
EndPage
%%Page: ? 23
StartPage
Landscape
()(int.mak)[(97/05/28)(00:51:08)](10)Gaudy
0 F
444 14470(psbase.dev color.dev dps2lib.dev dps2read.dev\\)B
444 14310(fdecode.dev type1.dev pdffonts.dev psl2lib.dev psl2read.dev pdfread.dev)B
1032 14150($\(SETMOD\) pdfmin -include psbase color dps2lib dps2read)B
1032 13990($\(ADDMOD\) pdfmin -include fdecode type1)B
1032 13830($\(ADDMOD\) pdfmin -include pdffonts psl2lib psl2read pdfread)B
1032 13670($\(ADDMOD\) pdfmin -emulator PDF)B
360 13350(pdf.dev: $\(INT_MAK\) $\(ECHOGS_XE\)\\)B
444 13190(pdfmin.dev cff.dev cidfont.dev cie.dev compfont.dev cmapread.dev dctd.dev\\)B
444 13030(ttfont.dev type2.dev)B
1032 12870($\(SETMOD\) pdf -include pdfmin cff cidfont cie cmapread compfont dctd)B
1032 12710($\(ADDMOD\) pdf -include ttfont type2)B
360 12390(# Reader only)B
360 12070(pdffonts.dev: $\(INT_MAK\) $\(ECHOGS_XE\) \\)B
528 11910(gs_mex_e.ps gs_mro_e.ps gs_pdf_e.ps gs_wan_e.ps)B
1032 11750($\(SETMOD\) pdffonts -ps gs_mex_e gs_mro_e gs_pdf_e gs_wan_e)B
360 11430(# pdf_2ps must be the last .ps file loaded.)B
360 11270(pdfread.dev: $\(INT_MAK\) $\(ECHOGS_XE\) fzlib.dev)B
1032 11110($\(SETMOD\) pdfread -include fzlib)B
1032 10950($\(ADDMOD\) pdfread -ps gs_pdf gs_l2img)B
1032 10790($\(ADDMOD\) pdfread -ps pdf_base pdf_draw pdf_font pdf_main pdf_sec)B
1032 10630($\(ADDMOD\) pdfread -ps pdf_2ps)B
360 10310(# ============================= Main program ============================== #)B
360 9990(gs.$\(OBJ\): gs.c $\(GH\) \\)B
528 9830($\(imain_h\) $\(imainarg_h\) $\(iminst_h\))B
360 9510(icontext.$\(OBJ\): icontext.c $\(GH\)\\)B
444 9350($\(gsstruct_h\) $\(gxalloc_h\)\\)B
444 9190($\(dstack_h\) $\(estack_h\) $\(ostack_h\)\\)B
444 9030($\(icontext_h\) $\(igstate_h\) $\(store_h\))B
360 8710(imainarg.$\(OBJ\): imainarg.c $\(GH\) $\(ctype__h\) $\(memory__h\) $\(string__h\) \\)B
528 8550($\(gp_h\) \\)B
528 8390($\(gsargs_h\) $\(gscdefs_h\) $\(gsdevice_h\) $\(gsmdebug_h\) $\(gxdevice_h\) $\(gxdevmem_h\) \\)B
528 8230($\(errors_h\) $\(estack_h\) $\(files_h\) \\)B
528 8070($\(ialloc_h\) $\(imain_h\) $\(imainarg_h\) $\(iminst_h\) \\)B
528 7910($\(iname_h\) $\(interp_h\) $\(iscan_h\) $\(iutil_h\) $\(ivmspace_h\) \\)B
528 7750($\(ostack_h\) $\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
360 7430(imain.$\(OBJ\): imain.c $\(GH\) $\(memory__h\) $\(string__h\)\\)B
444 7270($\(gp_h\) $\(gslib_h\) $\(gsmatrix_h\) $\(gsutil_h\) $\(gxdevice_h\)\\)B
444 7110($\(dstack_h\) $\(errors_h\) $\(estack_h\) $\(files_h\)\\)B
444 6950($\(ialloc_h\) $\(idebug_h\) $\(idict_h\) $\(iname_h\) $\(interp_h\)\\)B
444 6790($\(isave_h\) $\(iscan_h\) $\(ivmspace_h\)\\)B
444 6630($\(main_h\) $\(oper_h\) $\(ostack_h\)\\)B
444 6470($\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
360 6150(interp.$\(OBJ\): interp.c $\(GH\) $\(memory__h\) $\(string__h\)\\)B
444 5990($\(gsstruct_h\)\\)B
444 5830($\(dstack_h\) $\(errors_h\) $\(estack_h\) $\(files_h\)\\)B
444 5670($\(ialloc_h\) $\(iastruct_h\) $\(inamedef_h\) $\(idict_h\) $\(interp_h\) $\(ipacked_h\)\\)B
444 5510($\(iscan_h\) $\(isave_h\) $\(istack_h\) $\(iutil_h\) $\(ivmspace_h\)\\)B
444 5350($\(oper_h\) $\(ostack_h\) $\(sfilter_h\) $\(store_h\) $\(stream_h\) $\(strimpl_h\))B
1032 5190($\(CCINT\) interp.c)B
360 4870(ireclaim.$\(OBJ\): ireclaim.c $\(GH\) \\)B
528 4710($\(errors_h\) $\(gsstruct_h\) $\(iastate_h\) $\(opdef_h\) $\(store_h\) \\)B
528 4550($\(dstack_h\) $\(estack_h\) $\(ostack_h\))B
EndPage
%%Page: ? 24
StartPage
Landscape
()(jpeg.mak)[(97/06/05)(10:23:27)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1994, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# makefile for Independent JPEG Group library code.)B
360 11430(# NOTE: This makefile is only known to work with the following versions)B
360 11270(# of the IJG library: 6, 6a.)B
360 11110(# As of May 11, 1996, version 6a is the current version.)B
360 10950(#)B
360 10790(# You can get the IJG library by Internet anonymous FTP from the following)B
360 10630(# places:)B
360 10470(#)B
588(Standard distribution \(tar + gzip format, Unix end-of-line\):)X
360 10310(#)B
1260(ftp.uu.net:/graphics/jpeg/jpegsrc.v*.tar.gz)X
360 10150(#)B
1260(ftp.cs.wisc.edu:/ghost/jpegsrc.v*.tar.gz)X
360 9990(#)B
588(MS-DOS archive \(PKZIP a.k.a. zip format, MS-DOS end-of-line\):)X
360 9830(#)B
1260(ftp.simtel.net:/pub/simtelnet/msdos/graphics/jpegsr*.zip)X
360 9670(#)B
1260(ftp.cs.wisc.edu:/ghost/jpeg-*.zip)X
360 9510(# The first site named above \(ftp.uu.net and ftp.simtel.net\) is supposed)B
360 9350(# to be the master distribution site, so it may have a more up-to-date)B
360 9190(# version; the ftp.cs.wisc.edu site is the master distribution site for)B
360 9030(# Ghostscript, so it will always have IJG library versions known to be)B
360 8870(# compatible with Ghostscript.)B
360 8710(#)B
360 8550(# If the version number, and hence the subdirectory name, changes, you)B
360 8390(# will probably want to change the definitions of JSRCDIR and possibly)B
360 8230(# JVERSION \(in the platform-specific makefile, not here\) to reflect this,)B
360 8070(# since that way you can use the IJG archive without change.)B
360 7910(#)B
360 7750(# NOTE: For some obscure reason \(probably a bug in djtarx\), if you are)B
360 7590(# compiling on a DesqView/X system, you should use the zip version of the)B
360 7430(# IJG library, not the tar.gz version.)B
360 7110(# Define the name of this makefile.)B
360 6950(JPEG_MAK=jpeg.mak)B
360 6630(# JSRCDIR is defined in the platform-specific makefile, not here,)B
360 6470(# as the directory where the IJG library sources are stored.)B
360 6310(#JSRCDIR=jpeg-6a)B
360 6150(# JVERSION is defined in the platform-specific makefile, not here,)B
360 5990(# as the IJG library major version number \(currently "5" or "6"\).)B
360 5830(#JVERSION=6)B
360 5510(JSRC=$\(JSRCDIR\)$\(D\))B
360 5350(# CCCJ is defined in gs.mak.)B
360 5190(#CCCJ=$\(CCC\) -I. -I$\(JSRCDIR\))B
360 4870(# We keep all of the IJG code in a separate directory so as not to)B
360 4710(# inadvertently mix it up with Aladdin Enterprises' own code.)B
360 4550(# However, we need our own version of jconfig.h, and our own "wrapper" for)B
360 4390(# jmorecfg.h.  We also need a substitute for jerror.c, in order to)B
7920 14470(# keep the error strings out of the automatic data segment in)B
7920 14310(# 16-bit environments.  For v5*, we also need our own version of jpeglib.h)B
7920 14150(# in order to change MAX_BLOCKS_IN_MCU for Adobe compatibility.)B
7920 13990(# \(This need will go away when IJG v6 is released.\))B
7920 13670(# Because this file is included after lib.mak, we can't use _h macros)B
7920 13510(# to express indirect dependencies; instead, we build the dependencies)B
7920 13350(# into the rules for copying the files.)B
7920 13190(jconfig_h=jconfig.h)B
7920 13030(jerror_h=jerror.h)B
7920 12870(jmorecfg_h=jmorecfg.h)B
7920 12710(jpeglib_h=jpeglib.h)B
7920 12390(jconfig.h: gsjconf.h $\(std_h\))B
8592 12230($\(CP_\) gsjconf.h jconfig.h)B
7920 11910(jmorecfg.h: gsjmorec.h jmcorig.h)B
8592 11750($\(CP_\) gsjmorec.h jmorecfg.h)B
7920 11430(jmcorig.h: $\(JSRC\)jmorecfg.h)B
8592 11270($\(CP_\) $\(JSRC\)jmorecfg.h jmcorig.h)B
7920 10950(jpeglib.h: jlib$\(JVERSION\).h jconfig.h jmorecfg.h)B
8592 10790($\(CP_\) jlib$\(JVERSION\).h jpeglib.h)B
7920 10470(jlib5.h: gsjpglib.h)B
8592 10310($\(CP_\) gsjpglib.h jlib5.h)B
7920 9990(jlib6.h: $\(JSRC\)jpeglib.h)B
8592 9830($\(CP_\) $\(JSRC\)jpeglib.h jlib6.h)B
7920 9510(# To ensure that the compiler finds our versions of jconfig.h and jmorecfg.h,)B
7920 9350(# regardless of the compiler's search rule, we must copy up all .c files,)B
7920 9190(# and all .h files that include either of these files, directly or)B
7920 9030(# indirectly.  The only such .h files currently are jinclude.h and jpeglib.h.)B
7920 8870(# \(Currently, we supply our own version of jpeglib.h -- see above.\))B
7920 8710(# Also, to avoid including the JSRCDIR directory name in our source files,)B
7920 8550(# we must also copy up any other .h files that our own code references.)B
7920 8390(# Currently, the only such .h files are jerror.h and jversion.h.)B
7920 8070(JHCOPY=jinclude.h jpeglib.h jerror.h jversion.h)B
7920 7750(jinclude.h: $\(JSRC\)jinclude.h)B
8592 7590($\(CP_\) $\(JSRC\)jinclude.h jinclude.h)B
7920 7270(#jpeglib.h: $\(JSRC\)jpeglib.h)B
7920 7110(#)B
588($\(CP_\) $\(JSRC\)jpeglib.h jpeglib.h)X
7920 6790(jerror.h: $\(JSRC\)jerror.h)B
8592 6630($\(CP_\) $\(JSRC\)jerror.h jerror.h)B
7920 6310(jversion.h: $\(JSRC\)jversion.h)B
8592 6150($\(CP_\) $\(JSRC\)jversion.h jversion.h)B
7920 5830(# In order to avoid having to keep the dependency lists for the IJG code)B
7920 5670(# accurate, we simply make all of them depend on the only files that)B
7920 5510(# we are ever going to change, and on all the .h files that must be copied up.)B
7920 5350(# This is too conservative, but only hurts us if we are changing our own)B
7920 5190(# j*.h files, which happens only rarely during development.)B
7920 4870(JDEP=$\(AK\) $\(jconfig_h\) $\(jerror_h\) $\(jmorecfg_h\) $\(JHCOPY\))B
7920 4550(# Code common to compression and decompression.)B
EndPage
%%Page: ? 25
StartPage
Landscape
()(jpeg.mak)[(97/06/05)(10:23:27)](2)Gaudy
0 F
360 14470(jpegc_=jcomapi.$\(OBJ\) jutils.$\(OBJ\) sjpegerr.$\(OBJ\) jmemmgr.$\(OBJ\))B
360 14310(jpegc.dev: $\(JPEG_MAK\) $\(ECHOGS_XE\) $\(jpegc_\))B
1032 14150($\(SETMOD\) jpegc $\(jpegc_\))B
360 13830(jcomapi.$\(OBJ\): $\(JSRC\)jcomapi.c $\(JDEP\))B
1032 13670($\(CP_\) $\(JSRC\)jcomapi.c .)B
1032 13510($\(CCCJ\) jcomapi.c)B
1032 13350($\(RM_\) jcomapi.c)B
360 13030(jutils.$\(OBJ\): $\(JSRC\)jutils.c $\(JDEP\))B
1032 12870($\(CP_\) $\(JSRC\)jutils.c .)B
1032 12710($\(CCCJ\) jutils.c)B
1032 12550($\(RM_\) jutils.c)B
360 12230(# Note that sjpegerr replaces jerror.)B
360 12070(sjpegerr.$\(OBJ\): sjpegerr.c $\(JDEP\))B
1032 11910($\(CCCF\) sjpegerr.c)B
360 11590(jmemmgr.$\(OBJ\): $\(JSRC\)jmemmgr.c $\(JDEP\))B
1032 11430($\(CP_\) $\(JSRC\)jmemmgr.c .)B
1032 11270($\(CCCJ\) jmemmgr.c)B
1032 11110($\(RM_\) jmemmgr.c)B
360 10790(# Encoding \(compression\) code.)B
360 10470(jpege.dev: jpege$\(JVERSION\).dev)B
1032 10310($\(CP_\) jpege$\(JVERSION\).dev jpege.dev)B
360 9990(jpege5=jcapi.$\(OBJ\))B
360 9830(jpege6=jcapimin.$\(OBJ\) jcapistd.$\(OBJ\) jcinit.$\(OBJ\))B
360 9510(jpege_1=jccoefct.$\(OBJ\) jccolor.$\(OBJ\) jcdctmgr.$\(OBJ\) )B
360 9350(jpege_2=jchuff.$\(OBJ\) jcmainct.$\(OBJ\) jcmarker.$\(OBJ\) jcmaster.$\(OBJ\))B
360 9190(jpege_3=jcparam.$\(OBJ\) jcprepct.$\(OBJ\) jcsample.$\(OBJ\) jfdctint.$\(OBJ\))B
360 8870(jpege5.dev: $\(JPEG_MAK\) $\(ECHOGS_XE\) jpegc.dev $\(jpege5\) $\(jpege_1\) $\(jpege_2\) $\(jpege_3)B
360 8710(\))B
1032 8550($\(SETMOD\) jpege5 $\(jpege5\))B
1032 8390($\(ADDMOD\) jpege5 -include jpegc)B
1032 8230($\(ADDMOD\) jpege5 -obj $\(jpege_1\))B
1032 8070($\(ADDMOD\) jpege5 -obj $\(jpege_2\))B
1032 7910($\(ADDMOD\) jpege5 -obj $\(jpege_3\))B
360 7590(jpege6.dev: $\(JPEG_MAK\) $\(ECHOGS_XE\) jpegc.dev $\(jpege6\) $\(jpege_1\) $\(jpege_2\) $\(jpege_3)B
360 7430(\))B
1032 7270($\(SETMOD\) jpege6 $\(jpege6\))B
1032 7110($\(ADDMOD\) jpege6 -include jpegc)B
1032 6950($\(ADDMOD\) jpege6 -obj $\(jpege_1\))B
1032 6790($\(ADDMOD\) jpege6 -obj $\(jpege_2\))B
1032 6630($\(ADDMOD\) jpege6 -obj $\(jpege_3\))B
360 6310(# jcapi.c is v5* only)B
360 6150(jcapi.$\(OBJ\): $\(JSRC\)jcapi.c $\(JDEP\))B
1032 5990($\(CP_\) $\(JSRC\)jcapi.c .)B
1032 5830($\(CCCJ\) jcapi.c)B
1032 5670($\(RM_\) jcapi.c)B
360 5350(# jcapimin.c is new in v6)B
360 5190(jcapimin.$\(OBJ\): $\(JSRC\)jcapimin.c $\(JDEP\))B
1032 5030($\(CP_\) $\(JSRC\)jcapimin.c .)B
1032 4870($\(CCCJ\) jcapimin.c)B
1032 4710($\(RM_\) jcapimin.c)B
360 4390(# jcapistd.c is new in v6)B
7920 14470(jcapistd.$\(OBJ\): $\(JSRC\)jcapistd.c $\(JDEP\))B
8592 14310($\(CP_\) $\(JSRC\)jcapistd.c .)B
8592 14150($\(CCCJ\) jcapistd.c)B
8592 13990($\(RM_\) jcapistd.c)B
7920 13670(# jcinit.c is new in v6)B
7920 13510(jcinit.$\(OBJ\): $\(JSRC\)jcinit.c $\(JDEP\))B
8592 13350($\(CP_\) $\(JSRC\)jcinit.c .)B
8592 13190($\(CCCJ\) jcinit.c)B
8592 13030($\(RM_\) jcinit.c)B
7920 12710(jccoefct.$\(OBJ\): $\(JSRC\)jccoefct.c $\(JDEP\))B
8592 12550($\(CP_\) $\(JSRC\)jccoefct.c .)B
8592 12390($\(CCCJ\) jccoefct.c)B
8592 12230($\(RM_\) jccoefct.c)B
7920 11910(jccolor.$\(OBJ\): $\(JSRC\)jccolor.c $\(JDEP\))B
8592 11750($\(CP_\) $\(JSRC\)jccolor.c .)B
8592 11590($\(CCCJ\) jccolor.c)B
8592 11430($\(RM_\) jccolor.c)B
7920 11110(jcdctmgr.$\(OBJ\): $\(JSRC\)jcdctmgr.c $\(JDEP\))B
8592 10950($\(CP_\) $\(JSRC\)jcdctmgr.c .)B
8592 10790($\(CCCJ\) jcdctmgr.c)B
8592 10630($\(RM_\) jcdctmgr.c)B
7920 10310(jchuff.$\(OBJ\): $\(JSRC\)jchuff.c $\(JDEP\))B
8592 10150($\(CP_\) $\(JSRC\)jchuff.c .)B
8592 9990($\(CCCJ\) jchuff.c)B
8592 9830($\(RM_\) jchuff.c)B
7920 9510(jcmainct.$\(OBJ\): $\(JSRC\)jcmainct.c $\(JDEP\))B
8592 9350($\(CP_\) $\(JSRC\)jcmainct.c .)B
8592 9190($\(CCCJ\) jcmainct.c)B
8592 9030($\(RM_\) jcmainct.c)B
7920 8710(jcmarker.$\(OBJ\): $\(JSRC\)jcmarker.c $\(JDEP\))B
8592 8550($\(CP_\) $\(JSRC\)jcmarker.c .)B
8592 8390($\(CCCJ\) jcmarker.c)B
8592 8230($\(RM_\) jcmarker.c)B
7920 7910(jcmaster.$\(OBJ\): $\(JSRC\)jcmaster.c $\(JDEP\))B
8592 7750($\(CP_\) $\(JSRC\)jcmaster.c .)B
8592 7590($\(CCCJ\) jcmaster.c)B
8592 7430($\(RM_\) jcmaster.c)B
7920 7110(jcparam.$\(OBJ\): $\(JSRC\)jcparam.c $\(JDEP\))B
8592 6950($\(CP_\) $\(JSRC\)jcparam.c .)B
8592 6790($\(CCCJ\) jcparam.c)B
8592 6630($\(RM_\) jcparam.c)B
7920 6310(jcprepct.$\(OBJ\): $\(JSRC\)jcprepct.c $\(JDEP\))B
8592 6150($\(CP_\) $\(JSRC\)jcprepct.c .)B
8592 5990($\(CCCJ\) jcprepct.c)B
8592 5830($\(RM_\) jcprepct.c)B
7920 5510(jcsample.$\(OBJ\): $\(JSRC\)jcsample.c $\(JDEP\))B
8592 5350($\(CP_\) $\(JSRC\)jcsample.c .)B
8592 5190($\(CCCJ\) jcsample.c)B
8592 5030($\(RM_\) jcsample.c)B
7920 4710(jfdctint.$\(OBJ\): $\(JSRC\)jfdctint.c $\(JDEP\))B
8592 4550($\(CP_\) $\(JSRC\)jfdctint.c .)B
8592 4390($\(CCCJ\) jfdctint.c)B
EndPage
%%Page: ? 26
StartPage
Landscape
()(jpeg.mak)[(97/06/05)(10:23:27)](3)Gaudy
0 F
1032 14470($\(RM_\) jfdctint.c)B
360 14150(# Decompression code)B
360 13830(jpegd.dev: jpegd$\(JVERSION\).dev)B
1032 13670($\(CP_\) jpegd$\(JVERSION\).dev jpegd.dev)B
360 13350(jpegd5=jdapi.$\(OBJ\))B
360 13190(jpegd6=jdapimin.$\(OBJ\) jdapistd.$\(OBJ\) jdinput.$\(OBJ\) jdphuff.$\(OBJ\))B
360 12870(jpegd_1=jdcoefct.$\(OBJ\) jdcolor.$\(OBJ\))B
360 12710(jpegd_2=jddctmgr.$\(OBJ\) jdhuff.$\(OBJ\) jdmainct.$\(OBJ\) jdmarker.$\(OBJ\))B
360 12550(jpegd_3=jdmaster.$\(OBJ\) jdpostct.$\(OBJ\) jdsample.$\(OBJ\) jidctint.$\(OBJ\))B
360 12230(jpegd5.dev: $\(JPEG_MAK\) $\(ECHOGS_XE\) jpegc.dev $\(jpegd5\) $\(jpegd_1\) $\(jpegd_2\) $\(jpegd_3)B
360 12070(\))B
1032 11910($\(SETMOD\) jpegd5 $\(jpegd5\))B
1032 11750($\(ADDMOD\) jpegd5 -include jpegc)B
1032 11590($\(ADDMOD\) jpegd5 -obj $\(jpegd_1\))B
1032 11430($\(ADDMOD\) jpegd5 -obj $\(jpegd_2\))B
1032 11270($\(ADDMOD\) jpegd5 -obj $\(jpegd_3\))B
360 10950(jpegd6.dev: $\(JPEG_MAK\) $\(ECHOGS_XE\) jpegc.dev $\(jpegd6\) $\(jpegd_1\) $\(jpegd_2\) $\(jpegd_3)B
360 10790(\))B
1032 10630($\(SETMOD\) jpegd6 $\(jpegd6\))B
1032 10470($\(ADDMOD\) jpegd6 -include jpegc)B
1032 10310($\(ADDMOD\) jpegd6 -obj $\(jpegd_1\))B
1032 10150($\(ADDMOD\) jpegd6 -obj $\(jpegd_2\))B
1032 9990($\(ADDMOD\) jpegd6 -obj $\(jpegd_3\))B
360 9670(# jdapi.c is v5* only)B
360 9510(jdapi.$\(OBJ\): $\(JSRC\)jdapi.c $\(JDEP\))B
1032 9350($\(CP_\) $\(JSRC\)jdapi.c .)B
1032 9190($\(CCCJ\) jdapi.c)B
1032 9030($\(RM_\) jdapi.c)B
360 8710(# jdapimin.c is new in v6)B
360 8550(jdapimin.$\(OBJ\): $\(JSRC\)jdapimin.c $\(JDEP\))B
1032 8390($\(CP_\) $\(JSRC\)jdapimin.c .)B
1032 8230($\(CCCJ\) jdapimin.c)B
1032 8070($\(RM_\) jdapimin.c)B
360 7750(# jdapistd.c is new in v6)B
360 7590(jdapistd.$\(OBJ\): $\(JSRC\)jdapistd.c $\(JDEP\))B
1032 7430($\(CP_\) $\(JSRC\)jdapistd.c .)B
1032 7270($\(CCCJ\) jdapistd.c)B
1032 7110($\(RM_\) jdapistd.c)B
360 6790(jdcoefct.$\(OBJ\): $\(JSRC\)jdcoefct.c $\(JDEP\))B
1032 6630($\(CP_\) $\(JSRC\)jdcoefct.c .)B
1032 6470($\(CCCJ\) jdcoefct.c)B
1032 6310($\(RM_\) jdcoefct.c)B
360 5990(jdcolor.$\(OBJ\): $\(JSRC\)jdcolor.c $\(JDEP\))B
1032 5830($\(CP_\) $\(JSRC\)jdcolor.c .)B
1032 5670($\(CCCJ\) jdcolor.c)B
1032 5510($\(RM_\) jdcolor.c)B
360 5190(jddctmgr.$\(OBJ\): $\(JSRC\)jddctmgr.c $\(JDEP\))B
1032 5030($\(CP_\) $\(JSRC\)jddctmgr.c .)B
1032 4870($\(CCCJ\) jddctmgr.c)B
1032 4710($\(RM_\) jddctmgr.c)B
360 4390(jdhuff.$\(OBJ\): $\(JSRC\)jdhuff.c $\(JDEP\))B
8592 14470($\(CP_\) $\(JSRC\)jdhuff.c .)B
8592 14310($\(CCCJ\) jdhuff.c)B
8592 14150($\(RM_\) jdhuff.c)B
7920 13830(# jdinput.c is new in v6)B
7920 13670(jdinput.$\(OBJ\): $\(JSRC\)jdinput.c $\(JDEP\))B
8592 13510($\(CP_\) $\(JSRC\)jdinput.c .)B
8592 13350($\(CCCJ\) jdinput.c)B
8592 13190($\(RM_\) jdinput.c)B
7920 12870(jdmainct.$\(OBJ\): $\(JSRC\)jdmainct.c $\(JDEP\))B
8592 12710($\(CP_\) $\(JSRC\)jdmainct.c .)B
8592 12550($\(CCCJ\) jdmainct.c)B
8592 12390($\(RM_\) jdmainct.c)B
7920 12070(jdmarker.$\(OBJ\): $\(JSRC\)jdmarker.c $\(JDEP\))B
8592 11910($\(CP_\) $\(JSRC\)jdmarker.c .)B
8592 11750($\(CCCJ\) jdmarker.c)B
8592 11590($\(RM_\) jdmarker.c)B
7920 11270(jdmaster.$\(OBJ\): $\(JSRC\)jdmaster.c $\(JDEP\))B
8592 11110($\(CP_\) $\(JSRC\)jdmaster.c .)B
8592 10950($\(CCCJ\) jdmaster.c)B
8592 10790($\(RM_\) jdmaster.c)B
7920 10470(# jdphuff.c is new in v6)B
7920 10310(jdphuff.$\(OBJ\): $\(JSRC\)jdphuff.c $\(JDEP\))B
8592 10150($\(CP_\) $\(JSRC\)jdphuff.c .)B
8592 9990($\(CCCJ\) jdphuff.c)B
8592 9830($\(RM_\) jdphuff.c)B
7920 9510(jdpostct.$\(OBJ\): $\(JSRC\)jdpostct.c $\(JDEP\))B
8592 9350($\(CP_\) $\(JSRC\)jdpostct.c .)B
8592 9190($\(CCCJ\) jdpostct.c)B
8592 9030($\(RM_\) jdpostct.c)B
7920 8710(jdsample.$\(OBJ\): $\(JSRC\)jdsample.c $\(JDEP\))B
8592 8550($\(CP_\) $\(JSRC\)jdsample.c .)B
8592 8390($\(CCCJ\) jdsample.c)B
8592 8230($\(RM_\) jdsample.c)B
7920 7910(jidctint.$\(OBJ\): $\(JSRC\)jidctint.c $\(JDEP\))B
8592 7750($\(CP_\) $\(JSRC\)jidctint.c .)B
8592 7590($\(CCCJ\) jidctint.c)B
8592 7430($\(RM_\) jidctint.c)B
EndPage
%%Page: ? 27
StartPage
Landscape
()(libpng.mak)[(97/06/04)(07:48:23)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# makefile for PNG \(Portable Network Graphics\) code.)B
360 11430(# This partial makefile compiles the png library for use in the Ghostscript)B
360 11270(# PNG drivers.  You can get the source code for this library from:)B
360 11110(#   ftp://swrinde.nde.swri.edu/pub/png/src/)B
360 10950(# The makefile is known to work with the following library versions:)B
360 10790(# 0.88, 0.89, 0.90, and 0.95.  NOTE: the archive for libpng 0.95 may be)B
360 10630(# inconsistent: if you have compilation problems, use an older version.)B
360 10470(# Please see Ghostscript's `make.txt' file for instructions about how to)B
360 10310(# unpack these archives.)B
360 10150(#)B
360 9990(# The specification for the PNG file format is available from:)B
360 9830(#   http://www.group42.com/png.htm)B
360 9670(#   http://www.w3.org/pub/WWW/TR/WD-png)B
360 9350(# Define the name of this makefile.)B
360 9190(LIBPNG_MAK=libpng.mak)B
360 8870(# PSRCDIR is defined in the platform-specific makefile, not here,)B
360 8710(# as the directory where the PNG library sources are stored.)B
360 8550(#PSRCDIR=libpng)B
360 8390(# PVERSION is defined in the platform-specific makefile, not here,)B
360 8230(# as the libpng version number \("88", "89", "90", or "95"\).)B
360 8070(#PVERSION=95)B
360 7750(PSRC=$\(PSRCDIR\)$\(D\))B
360 7590(# CCCP is defined in gs.mak.)B
360 7430(#CCCP=$\(CCC\) -I$\(PSRCDIR\) -I$\(ZSRCDIR\))B
360 7110(# We keep all of the PNG code in a separate directory so as not to)B
360 6950(# inadvertently mix it up with Aladdin Enterprises' own code.)B
360 6790(PDEP=$\(AK\))B
360 6470(png_1=png.$\(OBJ\) pngmem.$\(OBJ\) pngerror.$\(OBJ\))B
360 6310(png_2=pngtrans.$\(OBJ\) pngwrite.$\(OBJ\) pngwtran.$\(OBJ\) pngwutil.$\(OBJ\))B
360 5990(# libpng modules)B
360 5670(png.$\(OBJ\): $\(PSRC\)png.c $\(PDEP\))B
1032 5510($\(CCCP\) $\(PSRC\)png.c)B
360 5190(# version 0.88 uses pngio.c)B
360 5030(pngio.$\(OBJ\): $\(PSRC\)pngio.c $\(PDEP\))B
1032 4870($\(CCCP\) $\(PSRC\)pngio.c)B
360 4550(# version 0.89 uses pngwio.c)B
360 4390(pngwio.$\(OBJ\): $\(PSRC\)pngwio.c $\(PDEP\))B
8592 14470($\(CCCP\) $\(PSRC\)pngwio.c)B
7920 14150(pngmem.$\(OBJ\): $\(PSRC\)pngmem.c $\(PDEP\))B
8592 13990($\(CCCP\) $\(PSRC\)pngmem.c)B
7920 13670(pngerror.$\(OBJ\): $\(PSRC\)pngerror.c $\(PDEP\))B
8592 13510($\(CCCP\) $\(PSRC\)pngerror.c)B
7920 13190(pngtrans.$\(OBJ\): $\(PSRC\)pngtrans.c $\(PDEP\))B
8592 13030($\(CCCP\) $\(PSRC\)pngtrans.c)B
7920 12710(pngwrite.$\(OBJ\): $\(PSRC\)pngwrite.c $\(PDEP\))B
8592 12550($\(CCCP\) $\(PSRC\)pngwrite.c)B
7920 12230(pngwtran.$\(OBJ\): $\(PSRC\)pngwtran.c $\(PDEP\))B
8592 12070($\(CCCP\) $\(PSRC\)pngwtran.c)B
7920 11750(pngwutil.$\(OBJ\): $\(PSRC\)pngwutil.c $\(PDEP\))B
8592 11590($\(CCCP\) $\(PSRC\)pngwutil.c)B
7920 11270(# Define the version of libpng.dev that we are actually using.)B
7920 11110(libpng.dev: $\(MAKEFILE\) libpng_$\(SHARE_LIBPNG\).dev)B
8592 10950($\(CP_\) libpng_$\(SHARE_LIBPNG\).dev libpng.dev)B
7920 10630(# Define the shared version of libpng.)B
7920 10470(libpng_1.dev: $\(MAKEFILE\) $\(LIBPNG_MAK\) $\(ECHOGS_XE\))B
8592 10310($\(SETMOD\) libpng_1 -lib $\(LIBPNG_NAME\))B
7920 9990(# Define the non-shared version of libpng.)B
7920 9830(libpng_0.dev: $\(LIBPNG_MAK\) $\(ECHOGS_XE\) $\(png_1\) $\(png_2\)\\)B
8004 9670(zlibe.dev libpng$\(PVERSION\).dev)B
8592 9510($\(SETMOD\) libpng_0 $\(png_1\))B
8592 9350($\(ADDMOD\) libpng_0 $\(png_2\))B
8592 9190($\(ADDMOD\) libpng_0 -include zlibe libpng$\(PVERSION\))B
7920 8870(libpng88.dev: $\(LIBPNG_MAK\) $\(ECHOGS_XE\) pngio.$\(OBJ\))B
8592 8710($\(SETMOD\) libpng88 pngio.$\(OBJ\))B
7920 8390(libpng89.dev: $\(LIBPNG_MAK\) $\(ECHOGS_XE\) pngwio.$\(OBJ\))B
8592 8230($\(SETMOD\) libpng89 pngwio.$\(OBJ\))B
7920 7910(libpng90.dev: $\(LIBPNG_MAK\) $\(ECHOGS_XE\) pngwio.$\(OBJ\) crc32.dev)B
8592 7750($\(SETMOD\) libpng90 pngwio.$\(OBJ\) -include crc32)B
7920 7430(libpng95.dev: $\(LIBPNG_MAK\) $\(ECHOGS_XE\) pngwio.$\(OBJ\) crc32.dev)B
8592 7270($\(SETMOD\) libpng95 pngwio.$\(OBJ\) -include crc32)B
EndPage
%%Page: ? 28
StartPage
Landscape
()(zlib.mak)[(97/05/13)(08:31:47)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# makefile for zlib library code.)B
360 11430(# This partial makefile compiles the zlib library for use in Ghostscript.)B
360 11270(# You can get the source code for this library from:)B
360 11110(#   ftp://ftp.uu.net/pub/archiving/zip/zlib/zlib104.zip   \(zlib 1.0.4\))B
360 10950(#)B
1260(or zlib-1.0.4.tar.gz)X
360 10790(# Please see Ghostscript's `make.txt' file for instructions about how to)B
360 10630(# unpack these archives.)B
360 10310(# Define the name of this makefile.)B
360 10150(ZLIB_MAK=zlib.mak)B
360 9830(# ZSRCDIR is defined in the platform-specific makefile, not here,)B
360 9670(# as the directory where the zlib sources are stored.)B
360 9510(#ZSRCDIR=zlib)B
360 9350(ZSRC=$\(ZSRCDIR\)$\(D\))B
360 9190(# We would like to define)B
360 9030(#CCCZ=$\(CCC\) -I$\(ZSRCDIR\) -Dverbose=-1)B
360 8870(# but the Watcom C compiler has strange undocumented restrictions on what can)B
360 8710(# follow a -D=, and it doesn't allow negative numbers.  Instead, we define)B
360 8550(# \(in gs.mak\):)B
360 8390(#CCCZ=$\(CCC\) -I. -I$\(ZSRCDIR\))B
360 8230(# and handle the definition of verbose in a different, more awkward way.)B
360 7910(# We keep all of the zlib code in a separate directory so as not to)B
360 7750(# inadvertently mix it up with Aladdin Enterprises' own code.)B
360 7590(ZDEP=$\(AK\))B
360 7270(# Contrary to what some portability bigots assert as fact, C compilers are)B
360 7110(# not consistent about where they start searching for #included files:)B
360 6950(# some always start by looking in the same directory as the .c file being)B
360 6790(# compiled, before using the search path specified with -I on the command)B
360 6630(# line, while others do not do this.  For this reason, we must explicitly)B
360 6470(# copy and then delete all the .c files, because they need to obtain our)B
360 6310(# modified version of zutil.h.  We must also copy all header files that)B
360 6150(# reference zutil.h directly or indirectly.)B
360 5830(# Code common to compression and decompression.)B
360 5510(zlibc_=zutil.$\(OBJ\))B
360 5350(zlibc.dev: $\(ZLIB_MAK\) $\(ECHOGS_XE\) $\(zlibc_\))B
1032 5190($\(SETMOD\) zlibc $\(zlibc_\))B
360 4870(zutil.h: $\(ZSRC\)zutil.h $\(ECHOGS_XE\))B
1032 4710($\(EXP\)echogs -w zutil.h -x 23 define verbose -s - -1)B
1032 4550($\(EXP\)echogs -a zutil.h -+R $\(ZSRC\)zutil.h)B
7920 14470(zutil.$\(OBJ\): $\(ZSRC\)zutil.c $\(ZDEP\) zutil.h)B
8592 14310($\(CP_\) $\(ZSRC\)zutil.c .)B
8592 14150($\(CCCZ\) zutil.c)B
8592 13990($\(RM_\) zutil.c)B
7920 13670(# Encoding \(compression\) code.)B
7920 13350(deflate.h: $\(ZSRC\)deflate.h zutil.h)B
8592 13190($\(CP_\) $\(ZSRC\)deflate.h deflate.h)B
7920 12870(zlibe.dev: $\(MAKEFILE\) zlibe_$\(SHARE_ZLIB\).dev)B
8592 12710($\(CP_\) zlibe_$\(SHARE_ZLIB\).dev zlibe.dev)B
7920 12390(zlibe_1.dev: $\(MAKEFILE\) $\(ZLIB_MAK\) $\(ECHOGS_XE\))B
8592 12230($\(SETMOD\) zlibe_1 -lib $\(ZLIB_NAME\))B
7920 11910(zlibe_=adler32.$\(OBJ\) deflate.$\(OBJ\) trees.$\(OBJ\))B
7920 11750(zlibe_0.dev: $\(ZLIB_MAK\) $\(ECHOGS_XE\) zlibc.dev $\(zlibe_\))B
8592 11590($\(SETMOD\) zlibe_0 $\(zlibe_\))B
8592 11430($\(ADDMOD\) zlibe_0 -include zlibc)B
7920 11110(adler32.$\(OBJ\): $\(ZSRC\)adler32.c $\(ZDEP\))B
8592 10950($\(CP_\) $\(ZSRC\)adler32.c .)B
8592 10790($\(CCCZ\) adler32.c)B
8592 10630($\(RM_\) adler32.c)B
7920 10310(deflate.$\(OBJ\): $\(ZSRC\)deflate.c $\(ZDEP\) deflate.h)B
8592 10150($\(CP_\) $\(ZSRC\)deflate.c .)B
8592 9990($\(CCCZ\) deflate.c)B
8592 9830($\(RM_\) deflate.c)B
7920 9510(trees.$\(OBJ\): $\(ZSRC\)trees.c $\(ZDEP\) deflate.h)B
8592 9350($\(CP_\) $\(ZSRC\)trees.c .)B
8592 9190($\(CCCZ\) trees.c)B
8592 9030($\(RM_\) trees.c)B
7920 8710(# The zlib filters per se don't need crc32, but libpng versions starting)B
7920 8550(# with 0.90 do.)B
7920 8230(crc32.dev: $\(MAKEFILE\) crc32_$\(SHARE_ZLIB\).dev)B
8592 8070($\(CP_\) crc32_$\(SHARE_ZLIB\).dev crc32.dev)B
7920 7750(crc32_1.dev: $\(MAKEFILE\) $\(ZLIB_MAK\) $\(ECHOGS_XE\))B
8592 7590($\(SETMOD\) crc32_1 -lib $\(ZLIB_NAME\))B
7920 7270(crc32_0.dev: $\(ZLIB_MAK\) $\(ECHOGS_XE\) crc32.$\(OBJ\))B
8592 7110($\(SETMOD\) crc32_0 crc32.$\(OBJ\))B
7920 6790(crc32.$\(OBJ\): $\(ZSRC\)crc32.c $\(ZDEP\) deflate.h)B
8592 6630($\(CP_\) $\(ZSRC\)crc32.c .)B
8592 6470($\(CCCZ\) crc32.c)B
8592 6310($\(RM_\) crc32.c)B
7920 5990(# Decoding \(decompression\) code.)B
7920 5670(zlibd.dev: $\(MAKEFILE\) zlibd_$\(SHARE_ZLIB\).dev)B
8592 5510($\(CP_\) zlibd_$\(SHARE_ZLIB\).dev zlibd.dev)B
7920 5190(zlibd_1.dev: $\(MAKEFILE\) $\(ZLIB_MAK\) $\(ECHOGS_XE\))B
8592 5030($\(SETMOD\) zlibd_1 -lib $\(ZLIB_NAME\))B
7920 4710(zlibd1_=infblock.$\(OBJ\) infcodes.$\(OBJ\) inffast.$\(OBJ\))B
7920 4550(zlibd2_=inflate.$\(OBJ\) inftrees.$\(OBJ\) infutil.$\(OBJ\))B
7920 4390(zlibd_ = $\(zlibd1_\) $\(zlibd2_\))B
EndPage
%%Page: ? 29
StartPage
Landscape
()(zlib.mak)[(97/05/13)(08:31:47)](2)Gaudy
0 F
360 14470(zlibd_0.dev: $\(ZLIB_MAK\) $\(ECHOGS_XE\) zlibc.dev $\(zlibd_\))B
1032 14310($\(SETMOD\) zlibd_0 $\(zlibd1_\))B
1032 14150($\(ADDMOD\) zlibd_0 -obj $\(zlibd2_\))B
1032 13990($\(ADDMOD\) zlibd_0 -include zlibc)B
360 13670(infblock.$\(OBJ\): $\(ZSRC\)infblock.c $\(ZDEP\) zutil.h)B
1032 13510($\(CP_\) $\(ZSRC\)infblock.c .)B
1032 13350($\(CCCZ\) infblock.c)B
1032 13190($\(RM_\) infblock.c)B
360 12870(infcodes.$\(OBJ\): $\(ZSRC\)infcodes.c $\(ZDEP\) zutil.h)B
1032 12710($\(CP_\) $\(ZSRC\)infcodes.c .)B
1032 12550($\(CCCZ\) infcodes.c)B
1032 12390($\(RM_\) infcodes.c)B
360 12070(inffast.$\(OBJ\): $\(ZSRC\)inffast.c $\(ZDEP\) zutil.h)B
1032 11910($\(CP_\) $\(ZSRC\)inffast.c .)B
1032 11750($\(CCCZ\) inffast.c)B
1032 11590($\(RM_\) inffast.c)B
360 11270(inflate.$\(OBJ\): $\(ZSRC\)inflate.c $\(ZDEP\) zutil.h)B
1032 11110($\(CP_\) $\(ZSRC\)inflate.c .)B
1032 10950($\(CCCZ\) inflate.c)B
1032 10790($\(RM_\) inflate.c)B
360 10470(inftrees.$\(OBJ\): $\(ZSRC\)inftrees.c $\(ZDEP\) zutil.h)B
1032 10310($\(CP_\) $\(ZSRC\)inftrees.c .)B
1032 10150($\(CCCZ\) inftrees.c)B
1032 9990($\(RM_\) inftrees.c)B
360 9670(infutil.$\(OBJ\): $\(ZSRC\)infutil.c $\(ZDEP\) zutil.h)B
1032 9510($\(CP_\) $\(ZSRC\)infutil.c .)B
1032 9350($\(CCCZ\) infutil.c)B
1032 9190($\(RM_\) infutil.c)B
EndPage
%%Page: ? 30
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1989, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# makefile for device drivers.)B
360 11430(# Define the name of this makefile.)B
360 11270(DEVS_MAK=devs.mak)B
360 10950(###### --------------------------- Catalog -------------------------- ######)B
360 10630(# It is possible to build configurations with an arbitrary collection of)B
360 10470(# device drivers, although some drivers are supported only on a subset)B
360 10310(# of the target platforms.  The currently available drivers are:)B
360 9990(# MS-DOS displays \(note: not usable with Desqview/X\):)B
360 9830(#   MS-DOS EGA and VGA:)B
360 9670(#)B
588(ega)X
420(EGA \(640x350, 16-color\))X
360 9510(#)B
588(vga)X
420(VGA \(640x480, 16-color\))X
360 9350(#   MS-DOS SuperVGA:)B
360 9190(# *)B
420(ali)X
420(SuperVGA using Avance Logic Inc. chipset, 256-color modes)X
360 9030(# *)B
420(atiw)X
336(ATI Wonder SuperVGA, 256-color modes)X
360 8870(# *)B
420(s3vga)X
252(SuperVGA using S3 86C911 chip \(e.g., Diamond Stealth board\))X
360 8710(#)B
588(svga16)X
168(Generic SuperVGA in 800x600, 16-color mode)X
360 8550(# *)B
420(tseng)X
252(SuperVGA using Tseng Labs ET3000/4000 chips, 256-color modes)X
360 8390(# *)B
420(tvga)X
336(SuperVGA using Trident chipset, 256-color modes)X
360 8230(#   ****** NOTE: The vesa device does not work with the Watcom \(32-bit MS-DOS\))B
360 8070(#   ****** compiler or executable.)B
360 7910(#)B
588(vesa)X
336(SuperVGA with VESA standard API driver)X
360 7750(#   MS-DOS other:)B
360 7590(#)B
588(bgi)X
420(Borland Graphics Interface \(CGA\)  [MS-DOS only])X
360 7430(# *)B
420(herc)X
336(Hercules Graphics display   [MS-DOS only])X
360 7270(# *)B
420(pe)X
504(Private Eye display)X
360 7110(# Other displays:)B
360 6950(#   MS Windows:)B
360 6790(#)B
588(mswindll  Microsoft Windows 3.1 DLL  [MS Windows only])X
360 6630(#)B
588(mswinprn  Microsoft Windows 3.0, 3.1 DDB printer  [MS Windows only])X
360 6470(#)B
588(mswinpr2  Microsoft Windows 3.0, 3.1 DIB printer  [MS Windows only])X
360 6310(#   OS/2:)B
360 6150(# *)B
420(os2pm)X
252(OS/2 Presentation Manager   [OS/2 only])X
360 5990(# *)B
420(os2dll)X
168(OS/2 DLL bitmap             [OS/2 only])X
360 5830(# *)B
420(os2prn)X
168(OS/2 printer                [OS/2 only])X
360 5670(#   Unix and VMS:)B
360 5510(#   ****** NOTE: For direct frame buffer addressing under SCO Unix or Xenix,)B
360 5350(#   ****** edit the definition of EGAVGA below.)B
360 5190(# *)B
420(att3b1)X
168(AT&T 3b1/Unixpc monochrome display   [3b1 only])X
360 5030(# *)B
420(lvga256  Linux vgalib, 256-color VGA modes  [Linux only])X
360 4870(# *)B
420(sonyfb)X
168(Sony Microsystems monochrome display   [Sony only])X
360 4710(# *)B
420(sunview  SunView window system   [SunOS only])X
360 4550(# +)B
420(vgalib)X
168(Linux PC with VGALIB   [Linux only])X
360 4390(#)B
588(x11)X
420(X Windows version 11, release >=4   [Unix and VMS only])X
7920 14470(#)B
588(x11alpha  X Windows masquerading as a device with alpha capability)X
7920 14310(#)B
588(x11cmyk  X Windows masquerading as a 1-bit-per-plane CMYK device)X
7920 14150(#)B
588(x11gray2  X Windows as a 2-bit gray-scale device)X
7920 13990(#)B
588(x11mono  X Windows masquerading as a black-and-white device)X
7920 13830(#   Platform-independent:)B
7920 13670(# *)B
420(sxlcrt)X
168(CRT sixels, e.g. for VT240-like terminals)X
7920 13510(# Printers:)B
7920 13350(# *)B
420(ap3250)X
168(Epson AP3250 printer)X
7920 13190(# *)B
420(appledmp  Apple Dot Matrix Printer \(should also work with Imagewriter\))X
7920 13030(#)B
588(bj10e)X
252(Canon BubbleJet BJ10e)X
7920 12870(# *)B
420(bj200)X
252(Canon BubbleJet BJ200)X
7920 12710(# *)B
420(bjc600   Canon Color BubbleJet BJC-600, BJC-4000 and BJC-70)X
7920 12550(#               also good for Apple printers like the StyleWriter 2x00)B
7920 12390(# *)B
420(bjc800   Canon Color BubbleJet BJC-800)X
7920 12230(# *     ccr     CalComp Raster format)B
7920 12070(# *)B
420(cdeskjet  H-P DeskJet 500C with 1 bit/pixel color)X
7920 11910(# *)B
420(cdjcolor  H-P DeskJet 500C with 24 bit/pixel color and)X
7920 11750(#)B
1260(high-quality color \(Floyd-Steinberg\) dithering;)X
7920 11590(#)B
1260(also good for DeskJet 540C and Citizen Projet IIc \(-r200x300\))X
7920 11430(# *)B
420(cdjmono  H-P DeskJet 500C printing black only;)X
7920 11270(#)B
1260(also good for DeskJet 510, 520, and 540C \(black only\))X
7920 11110(# *)B
420(cdj500)X
168(H-P DeskJet 500C \(same as cdjcolor\))X
7920 10950(# *)B
420(cdj550)X
168(H-P DeskJet 550C/560C)X
7920 10790(# *)B
420(cp50)X
336(Mitsubishi CP50 color printer)X
7920 10630(# *)B
420(declj250  alternate DEC LJ250 driver)X
7920 10470(# +)B
420(deskjet  H-P DeskJet and DeskJet Plus)X
7920 10310(#)B
588(djet500  H-P DeskJet 500)X
7920 10150(# *)B
420(djet500c  H-P DeskJet 500C alternate driver)X
7920 9990(#)B
1260(\(does not work on 550C or 560C\))X
7920 9830(# *)B
420(dnj650c  H-P DesignJet 650C)X
7920 9670(#)B
588(epson)X
252(Epson-compatible dot matrix printers \(9- or 24-pin\))X
7920 9510(# *)B
420(eps9mid  Epson-compatible 9-pin, interleaved lines)X
7920 9350(#)B
1260(\(intermediate resolution\))X
7920 9190(# *)B
420(eps9high  Epson-compatible 9-pin, interleaved lines)X
7920 9030(#)B
1260(\(triple resolution\))X
7920 8870(# *)B
420(epsonc)X
168(Epson LQ-2550 and Fujitsu 3400/2400/1200 color printers)X
7920 8710(# *)B
420(ibmpro  IBM 9-pin Proprinter)X
7920 8550(# *)B
420(imagen)X
168(Imagen ImPress printers)X
7920 8390(# *)B
420(iwhi)X
336(Apple Imagewriter in high-resolution mode)X
7920 8230(# *)B
420(iwlo)X
336(Apple Imagewriter in low-resolution mode)X
7920 8070(# *)B
420(iwlq)X
336(Apple Imagewriter LQ in 320 x 216 dpi mode)X
7920 7910(# *)B
420(jetp3852  IBM Jetprinter ink-jet color printer \(Model #3852\))X
7920 7750(# +)B
420(laserjet  H-P LaserJet)X
7920 7590(# *)B
420(la50)X
336(DEC LA50 printer)X
7920 7430(# *)B
420(la70)X
336(DEC LA70 printer)X
7920 7270(# *)B
420(la70t)X
252(DEC LA70 printer with low-resolution text enhancement)X
7920 7110(# *)B
420(la75)X
336(DEC LA75 printer)X
7920 6950(# *)B
420(la75plus DEC LA75plus printer)X
7920 6790(# *)B
420(lbp8)X
336(Canon LBP-8II laser printer)X
7920 6630(# *)B
420(lips3)X
252(Canon LIPS III laser printer in English \(CaPSL\) mode)X
7920 6470(# *)B
420(ln03)X
336(DEC LN03 printer)X
7920 6310(# *)B
420(lj250)X
252(DEC LJ250 Companion color printer)X
7920 6150(# +)B
420(ljet2p)X
168(H-P LaserJet IId/IIp/III* with TIFF compression)X
7920 5990(# +)B
420(ljet3)X
252(H-P LaserJet III* with Delta Row compression)X
7920 5830(# +)B
420(ljet3d)X
168(H-P LaserJet IIID with duplex capability)X
7920 5670(# +)B
420(ljet4)X
252(H-P LaserJet 4 \(defaults to 600 dpi\))X
7920 5510(# +)B
420(lj4dith  H-P LaserJet 4 with Floyd-Steinberg dithering)X
7920 5350(# +)B
420(ljetplus  H-P LaserJet Plus)X
7920 5190(#)B
588(lj5mono  H-P LaserJet 5 and 6 family \(PCL6 / PCL XL\), bitmap)X
7920 5030(#)B
588(lj5gray  H-P LaserJet 5 and 6 family, gray-scale bitmap)X
7920 4870(# *)B
420(lp2563)X
168(H-P 2563B line printer)X
7920 4710(# *)B
420(lp8000)X
168(Epson LP-8000 laser printer)X
7920 4550(# *)B
420(m8510)X
252(C.Itoh M8510 printer)X
7920 4390(# *)B
420(necp6)X
252(NEC P6/P6+/P60 printers at 360 x 360 DPI resolution)X
EndPage
%%Page: ? 31
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](2)Gaudy
0 F
360 14470(# *)B
420(nwp533  Sony Microsystems NWP533 laser printer   [Sony only])X
360 14310(# *)B
420(oce9050  OCE 9050 printer)X
360 14150(# *)B
420(oki182)X
168(Okidata MicroLine 182)X
360 13990(# *)B
420(okiibm)X
168(Okidata MicroLine IBM-compatible printers)X
360 13830(# *)B
420(paintjet  alternate H-P PaintJet color printer)X
360 13670(# *)B
420(pj)X
504(H-P PaintJet XL driver )X
360 13510(# *)B
420(pjetxl)X
168(alternate H-P PaintJet XL driver)X
360 13350(# *)B
420(pjxl)X
336(H-P PaintJet XL color printer)X
360 13190(# *)B
420(pjxl300  H-P PaintJet XL300 color printer;)X
360 13030(#)B
1260(also good for PaintJet 1200C)X
360 12870(#)B
588(\(pxlmono\) H-P black-and-white PCL XL printers \(LaserJet 5 and 6 family\))X
360 12710(#)B
588(\(pxlcolor\) H-P color PCL XL printers \(none available yet\))X
360 12550(# *)B
420(r4081)X
252(Ricoh 4081 laser printer)X
360 12390(# *)B
420(sj48)X
336(StarJet 48 inkjet printer)X
360 12230(# *)B
420(sparc)X
252(SPARCprinter)X
360 12070(# *)B
420(st800)X
252(Epson Stylus 800 printer)X
360 11910(# *)B
420(stcolor)X
84(Epson Stylus Color)X
360 11750(# *)B
420(t4693d2  Tektronix 4693d color printer, 2 bits per R/G/B component)X
360 11590(# *)B
420(t4693d4  Tektronix 4693d color printer, 4 bits per R/G/B component)X
360 11430(# *)B
420(t4693d8  Tektronix 4693d color printer, 8 bits per R/G/B component)X
360 11270(# *)B
420(tek4696  Tektronix 4695/4696 inkjet plotter)X
360 11110(# *)B
420(uniprint  Unified printer driver -- Configurable Color ESC/P-,)X
360 10950(#)B
1260(ESC/P2-, HP-RTL/PCL mono/color driver)X
360 10790(# *)B
420(xes)X
420(Xerox XES printers \(2700, 3700, 4045, etc.\))X
360 10630(# Fax systems:)B
360 10470(# *)B
420(dfaxhigh  DigiBoard, Inc.'s DigiFAX software format \(high resolution\))X
360 10310(# *)B
420(dfaxlow  DigiFAX low \(normal\) resolution)X
360 10150(# Fax file format:)B
360 9990(#   ****** NOTE: all of these drivers adjust the page size to match)B
360 9830(#   ****** one of the three CCITT standard sizes \(U.S. letter with A4 width,)B
360 9670(#   ****** A4, or B4\).)B
360 9510(#)B
588(faxg3)X
252(Group 3 fax, with EOLs but no header or EOD)X
360 9350(#)B
588(faxg32d  Group 3 2-D fax, with EOLs but no header or EOD)X
360 9190(#)B
588(faxg4)X
252(Group 4 fax, with EOLs but no header or EOD)X
360 9030(#)B
588(tiffcrle  TIFF "CCITT RLE 1-dim" \(= Group 3 fax with no EOLs\))X
360 8870(#)B
588(tiffg3)X
168(TIFF Group 3 fax \(with EOLs\))X
360 8710(#)B
588(tiffg32d  TIFF Group 3 2-D fax)X
360 8550(#)B
588(tiffg4)X
168(TIFF Group 4 fax)X
360 8390(# High-level file formats:)B
360 8230(#)B
588(epswrite  EPS output \(like PostScript Distillery\))X
360 8070(#)B
588(pdfwrite  PDF output \(like Adobe Acrobat Distiller\))X
360 7910(#)B
588(pswrite  PostScript output \(like PostScript Distillery\))X
360 7750(#)B
588(pxlmono  Black-and-white PCL XL)X
360 7590(#)B
588(pxlcolor  Color PCL XL)X
360 7430(# Other raster file formats and devices:)B
360 7270(#)B
588(bit)X
420(Plain bits, monochrome)X
360 7110(#)B
588(bitrgb)X
168(Plain bits, RGB)X
360 6950(#)B
588(bitcmyk  Plain bits, CMYK)X
360 6790(#)B
588(bmpmono)X
84(Monochrome MS Windows .BMP file format)X
360 6630(#)B
588(bmp16)X
252(4-bit \(EGA/VGA\) .BMP file format)X
360 6470(#)B
588(bmp256)X
168(8-bit \(256-color\) .BMP file format)X
360 6310(#)B
588(bmp16m)X
168(24-bit .BMP file format)X
360 6150(#)B
588(cgmmono  Monochrome \(black-and-white\) CGM -- LOW LEVEL OUTPUT ONLY)X
360 5990(#)B
588(cgm8)X
336(8-bit \(256-color\) CGM -- DITTO)X
360 5830(#)B
588(cgm24)X
252(24-bit color CGM -- DITTO)X
360 5670(# *)B
420(cif)X
420(CIF file format for VLSI)X
360 5510(#)B
588(jpeg)X
336(JPEG format, RGB output)X
360 5350(#)B
588(jpeggray  JPEG format, gray output)X
360 5190(#)B
588(miff24)X
168(ImageMagick MIFF format, 24-bit direct color, RLE compressed)X
360 5030(# *)B
420(mgrmono  1-bit monochrome MGR devices)X
360 4870(# *)B
420(mgrgray2  2-bit gray scale MGR devices)X
360 4710(# *)B
420(mgrgray4  4-bit gray scale MGR devices)X
360 4550(# *)B
420(mgrgray8  8-bit gray scale MGR devices)X
360 4390(# *)B
420(mgr4)X
336(4-bit \(VGA\) color MGR devices)X
7920 14470(# *)B
420(mgr8)X
336(8-bit color MGR devices)X
7920 14310(#)B
588(pcxmono)X
84(PCX file format, monochrome \(1-bit black and white\))X
7920 14150(#)B
588(pcxgray)X
84(PCX file format, 8-bit gray scale)X
7920 13990(#)B
588(pcx16)X
252(PCX file format, 4-bit planar \(EGA/VGA\) color)X
7920 13830(#)B
588(pcx256)X
168(PCX file format, 8-bit chunky color)X
7920 13670(#)B
588(pcx24b)X
168(PCX file format, 24-bit color \(3 8-bit planes\))X
7920 13510(#)B
588(pcxcmyk PCX file format, 4-bit chunky CMYK color)X
7920 13350(#)B
588(pbm)X
420(Portable Bitmap \(plain format\))X
7920 13190(#)B
588(pbmraw)X
168(Portable Bitmap \(raw format\))X
7920 13030(#)B
588(pgm)X
420(Portable Graymap \(plain format\))X
7920 12870(#)B
588(pgmraw)X
168(Portable Graymap \(raw format\))X
7920 12710(#)B
588(pgnm)X
336(Portable Graymap \(plain format\), optimizing to PBM if possible)X
7920 12550(#)B
588(pgnmraw)X
84(Portable Graymap \(raw format\), optimizing to PBM if possible)X
7920 12390(#)B
588(pnm)X
420(Portable Pixmap \(plain format\) \(RGB\), optimizing to PGM or PBM)X
7920 12230(#)B
1344(if possible)X
7920 12070(#)B
588(pnmraw)X
168(Portable Pixmap \(raw format\) \(RGB\), optimizing to PGM or PBM)X
7920 11910(#)B
1344(if possible)X
7920 11750(#)B
588(ppm)X
420(Portable Pixmap \(plain format\) \(RGB\))X
7920 11590(#)B
588(ppmraw)X
168(Portable Pixmap \(raw format\) \(RGB\))X
7920 11430(#)B
588(pkm)X
420(Portable inKmap \(plain format\) \(4-bit CMYK => RGB\))X
7920 11270(#)B
588(pkmraw)X
168(Portable inKmap \(raw format\) \(4-bit CMYK => RGB\))X
7920 11110(#)B
588(pngmono)X
84(Monochrome Portable Network Graphics \(PNG\))X
7920 10950(#)B
588(pnggray)X
84(8-bit gray Portable Network Graphics \(PNG\))X
7920 10790(#)B
588(png16)X
252(4-bit color Portable Network Graphics \(PNG\))X
7920 10630(#)B
588(png256)X
168(8-bit color Portable Network Graphics \(PNG\))X
7920 10470(#)B
588(png16m)X
168(24-bit color Portable Network Graphics \(PNG\))X
7920 10310(#)B
588(psmono)X
168(PostScript \(Level 1\) monochrome image)X
7920 10150(#)B
588(psgray)X
168(PostScript \(Level 1\) 8-bit gray image)X
7920 9990(#)B
588(sgirgb)X
168(SGI RGB pixmap format)X
7920 9830(#)B
588(tiff12nc  TIFF 12-bit RGB, no compression)X
7920 9670(#)B
588(tiff24nc  TIFF 24-bit RGB, no compression \(NeXT standard format\))X
7920 9510(#)B
588(tifflzw  TIFF LZW \(tag = 5\) \(monochrome\))X
7920 9350(#)B
588(tiffpack  TIFF PackBits \(tag = 32773\) \(monochrome\))X
7920 9030(# User-contributed drivers marked with * require hardware or software)B
7920 8870(# that is not available to Aladdin Enterprises.  Please contact the)B
7920 8710(# original contributors, not Aladdin Enterprises, if you have questions.)B
7920 8550(# Contact information appears in the driver entry below.)B
7920 8390(#)B
7920 8230(# Drivers marked with a + are maintained by Aladdin Enterprises with)B
7920 8070(# the assistance of users, since Aladdin Enterprises doesn't have access to)B
7920 7910(# the hardware for these either.)B
7920 7590(# If you add drivers, it would be nice if you kept each list)B
7920 7430(# in alphabetical order.)B
7920 7110(###### ----------------------- End of catalog ----------------------- ######)B
7920 6790(# As noted in gs.mak, DEVICE_DEVS and DEVICE_DEVS1..15 select the devices)B
7920 6630(# that should be included in a given configuration.  By convention, these)B
7920 6470(# are used as follows.  Each of these must be limited to about 10 devices)B
7920 6310(# so as not to overflow the 120 character limit on MS-DOS command lines.)B
7920 6150(#)B
588(DEVICE_DEVS - the default device, and any display devices.)X
7920 5990(#)B
588(DEVICE_DEVS1 - additional display devices if needed.)X
7920 5830(#)B
588(DEVICE_DEVS2 - dot matrix printers.)X
7920 5670(#)B
588(DEVICE_DEVS3 - H-P monochrome printers.)X
7920 5510(#)B
588(DEVICE_DEVS4 - H-P color printers.)X
7920 5350(#)B
588(DEVICE_DEVS5 - additional H-P printers if needed.)X
7920 5190(#)B
588(DEVICE_DEVS6 - other ink-jet and laser printers.)X
7920 5030(#)B
588(DEVICE_DEVS7 - fax file formats.)X
7920 4870(#)B
588(DEVICE_DEVS8 - PCX file formats.)X
7920 4710(#)B
588(DEVICE_DEVS9 - PBM/PGM/PPM file formats.)X
7920 4550(#)B
588(DEVICE_DEVS10 - black-and-white TIFF file formats.)X
7920 4390(#)B
588(DEVICE_DEVS11 - BMP and color TIFF file formats.)X
EndPage
%%Page: ? 32
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](3)Gaudy
0 F
360 14470(#)B
588(DEVICE_DEVS12 - PostScript image and 'bit' file formats.)X
360 14310(#)B
588(DEVICE_DEVS13 - PNG file formats.)X
360 14150(#)B
588(DEVICE_DEVS14 - CGM, JPEG, and MIFF file formats.)X
360 13990(#)B
588(DEVICE_DEVS15 - high-level \(PostScript and PDF\) file formats.)X
360 13830(# Feel free to disregard this convention if it gets in your way.)B
360 13510(# If you want to add a new device driver, the examples below should be)B
360 13350(# enough of a guide to the correct form for the makefile rules.)B
360 13190(# Note that all drivers other than displays must include page.dev in their)B
360 13030(# dependencies and use $\(SETPDEV\) rather than $\(SETDEV\) in their rule bodies.)B
360 12710(# All device drivers depend on the following:)B
360 12550(GDEV=$\(AK\) $\(ECHOGS_XE\) $\(gserrors_h\) $\(gx_h\) $\(gxdevice_h\))B
360 12230(# "Printer" drivers depend on the following:)B
360 12070(PDEVH=$\(AK\) $\(gdevprn_h\))B
360 11750(# Define the header files for device drivers.  Every header file used by)B
360 11590(# more than one device driver family must be listed here.)B
360 11430(gdev8bcm_h=gdev8bcm.h)B
360 11270(gdevpccm_h=gdevpccm.h)B
360 11110(gdevpcfb_h=gdevpcfb.h $\(dos__h\))B
360 10950(gdevpcl_h=gdevpcl.h)B
360 10790(gdevsvga_h=gdevsvga.h)B
360 10630(gdevx_h=gdevx.h)B
360 10310(###### ----------------------- Device support ----------------------- ######)B
360 9990(# Provide a mapping between StandardEncoding and ISOLatin1Encoding.)B
360 9830(gdevemap.$\(OBJ\): gdevemap.c $\(AK\) $\(std_h\))B
360 9510(# Implement dynamic color management for 8-bit mapped color displays.)B
360 9350(gdev8bcm.$\(OBJ\): gdev8bcm.c $\(AK\) \\)B
528 9190($\(gx_h\) $\(gxdevice_h\) $\(gdev8bcm_h\))B
360 8870(###### ------------------- MS-DOS display devices ------------------- ######)B
360 8550(# There are really only three drivers: an EGA/VGA driver \(4 bit-planes,)B
360 8390(# plane-addressed\), a SuperVGA driver \(8 bit-planes, byte addressed\),)B
360 8230(# and a special driver for the S3 chip.)B
360 7910(# PC display color mapping)B
360 7750(gdevpccm.$\(OBJ\): gdevpccm.c $\(AK\) \\)B
528 7590($\(gx_h\) $\(gsmatrix_h\) $\(gxdevice_h\) $\(gdevpccm_h\))B
360 7270(### ----------------------- EGA and VGA displays ----------------------- ###)B
360 6950(# The shared MS-DOS makefile defines PCFBASM as either gdevegaa.$\(OBJ\))B
360 6790(# or an empty string.)B
360 6470(gdevegaa.$\(OBJ\): gdevegaa.asm)B
360 6150(# NOTE: for direct frame buffer addressing under SCO Unix or Xenix,)B
360 5990(# change gdevevga to gdevsco in the following line.  Also, since)B
360 5830(# SCO's /bin/as does not support the "out" instructions, you must build)B
360 5670(# the gnu assembler and have it on your path as "as".)B
360 5510(EGAVGA=gdevevga.$\(OBJ\) gdevpcfb.$\(OBJ\) gdevpccm.$\(OBJ\) $\(PCFBASM\))B
360 5350(#EGAVGA=gdevsco.$\(OBJ\) gdevpcfb.$\(OBJ\) gdevpccm.$\(OBJ\) $\(PCFBASM\))B
360 5030(gdevevga.$\(OBJ\): gdevevga.c $\(GDEV\) $\(memory__h\) $\(gdevpcfb_h\))B
1032 4870($\(CCD\) gdevevga.c)B
360 4550(gdevsco.$\(OBJ\): gdevsco.c $\(GDEV\) $\(memory__h\) $\(gdevpcfb_h\))B
7920 14470(# Common code for MS-DOS and SCO.)B
7920 14310(gdevpcfb.$\(OBJ\): gdevpcfb.c $\(GDEV\) $\(memory__h\) $\(gconfigv_h\)\\)B
8004 14150($\(gdevpccm_h\) $\(gdevpcfb_h\) $\(gsparam_h\))B
8592 13990($\(CCD\) gdevpcfb.c)B
7920 13670(# The EGA/VGA family includes EGA and VGA.  Many SuperVGAs in 800x600,)B
7920 13510(# 16-color mode can share the same code; see the next section below.)B
7920 13190(ega.dev: $\(EGAVGA\))B
8592 13030($\(SETDEV\) ega $\(EGAVGA\))B
7920 12710(vga.dev: $\(EGAVGA\))B
8592 12550($\(SETDEV\) vga $\(EGAVGA\))B
7920 12230(### ------------------------- SuperVGA displays ------------------------ ###)B
7920 11910(# SuperVGA displays in 16-color, 800x600 mode are really just slightly)B
7920 11750(# glorified VGA's, so we can handle them all with a single driver.)B
7920 11590(# The way to select them on the command line is with)B
7920 11430(#)B
588(-sDEVICE=svga16 -dDisplayMode=NNN)X
7920 11270(# where NNN is the display mode in decimal.  See use.txt for the modes)B
7920 11110(# for some popular display chipsets.)B
7920 10790(svga16.dev: $\(EGAVGA\))B
8592 10630($\(SETDEV\) svga16 $\(EGAVGA\))B
7920 10310(# More capable SuperVGAs have a wide variety of slightly differing)B
7920 10150(# interfaces, so we need a separate driver for each one.)B
7920 9830(SVGA=gdevsvga.$\(OBJ\) gdevpccm.$\(OBJ\) $\(PCFBASM\))B
7920 9510(gdevsvga.$\(OBJ\): gdevsvga.c $\(GDEV\) $\(memory__h\) $\(gconfigv_h\)\\)B
8004 9350($\(gsparam_h\) $\(gxarith_h\) $\(gdevpccm_h\) $\(gdevpcfb_h\) $\(gdevsvga_h\))B
8592 9190($\(CCD\) gdevsvga.c)B
7920 8870(# The SuperVGA family includes: Avance Logic Inc., ATI Wonder, S3,)B
7920 8710(# Trident, Tseng ET3000/4000, and VESA.)B
7920 8390(ali.dev: $\(SVGA\))B
8592 8230($\(SETDEV\) ali $\(SVGA\))B
7920 7910(atiw.dev: $\(SVGA\))B
8592 7750($\(SETDEV\) atiw $\(SVGA\))B
7920 7430(tseng.dev: $\(SVGA\))B
8592 7270($\(SETDEV\) tseng $\(SVGA\))B
7920 6950(tvga.dev: $\(SVGA\))B
8592 6790($\(SETDEV\) tvga $\(SVGA\))B
7920 6470(vesa.dev: $\(SVGA\))B
8592 6310($\(SETDEV\) vesa $\(SVGA\))B
7920 5990(# The S3 driver doesn't share much code with the others.)B
7920 5670(s3vga_=gdevs3ga.$\(OBJ\) gdevsvga.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 5510(s3vga.dev: $\(SVGA\) $\(s3vga_\))B
8592 5350($\(SETDEV\) s3vga $\(SVGA\))B
8592 5190($\(ADDMOD\) s3vga -obj $\(s3vga_\))B
7920 4870(gdevs3ga.$\(OBJ\): gdevs3ga.c $\(GDEV\) $\(gdevpcfb_h\) $\(gdevsvga_h\))B
8592 4710($\(CCD\) gdevs3ga.c)B
7920 4390(### ------------ The BGI \(Borland Graphics Interface\) device ----------- ###)B
EndPage
%%Page: ? 33
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](4)Gaudy
0 F
360 14310(cgaf.$\(OBJ\): $\(BGIDIR\)\\cga.bgi)B
1032 14150($\(BGIDIR\)\\bgiobj /F $\(BGIDIR\)\\cga)B
360 13830(egavgaf.$\(OBJ\): $\(BGIDIR\)\\egavga.bgi)B
1032 13670($\(BGIDIR\)\\bgiobj /F $\(BGIDIR\)\\egavga)B
360 13350(# Include egavgaf.$\(OBJ\) for debugging only.)B
360 13190(bgi_=gdevbgi.$\(OBJ\) cgaf.$\(OBJ\))B
360 13030(bgi.dev: $\(bgi_\))B
1032 12870($\(SETDEV\) bgi $\(bgi_\))B
1032 12710($\(ADDMOD\) bgi -lib $\(LIBDIR\)\\graphics)B
360 12390(gdevbgi.$\(OBJ\): gdevbgi.c $\(GDEV\) $\(MAKEFILE\) $\(gxxfont_h\))B
1032 12230($\(CCC\) -DBGI_LIB="$\(BGIDIRSTR\)" gdevbgi.c)B
360 11910(### ------------------- The Hercules Graphics display ------------------- ###)B
360 11590(herc_=gdevherc.$\(OBJ\))B
360 11430(herc.dev: $\(herc_\))B
1032 11270($\(SETDEV\) herc $\(herc_\))B
360 10950(gdevherc.$\(OBJ\): gdevherc.c $\(GDEV\) $\(dos__h\) $\(gsmatrix_h\) $\(gxbitmap_h\))B
1032 10790($\(CCC\) gdevherc.c)B
360 10470(### ---------------------- The Private Eye display ---------------------- ###)B
360 10310(### Note: this driver was contributed by a user:                          ###)B
360 10150(###   please contact narf@media-lab.media.mit.edu if you have questions.  ###)B
360 9830(pe_=gdevpe.$\(OBJ\))B
360 9670(pe.dev: $\(pe_\))B
1032 9510($\(SETDEV\) pe $\(pe_\))B
360 9190(gdevpe.$\(OBJ\): gdevpe.c $\(GDEV\) $\(memory__h\))B
360 8870(###### ----------------------- Other displays ------------------------ ######)B
360 8550(### -------------------- The MS-Windows 3.n DLL ------------------------- ###)B
360 8230(gsdll_h=gsdll.h)B
360 7910(gdevmswn_h=gdevmswn.h $\(GDEV\)\\)B
444 7750($\(dos__h\) $\(memory__h\) $\(string__h\) $\(windows__h\)\\)B
444 7590(gp_mswin.h)B
360 7270(gdevmswn.$\(OBJ\): gdevmswn.c $\(gdevmswn_h\) $\(gp_h\) $\(gpcheck_h\) \\)B
444 7110($\(gsdll_h\) $\(gsparam_h\) $\(gdevpccm_h\))B
360 6790(gdevmsxf.$\(OBJ\): gdevmsxf.c $\(ctype__h\) $\(math__h\) $\(memory__h\) $\(string__h\)\\)B
444 6630($\(gdevmswn_h\) $\(gsstruct_h\) $\(gsutil_h\) $\(gxxfont_h\))B
360 6310(# An implementation using a DIB filled by an image device.)B
360 6150(gdevwdib.$\(OBJ\): gdevwdib.c $\(gdevmswn_h\) $\(gsdll_h\) $\(gxdevmem_h\))B
360 5830(mswindll_=gdevmswn.$\(OBJ\) gdevmsxf.$\(OBJ\) gdevwdib.$\(OBJ\) \\)B
528 5670(gdevemap.$\(OBJ\) gdevpccm.$\(OBJ\))B
360 5510(mswindll.dev: $\(mswindll_\))B
1032 5350($\(SETDEV\) mswindll $\(mswindll_\))B
360 5030(### -------------------- The MS-Windows DDB 3.n printer ----------------- ###)B
360 4710(mswinprn_=gdevwprn.$\(OBJ\) gdevmsxf.$\(OBJ\))B
360 4550(mswinprn.dev: $\(mswinprn_\))B
1032 4390($\(SETDEV\) mswinprn $\(mswinprn_\))B
7920 14310(gdevwprn.$\(OBJ\): gdevwprn.c $\(gdevmswn_h\) $\(gp_h\))B
7920 13990(### -------------------- The MS-Windows DIB 3.n printer ----------------- ###)B
7920 13670(mswinpr2_=gdevwpr2.$\(OBJ\))B
7920 13510(mswinpr2.dev: $\(mswinpr2_\) page.dev)B
8592 13350($\(SETPDEV\) mswinpr2 $\(mswinpr2_\))B
7920 13030(gdevwpr2.$\(OBJ\): gdevwpr2.c $\(PDEVH\) $\(windows__h\)\\)B
8004 12870($\(gdevpccm_h\) $\(gp_h\) gp_mswin.h)B
7920 12550(### ------------------ OS/2 Presentation Manager device ----------------- ###)B
7920 12230(os2pm_=gdevpm.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 12070(os2pm.dev: $\(os2pm_\))B
8592 11910($\(SETDEV\) os2pm $\(os2pm_\))B
7920 11590(os2dll_=gdevpm.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 11430(os2dll.dev: $\(os2dll_\))B
8592 11270($\(SETDEV\) os2dll $\(os2dll_\))B
7920 10950(gdevpm.$\(OBJ\): gdevpm.c $\(string__h\)\\)B
8004 10790($\(gp_h\) $\(gpcheck_h\)\\)B
8004 10630($\(gsdll_h\) $\(gserrors_h\) $\(gsexit_h\) $\(gsparam_h\)\\)B
8004 10470($\(gx_h\) $\(gxdevice_h\) $\(gxdevmem_h\)\\)B
8004 10310($\(gdevpccm_h\) gdevpm.h)B
7920 9990(### --------------------------- The OS/2 printer ------------------------ ###)B
7920 9670(os2prn_=gdevos2p.$\(OBJ\))B
7920 9510(os2prn.dev: $\(os2prn_\) page.dev)B
8592 9350($\(SETPDEV\) os2prn $\(os2prn_\))B
7920 9030(os2prn.$\(OBJ\): os2prn.c $\(gp_h\))B
7920 8710(### -------------- The AT&T 3b1 Unixpc monochrome display --------------- ###)B
7920 8550(### Note: this driver was contributed by a user: please contact           ###)B
7920 8390(###       Andy Fyfe \(andy@cs.caltech.edu\) if you have questions.          ###)B
7920 8070(att3b1_=gdev3b1.$\(OBJ\))B
7920 7910(att3b1.dev: $\(att3b1_\))B
8592 7750($\(SETDEV\) att3b1 $\(att3b1_\))B
7920 7430(gdev3b1.$\(OBJ\): gdev3b1.c $\(GDEV\))B
7920 7110(### ---------------------- Linux PC with vgalib ------------------------- ###)B
7920 6950(### Note: these drivers were contributed by users.                        ###)B
7920 6790(### For questions about the lvga256 driver, please contact                ###)B
7920 6630(###       Ludger Kunz \(ludger.kunz@fernuni-hagen.de\).                     ###)B
7920 6470(### For questions about the vgalib driver, please contact                 ###)B
7920 6310(###       Erik Talvola \(talvola@gnu.ai.mit.edu\).                          ###)B
7920 5990(lvga256_=gdevl256.$\(OBJ\))B
7920 5830(lvga256.dev: $\(lvga256_\))B
8592 5670($\(SETDEV\) lvga256 $\(lvga256_\))B
8592 5510($\(ADDMOD\) lvga256 -lib vga vgagl)B
7920 5190(gdevl256.$\(OBJ\): gdevl256.c $\(GDEV\))B
7920 4870(vgalib_=gdevvglb.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 4710(vgalib.dev: $\(vgalib_\))B
8592 4550($\(SETDEV\) vgalib $\(vgalib_\))B
8592 4390($\(ADDMOD\) vgalib -lib vga)B
EndPage
%%Page: ? 34
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](5)Gaudy
0 F
360 14310(gdevvglb.$\(OBJ\): gdevvglb.c $\(GDEV\) $\(gdevpccm_h\) $\(gsparam_h\))B
360 13990(### ------------------- Sony NeWS frame buffer device ------------------ ###)B
360 13830(### Note: this driver was contributed by a user: please contact          ###)B
360 13670(###       Mike Smolenski \(mike@intertech.com\) if you have questions.     ###)B
360 13350(# This is implemented as a 'printer' device.)B
360 13190(sonyfb_=gdevsnfb.$\(OBJ\))B
360 13030(sonyfb.dev: $\(sonyfb_\) page.dev)B
1032 12870($\(SETPDEV\) sonyfb $\(sonyfb_\))B
360 12550(gdevsnfb.$\(OBJ\): gdevsnfb.c $\(PDEVH\))B
360 12230(### ------------------------ The SunView device ------------------------ ###)B
360 12070(### Note: this driver is maintained by a user: if you have questions,    ###)B
360 11910(###       please contact Andreas Stolcke \(stolcke@icsi.berkeley.edu\).    ###)B
360 11590(sunview_=gdevsun.$\(OBJ\))B
360 11430(sunview.dev: $\(sunview_\))B
1032 11270($\(SETDEV\) sunview $\(sunview_\))B
1032 11110($\(ADDMOD\) sunview -lib suntool sunwindow pixrect)B
360 10790(gdevsun.$\(OBJ\): gdevsun.c $\(GDEV\) $\(malloc__h\)\\)B
444 10630($\(gscdefs_h\) $\(gserrors_h\) $\(gsmatrix_h\))B
360 10310(### -------------------------- The X11 device -------------------------- ###)B
360 9990(# Aladdin Enterprises does not support Ghostview.  For more information)B
360 9830(# about Ghostview, please contact Tim Theisen \(ghostview@cs.wisc.edu\).)B
360 9510(# See the main makefile for the definition of XLIBS.)B
360 9350(x11_=gdevx.$\(OBJ\) gdevxini.$\(OBJ\) gdevxxf.$\(OBJ\) gdevemap.$\(OBJ\))B
360 9190(x11.dev: $\(x11_\))B
1032 9030($\(SETDEV\) x11 $\(x11_\))B
1032 8870($\(ADDMOD\) x11 -lib $\(XLIBS\))B
360 8550(# See the main makefile for the definition of XINCLUDE.)B
360 8390(GDEVX=$\(GDEV\) x_.h gdevx.h $\(MAKEFILE\))B
360 8230(gdevx.$\(OBJ\): gdevx.c $\(GDEVX\) $\(math__h\) $\(memory__h\) $\(gsparam_h\))B
1032 8070($\(CCC\) $\(XINCLUDE\) gdevx.c)B
360 7750(gdevxini.$\(OBJ\): gdevxini.c $\(GDEVX\) $\(math__h\) $\(memory__h\) $\(gserrors_h\))B
1032 7590($\(CCC\) $\(XINCLUDE\) gdevxini.c)B
360 7270(gdevxxf.$\(OBJ\): gdevxxf.c $\(GDEVX\) $\(math__h\) $\(memory__h\)\\)B
444 7110($\(gsstruct_h\) $\(gsutil_h\) $\(gxxfont_h\))B
1032 6950($\(CCC\) $\(XINCLUDE\) gdevxxf.c)B
360 6630(# Alternate X11-based devices to help debug other drivers.)B
360 6470(# x11alpha pretends to have 4 bits of alpha channel.)B
360 6310(# x11cmyk pretends to be a CMYK device with 1 bit each of C,M,Y,K.)B
360 6150(# x11gray2 pretends to be a 2-bit gray-scale device.)B
360 5990(# x11mono pretends to be a black-and-white device.)B
360 5830(x11alt_=$\(x11_\) gdevxalt.$\(OBJ\))B
360 5670(x11alpha.dev: $\(x11alt_\))B
1032 5510($\(SETDEV\) x11alpha $\(x11alt_\))B
1032 5350($\(ADDMOD\) x11alpha -lib $\(XLIBS\))B
360 5030(x11cmyk.dev: $\(x11alt_\))B
1032 4870($\(SETDEV\) x11cmyk $\(x11alt_\))B
1032 4710($\(ADDMOD\) x11cmyk -lib $\(XLIBS\))B
360 4390(x11gray2.dev: $\(x11alt_\))B
8592 14470($\(SETDEV\) x11gray2 $\(x11alt_\))B
8592 14310($\(ADDMOD\) x11gray2 -lib $\(XLIBS\))B
7920 13990(x11mono.dev: $\(x11alt_\))B
8592 13830($\(SETDEV\) x11mono $\(x11alt_\))B
8592 13670($\(ADDMOD\) x11mono -lib $\(XLIBS\))B
7920 13350(gdevxalt.$\(OBJ\): gdevxalt.c $\(GDEVX\) $\(math__h\) $\(memory__h\) $\(gsparam_h\))B
8592 13190($\(CCC\) $\(XINCLUDE\) gdevxalt.c)B
7920 12870(### ------------------------- DEC sixel displays ------------------------ ###)B
7920 12710(### Note: this driver was contributed by a user: please contact           ###)B
7920 12550(###   Phil Keegstra \(keegstra@tonga.gsfc.nasa.gov\) if you have questions. ###)B
7920 12230(# This is a "printer" device, but it probably shouldn't be.)B
7920 12070(# I don't know why the implementor chose to do it this way.)B
7920 11910(sxlcrt_=gdevln03.$\(OBJ\))B
7920 11750(sxlcrt.dev: $\(sxlcrt_\) page.dev)B
8592 11590($\(SETPDEV\) sxlcrt $\(sxlcrt_\))B
7920 11270(###### --------------- Memory-buffered printer devices --------------- ######)B
7920 10950(### --------------------- The Apple printer devices --------------------- ###)B
7920 10790(### Note: these drivers were contributed by users.                        ###)B
7920 10630(###   If you have questions about the DMP driver, please contact          ###)B
7920 10470(###)B
420(Mark Wedel \(master@cats.ucsc.edu\).                                ###)X
7920 10310(###   If you have questions about the Imagewriter drivers, please contact ###)B
7920 10150(###)B
420(Jonathan Luckey \(luckey@rtfm.mlb.fl.us\).                          ###)X
7920 9990(###   If you have questions about the Imagewriter LQ driver, please       ###)B
7920 9830(###)B
420(contact Scott Barker \(barkers@cuug.ab.ca\).                        ###)X
7920 9510(appledmp_=gdevadmp.$\(OBJ\))B
7920 9190(gdevadmp.$\(OBJ\): gdevadmp.c $\(PDEVH\))B
7920 8870(appledmp.dev: $\(appledmp_\) page.dev)B
8592 8710($\(SETPDEV\) appledmp $\(appledmp_\))B
7920 8390(iwhi.dev: $\(appledmp_\) page.dev)B
8592 8230($\(SETPDEV\) iwhi $\(appledmp_\))B
7920 7910(iwlo.dev: $\(appledmp_\) page.dev)B
8592 7750($\(SETPDEV\) iwlo $\(appledmp_\))B
7920 7430(iwlq.dev: $\(appledmp_\) page.dev)B
8592 7270($\(SETPDEV\) iwlq $\(appledmp_\))B
7920 6950(### ------------ The Canon BubbleJet BJ10e and BJ200 devices ------------ ###)B
7920 6630(bj10e_=gdevbj10.$\(OBJ\))B
7920 6310(bj10e.dev: $\(bj10e_\) page.dev)B
8592 6150($\(SETPDEV\) bj10e $\(bj10e_\))B
7920 5830(bj200.dev: $\(bj10e_\) page.dev)B
8592 5670($\(SETPDEV\) bj200 $\(bj10e_\))B
7920 5350(gdevbj10.$\(OBJ\): gdevbj10.c $\(PDEVH\))B
7920 5030(### ------------- The CalComp Raster Format ----------------------------- ###)B
7920 4870(### Note: this driver was contributed by a user: please contact           ###)B
7920 4710(###       Ernst Muellner \(ernst.muellner@oenzl.siemens.de\) if you have    ###)B
7920 4550(###       questions.                                                      ###)B
EndPage
%%Page: ? 35
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](6)Gaudy
0 F
360 14470(ccr_=gdevccr.$\(OBJ\))B
360 14310(ccr.dev: $\(ccr_\) page.dev)B
1032 14150($\(SETPDEV\) ccr $\(ccr_\))B
360 13830(gdevccr.$\(OBJ\): gdevccr.c $\(PDEVH\))B
360 13510(### ----------- The H-P DeskJet and LaserJet printer devices ----------- ###)B
360 13190(### These are essentially the same device.)B
360 13030(### NOTE: printing at full resolution \(300 DPI\) requires a printer)B
360 12870(###   with at least 1.5 Mb of memory.  150 DPI only requires .5 Mb.)B
360 12710(### Note that the lj4dith driver is included with the H-P color printer)B
360 12550(###   drivers below.)B
360 12230(HPPCL=gdevpcl.$\(OBJ\))B
360 12070(HPMONO=gdevdjet.$\(OBJ\) $\(HPPCL\))B
360 11750(gdevpcl.$\(OBJ\): gdevpcl.c $\(PDEVH\) $\(gdevpcl_h\))B
360 11430(gdevdjet.$\(OBJ\): gdevdjet.c $\(PDEVH\) $\(gdevpcl_h\))B
360 11110(deskjet.dev: $\(HPMONO\) page.dev)B
1032 10950($\(SETPDEV\) deskjet $\(HPMONO\))B
360 10630(djet500.dev: $\(HPMONO\) page.dev)B
1032 10470($\(SETPDEV\) djet500 $\(HPMONO\))B
360 10150(laserjet.dev: $\(HPMONO\) page.dev)B
1032 9990($\(SETPDEV\) laserjet $\(HPMONO\))B
360 9670(ljetplus.dev: $\(HPMONO\) page.dev)B
1032 9510($\(SETPDEV\) ljetplus $\(HPMONO\))B
360 9190(### Selecting ljet2p provides TIFF \(mode 2\) compression on LaserJet III,)B
360 9030(### IIIp, IIId, IIIsi, IId, and IIp. )B
360 8710(ljet2p.dev: $\(HPMONO\) page.dev)B
1032 8550($\(SETPDEV\) ljet2p $\(HPMONO\))B
360 8230(### Selecting ljet3 provides Delta Row \(mode 3\) compression on LaserJet III,)B
360 8070(### IIIp, IIId, IIIsi.)B
360 7750(ljet3.dev: $\(HPMONO\) page.dev)B
1032 7590($\(SETPDEV\) ljet3 $\(HPMONO\))B
360 7270(### Selecting ljet3d also provides duplex printing capability.)B
360 6950(ljet3d.dev: $\(HPMONO\) page.dev)B
1032 6790($\(SETPDEV\) ljet3d $\(HPMONO\))B
360 6470(### Selecting ljet4 also provides Delta Row compression on LaserJet IV series.)B
360 6150(ljet4.dev: $\(HPMONO\) page.dev)B
1032 5990($\(SETPDEV\) ljet4 $\(HPMONO\))B
360 5670(lp2563.dev: $\(HPMONO\) page.dev)B
1032 5510($\(SETPDEV\) lp2563 $\(HPMONO\))B
360 5190(oce9050.dev: $\(HPMONO\) page.dev)B
1032 5030($\(SETPDEV\) oce9050 $\(HPMONO\))B
360 4710(### ------------------ The H-P LaserJet 5 and 6 devices ----------------- ###)B
360 4390(### These drivers use H-P's new PCL XL printer language, like H-P's)B
7920 14470(### LaserJet 5 Enhanced driver for MS Windows.)B
7920 14310(### The current drivers just produce raster dumps.)B
7920 13990(gdevpxat_h=gdevpxat.h)B
7920 13830(gdevpxen_h=gdevpxen.h)B
7920 13670(gdevpxop_h=gdevpxop.h)B
7920 13350(ljet5_=gdevlj56.$\(OBJ\) $\(HPPCL\))B
7920 13190(lj5mono.dev: $\(ljet5_\) page.dev)B
8592 13030($\(SETPDEV\) lj5mono $\(ljet5_\))B
7920 12710(lj5gray.dev: $\(ljet5_\) page.dev)B
8592 12550($\(SETPDEV\) lj5gray $\(ljet5_\))B
7920 12230(gdevlj56.$\(OBJ\): gdevlj56.c $\(PDEVH\) $\(gdevpcl_h\)\\)B
8004 12070($\(gdevpxat_h\) $\(gdevpxen_h\) $\(gdevpxop_h\))B
7920 11750(### The H-P DeskJet, PaintJet, and DesignJet family color printer devices.###)B
7920 11590(### Note: there are two different 500C drivers, both contributed by users.###)B
7920 11430(###   If you have questions about the djet500c driver,                    ###)B
7920 11270(###       please contact AKayser@et.tudelft.nl.                           ###)B
7920 11110(###   If you have questions about the cdj* drivers,                       ###)B
7920 10950(###       please contact g.cameron@biomed.abdn.ac.uk.                     ###)B
7920 10790(###   If you have questions about the dnj560c driver,                     ###)B
7920 10630(###       please contact koert@zen.cais.com.                              ###)B
7920 10470(###   If you have questions about the lj4dith driver,                     ###)B
7920 10310(###       please contact Eckhard.Rueggeberg@ts.go.dlr.de.                 ###)B
7920 10150(###   If you have questions about the BJC600/BJC4000, BJC800, or ESCP     ###)B
7920 9990(###       drivers, please contact Yves.Arrouye@imag.fr.                   ###)B
7920 9670(cdeskjet_=gdevcdj.$\(OBJ\) $\(HPPCL\))B
7920 9350(cdeskjet.dev: $\(cdeskjet_\) page.dev)B
8592 9190($\(SETPDEV\) cdeskjet $\(cdeskjet_\))B
7920 8870(cdjcolor.dev: $\(cdeskjet_\) page.dev)B
8592 8710($\(SETPDEV\) cdjcolor $\(cdeskjet_\))B
7920 8390(cdjmono.dev: $\(cdeskjet_\) page.dev)B
8592 8230($\(SETPDEV\) cdjmono $\(cdeskjet_\))B
7920 7910(cdj500.dev: $\(cdeskjet_\) page.dev)B
8592 7750($\(SETPDEV\) cdj500 $\(cdeskjet_\))B
7920 7430(cdj550.dev: $\(cdeskjet_\) page.dev)B
8592 7270($\(SETPDEV\) cdj550 $\(cdeskjet_\))B
7920 6950(declj250.dev: $\(cdeskjet_\) page.dev)B
8592 6790($\(SETPDEV\) declj250 $\(cdeskjet_\))B
7920 6470(dnj650c.dev: $\(cdeskjet_\) page.dev)B
8592 6310($\(SETPDEV\) dnj650c $\(cdeskjet_\))B
7920 5990(lj4dith.dev: $\(cdeskjet_\) page.dev)B
8592 5830($\(SETPDEV\) lj4dith $\(cdeskjet_\))B
7920 5510(pj.dev: $\(cdeskjet_\) page.dev)B
8592 5350($\(SETPDEV\) pj $\(cdeskjet_\))B
7920 5030(pjxl.dev: $\(cdeskjet_\) page.dev)B
8592 4870($\(SETPDEV\) pjxl $\(cdeskjet_\))B
7920 4550(pjxl300.dev: $\(cdeskjet_\) page.dev)B
8592 4390($\(SETPDEV\) pjxl300 $\(cdeskjet_\))B
EndPage
%%Page: ? 36
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](7)Gaudy
0 F
360 14310(# Note: the BJC600 driver also works for the BJC4000.)B
360 14150(bjc600.dev: $\(cdeskjet_\) page.dev)B
1032 13990($\(SETPDEV\) bjc600 $\(cdeskjet_\))B
360 13670(bjc800.dev: $\(cdeskjet_\) page.dev)B
1032 13510($\(SETPDEV\) bjc800 $\(cdeskjet_\))B
360 13190(escp.dev: $\(cdeskjet_\) page.dev)B
1032 13030($\(SETPDEV\) escp $\(cdeskjet_\))B
360 12710(# NB: you can also customise the build if required, using)B
360 12550(# -DBitsPerPixel=<number> if you wish the default to be other than 24)B
360 12390(# for the generic drivers \(cdj500, cdj550, pjxl300, pjtest, pjxltest\).)B
360 12230(gdevcdj.$\(OBJ\): gdevcdj.c $\(std_h\) $\(PDEVH\) gdevbjc.h\\)B
444 12070($\(gsparam_h\) $\(gsstate_h\) $\(gxlum_h\)\\)B
444 11910($\(gdevpcl_h\))B
360 11590(djet500c_=gdevdjtc.$\(OBJ\) $\(HPPCL\))B
360 11430(djet500c.dev: $\(djet500c_\) page.dev)B
1032 11270($\(SETPDEV\) djet500c $\(djet500c_\))B
360 10950(gdevdjtc.$\(OBJ\): gdevdjtc.c $\(PDEVH\) $\(malloc__h\) $\(gdevpcl_h\))B
360 10630(### -------------------- The Mitsubishi CP50 printer -------------------- ###)B
360 10470(### Note: this driver was contributed by a user: please contact           ###)B
360 10310(###       Michael Hu \(michael@ximage.com\) if you have questions.          ###)B
360 9990(cp50_=gdevcp50.$\(OBJ\))B
360 9830(cp50.dev: $\(cp50_\) page.dev)B
1032 9670($\(SETPDEV\) cp50 $\(cp50_\))B
360 9350(gdevcp50.$\(OBJ\): gdevcp50.c $\(PDEVH\))B
360 9030(### ----------------- The generic Epson printer device ----------------- ###)B
360 8870(### Note: most of this code was contributed by users.  Please contact    ###)B
360 8710(###       the following people if you have questions:                    ###)B
360 8550(###   eps9mid - Guenther Thomsen \(thomsen@cs.tu-berlin.de\)               ###)B
360 8390(###   eps9high - David Wexelblat \(dwex@mtgzfs3.att.com\)                  ###)B
360 8230(###   ibmpro - James W. Birdsall \(jwbirdsa@picarefy.picarefy.com\)        ###)B
360 7910(epson_=gdevepsn.$\(OBJ\))B
360 7590(epson.dev: $\(epson_\) page.dev)B
1032 7430($\(SETPDEV\) epson $\(epson_\))B
360 7110(eps9mid.dev: $\(epson_\) page.dev)B
1032 6950($\(SETPDEV\) eps9mid $\(epson_\))B
360 6630(eps9high.dev: $\(epson_\) page.dev)B
1032 6470($\(SETPDEV\) eps9high $\(epson_\))B
360 6150(gdevepsn.$\(OBJ\): gdevepsn.c $\(PDEVH\))B
360 5830(### ----------------- The IBM Proprinter printer device ---------------- ###)B
360 5510(ibmpro.dev: $\(epson_\) page.dev)B
1032 5350($\(SETPDEV\) ibmpro $\(epson_\))B
360 5030(### -------------- The Epson LQ-2550 color printer device -------------- ###)B
360 4870(### Note: this driver was contributed by users: please contact           ###)B
360 4710(###       Dave St. Clair \(dave@exlog.com\) if you have questions.         ###)B
360 4390(epsonc_=gdevepsc.$\(OBJ\))B
7920 14470(epsonc.dev: $\(epsonc_\) page.dev)B
8592 14310($\(SETPDEV\) epsonc $\(epsonc_\))B
7920 13990(gdevepsc.$\(OBJ\): gdevepsc.c $\(PDEVH\))B
7920 13670(### ------------- The Epson ESC/P 2 language printer devices ------------- ###)B
7920 13510(### Note: these drivers were contributed by users.                         ###)B
7920 13350(### For questions about the Stylus 800 and AP3250 drivers, please contact  ###)B
7920 13190(###        Richard Brown \(rab@tauon.ph.unimelb.edu.au\).                    ###)B
7920 13030(### For questions about the Stylus Color drivers, please contact           ###)B
7920 12870(###        Gunther Hess \(gunther@elmos.de\).                                ###)B
7920 12550(ESCP2=gdevescp.$\(OBJ\))B
7920 12230(gdevescp.$\(OBJ\): gdevescp.c $\(PDEVH\))B
7920 11910(ap3250.dev: $\(ESCP2\) page.dev)B
8592 11750($\(SETPDEV\) ap3250 $\(ESCP2\))B
7920 11430(st800.dev: $\(ESCP2\) page.dev)B
8592 11270($\(SETPDEV\) st800 $\(ESCP2\))B
7920 10950(stcolor1_=gdevstc.$\(OBJ\) gdevstc1.$\(OBJ\) gdevstc2.$\(OBJ\))B
7920 10790(stcolor2_=gdevstc3.$\(OBJ\) gdevstc4.$\(OBJ\))B
7920 10630(stcolor.dev: $\(stcolor1_\) $\(stcolor2_\) page.dev)B
8592 10470($\(SETPDEV\) stcolor $\(stcolor1_\))B
8592 10310($\(ADDMOD\) stcolor -obj $\(stcolor2_\))B
7920 9990(gdevstc.$\(OBJ\): gdevstc.c gdevstc.h $\(PDEVH\))B
7920 9670(gdevstc1.$\(OBJ\): gdevstc1.c gdevstc.h $\(PDEVH\))B
7920 9350(gdevstc2.$\(OBJ\): gdevstc2.c gdevstc.h $\(PDEVH\))B
7920 9030(gdevstc3.$\(OBJ\): gdevstc3.c gdevstc.h $\(PDEVH\))B
7920 8710(gdevstc4.$\(OBJ\): gdevstc4.c gdevstc.h $\(PDEVH\))B
7920 8390(### --------------- Ugly/Update -> Unified Printer Driver ---------------- ###)B
7920 8230(### For questions about this driver, please contact:                       ###)B
7920 8070(###        Gunther Hess \(gunther@elmos.de\)                                 ###)B
7920 7750(uniprint_=gdevupd.$\(OBJ\))B
7920 7590(uniprint.dev: $\(uniprint_\) page.dev)B
8592 7430($\(SETPDEV\) uniprint $\(uniprint_\))B
7920 7110(gdevupd.$\(OBJ\): gdevupd.c $\(PDEVH\) $\(gsparam_h\))B
7920 6790(### -------------- cdj850 - HP 850c Driver under development ------------- ###)B
7920 6630(### Since this driver is in the development-phase it is not distributed    ###)B
7920 6470(### with ghostscript, but it is available via anonymous ftp from:          ###)B
7920 6310(###                        ftp://bonk.ethz.ch                              ###)B
7920 6150(### For questions about this driver, please contact:                       ###)B
7920 5990(###       Uli Wortmann \(E-Mail address inside the driver-package\)          ###)B
7920 5670(cdeskjet8_=gdevcd8.$\(OBJ\) $\(HPPCL\))B
7920 5350(cdj850.dev: $\(cdeskjet8_\) page.dev)B
8592 5190($\(SETPDEV\) cdj850 $\(cdeskjet8_\))B
7920 4870(### ------------ The H-P PaintJet color printer device ----------------- ###)B
7920 4710(### Note: this driver also supports the DEC LJ250 color printer, which   ###)B
7920 4550(###       has a PaintJet-compatible mode, and the PaintJet XL.           ###)B
7920 4390(### If you have questions about the XL, please contact Rob Reiss         ###)B
EndPage
%%Page: ? 37
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](8)Gaudy
0 F
360 14470(###       \(rob@moray.berkeley.edu\).                                      ###)B
360 14150(PJET=gdevpjet.$\(OBJ\) $\(HPPCL\))B
360 13830(gdevpjet.$\(OBJ\): gdevpjet.c $\(PDEVH\) $\(gdevpcl_h\))B
360 13510(lj250.dev: $\(PJET\) page.dev)B
1032 13350($\(SETPDEV\) lj250 $\(PJET\))B
360 13030(paintjet.dev: $\(PJET\) page.dev)B
1032 12870($\(SETPDEV\) paintjet $\(PJET\))B
360 12550(pjetxl.dev: $\(PJET\) page.dev)B
1032 12390($\(SETPDEV\) pjetxl $\(PJET\))B
360 12070(### -------------- Imagen ImPress Laser Printer device ----------------- ###)B
360 11910(### Note: this driver was contributed by a user: please contact          ###)B
360 11750(###       Alan Millar \(AMillar@bolis.sf-bay.org\) if you have questions.  ###)B
360 11590(### Set USE_BYTE_STREAM if using parallel interface;                     ###)B
360 11430(### Don't set it if using 'ipr' spooler \(default\).                       ###)B
360 11270(### You may also add -DA4 if needed for A4 paper.)B
2016(###)X
360 10950(imagen_=gdevimgn.$\(OBJ\))B
360 10790(imagen.dev: $\(imagen_\) page.dev)B
1032 10630($\(SETPDEV\) imagen $\(imagen_\))B
360 10310(gdevimgn.$\(OBJ\): gdevimgn.c $\(PDEVH\))B
1032 10150($\(CCC\) gdevimgn.c)B
1932(# for ipr spooler)X
360 9990(#)B
588($\(CCC\) -DUSE_BYTE_STREAM gdevimgn.c)X
420(# for parallel)X
360 9670(### ------- The IBM 3852 JetPrinter color inkjet printer device -------- ###)B
360 9510(### Note: this driver was contributed by users: please contact           ###)B
360 9350(###       Kevin Gift \(kgift@draper.com\) if you have questions.           ###)B
360 9190(### Note that the paper size that can be addressed by the graphics mode  ###)B
360 9030(###   used in this driver is fixed at 7-1/2 inches wide \(the printable   ###)B
360 8870(###   width of the jetprinter itself.\)                                   ###)B
360 8550(jetp3852_=gdev3852.$\(OBJ\))B
360 8390(jetp3852.dev: $\(jetp3852_\) page.dev)B
1032 8230($\(SETPDEV\) jetp3852 $\(jetp3852_\))B
360 7910(gdev3852.$\(OBJ\): gdev3852.c $\(PDEVH\) $\(gdevpcl_h\))B
360 7590(### ---------- The Canon LBP-8II and LIPS III printer devices ---------- ###)B
360 7430(### Note: these drivers were contributed by users.                       ###)B
360 7270(### For questions about these drivers, please contact                    ###)B
360 7110(###       Lauri Paatero, lauri.paatero@paatero.pp.fi                     ###)B
360 6790(lbp8_=gdevlbp8.$\(OBJ\))B
360 6630(lbp8.dev: $\(lbp8_\) page.dev)B
1032 6470($\(SETPDEV\) lbp8 $\(lbp8_\))B
360 6150(lips3.dev: $\(lbp8_\) page.dev)B
1032 5990($\(SETPDEV\) lips3 $\(lbp8_\))B
360 5670(gdevlbp8.$\(OBJ\): gdevlbp8.c $\(PDEVH\))B
360 5350(### ----------- The DEC LN03/LA50/LA70/LA75 printer devices ------------ ###)B
360 5190(### Note: this driver was contributed by users: please contact           ###)B
360 5030(###       Ulrich Mueller \(ulm@vsnhd1.cern.ch\) if you have questions.     ###)B
360 4870(### For questions about LA50 and LA75, please contact                    ###)B
360 4710(###       Ian MacPhedran \(macphed@dvinci.USask.CA\).                      ###)B
360 4550(### For questions about the LA70, please contact                         ###)B
360 4390(###       Bruce Lowekamp \(lowekamp@csugrad.cs.vt.edu\).                   ###)B
7920 14470(### For questions about the LA75plus, please contact                     ###)B
7920 14310(###       Andre' Beck \(Andre_Beck@IRS.Inf.TU-Dresden.de\).                ###)B
7920 13990(ln03_=gdevln03.$\(OBJ\))B
7920 13830(ln03.dev: $\(ln03_\) page.dev)B
8592 13670($\(SETPDEV\) ln03 $\(ln03_\))B
7920 13350(la50.dev: $\(ln03_\) page.dev)B
8592 13190($\(SETPDEV\) la50 $\(ln03_\))B
7920 12870(la70.dev: $\(ln03_\) page.dev)B
8592 12710($\(SETPDEV\) la70 $\(ln03_\))B
7920 12390(la75.dev: $\(ln03_\) page.dev)B
8592 12230($\(SETPDEV\) la75 $\(ln03_\))B
7920 11910(la75plus.dev: $\(ln03_\) page.dev)B
8592 11750($\(SETPDEV\) la75plus $\(ln03_\))B
7920 11430(gdevln03.$\(OBJ\): gdevln03.c $\(PDEVH\))B
7920 11110(# LA70 driver with low-resolution text enhancement.)B
7920 10790(la70t_=gdevla7t.$\(OBJ\))B
7920 10630(la70t.dev: $\(la70t_\) page.dev)B
8592 10470($\(SETPDEV\) la70t $\(la70t_\))B
7920 10150(gdevla7t.$\(OBJ\): gdevla7t.c $\(PDEVH\))B
7920 9830(### -------------- The Epson LP-8000 laser printer device -------------- ###)B
7920 9670(### Note: this driver was contributed by a user: please contact Oleg     ###)B
7920 9510(###       Oleg Fat'yanov <faty1@rlem.titech.ac.jp> if you have questions.###)B
7920 9190(lp8000_=gdevlp8k.$\(OBJ\))B
7920 9030(lp8000.dev: $\(lp8000_\) page.dev)B
8592 8870($\(SETPDEV\) lp8000 $\(lp8000_\))B
7920 8550(gdevlp8k.$\(OBJ\): gdevlp8k.c $\(PDEVH\))B
7920 8230(### -------------- The C.Itoh M8510 printer device --------------------- ###)B
7920 8070(### Note: this driver was contributed by a user: please contact Bob      ###)B
7920 7910(###       Smith <bob@snuffy.penfield.ny.us> if you have questions.       ###)B
7920 7590(m8510_=gdev8510.$\(OBJ\))B
7920 7430(m8510.dev: $\(m8510_\) page.dev)B
8592 7270($\(SETPDEV\) m8510 $\(m8510_\))B
7920 6950(gdev8510.$\(OBJ\): gdev8510.c $\(PDEVH\))B
7920 6630(### --------------------- The NEC P6 family devices -------------------- ###)B
7920 6310(necp6_=gdevnp6.$\(OBJ\))B
7920 6150(necp6.dev: $\(necp6_\) page.dev)B
8592 5990($\(SETPDEV\) necp6 $\(necp6_\))B
7920 5670(gdevnp6.$\(OBJ\): gdevnp6.c $\(PDEVH\))B
7920 5350(### ----------------- The Okidata MicroLine 182 device ----------------- ###)B
7920 5190(### Note: this driver was contributed by a user: please contact          ###)B
7920 5030(###       Maarten Koning \(smeg@bnr.ca\) if you have questions.            ###)B
7920 4710(oki182_=gdevo182.$\(OBJ\))B
7920 4550(oki182.dev: $\(oki182_\) page.dev)B
8592 4390($\(SETPDEV\) oki182 $\(oki182_\))B
EndPage
%%Page: ? 38
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](9)Gaudy
0 F
360 14310(gdevo182.$\(OBJ\): gdevo182.c $\(PDEVH\))B
360 13990(### ------------- The Okidata IBM compatible printer device ------------ ###)B
360 13830(### Note: this driver was contributed by a user: please contact          ###)B
360 13670(###       Charles Mack \(chasm@netcom.com\) if you have questions.         ###)B
360 13350(okiibm_=gdevokii.$\(OBJ\))B
360 13190(okiibm.dev: $\(okiibm_\) page.dev)B
1032 13030($\(SETPDEV\) okiibm $\(okiibm_\))B
360 12710(gdevokii.$\(OBJ\): gdevokii.c $\(PDEVH\))B
360 12390(### ------------- The Ricoh 4081 laser printer device ------------------ ###)B
360 12230(### Note: this driver was contributed by users:                          ###)B
360 12070(###       please contact kdw@oasis.icl.co.uk if you have questions.      ###)B
360 11750(r4081_=gdev4081.$\(OBJ\))B
360 11590(r4081.dev: $\(r4081_\) page.dev)B
1032 11430($\(SETPDEV\) r4081 $\(r4081_\))B
360 10950(gdev4081.$\(OBJ\): gdev4081.c $\(PDEVH\))B
360 10630(### -------------------- Sony NWP533 printer device -------------------- ###)B
360 10470(### Note: this driver was contributed by a user: please contact Tero     ###)B
360 10310(###       Kivinen \(kivinen@joker.cs.hut.fi\) if you have questions.       ###)B
360 9990(nwp533_=gdevn533.$\(OBJ\))B
360 9830(nwp533.dev: $\(nwp533_\) page.dev)B
1032 9670($\(SETPDEV\) nwp533 $\(nwp533_\))B
360 9350(gdevn533.$\(OBJ\): gdevn533.c $\(PDEVH\))B
360 9030(### ------------------------- The SPARCprinter ------------------------- ###)B
360 8870(### Note: this driver was contributed by users: please contact Martin    ###)B
360 8710(###       Schulte \(schulte@thp.uni-koeln.de\) if you have questions.      ###)B
360 8550(###       He would also like to hear from anyone using the driver.       ###)B
360 8390(### Please consult the source code for additional documentation.         ###)B
360 8070(sparc_=gdevsppr.$\(OBJ\))B
360 7910(sparc.dev: $\(sparc_\) page.dev)B
1032 7750($\(SETPDEV\) sparc $\(sparc_\))B
360 7430(gdevsppr.$\(OBJ\): gdevsppr.c $\(PDEVH\))B
360 7110(### ----------------- The StarJet SJ48 device -------------------------- ###)B
360 6950(### Note: this driver was contributed by a user: if you have questions,  ###)B
360 6790(###)B
2268(.                                          ###)X
360 6630(###       please contact Mats Akerblom \(f86ma@dd.chalmers.se\).           ###)B
360 6310(sj48_=gdevsj48.$\(OBJ\))B
360 6150(sj48.dev: $\(sj48_\) page.dev)B
1032 5990($\(SETPDEV\) sj48 $\(sj48_\))B
360 5670(gdevsj48.$\(OBJ\): gdevsj48.c $\(PDEVH\))B
360 5350(### ----------------- Tektronix 4396d color printer -------------------- ###)B
360 5190(### Note: this driver was contributed by a user: please contact          ###)B
360 5030(###       Karl Hakimian \(hakimian@haney.eecs.wsu.edu\)                    ###)B
360 4870(###       if you have questions.                                         ###)B
360 4550(t4693d_=gdev4693.$\(OBJ\))B
360 4390(t4693d2.dev: $\(t4693d_\) page.dev)B
8592 14470($\(SETPDEV\) t4693d2 $\(t4693d_\))B
7920 14150(t4693d4.dev: $\(t4693d_\) page.dev)B
8592 13990($\(SETPDEV\) t4693d4 $\(t4693d_\))B
7920 13670(t4693d8.dev: $\(t4693d_\) page.dev)B
8592 13510($\(SETPDEV\) t4693d8 $\(t4693d_\))B
7920 13190(gdev4693.$\(OBJ\): gdev4693.c $\(PDEVH\))B
7920 12870(### -------------------- Tektronix ink-jet printers -------------------- ###)B
7920 12710(### Note: this driver was contributed by a user: please contact          ###)B
7920 12550(###       Karsten Spang \(spang@nbivax.nbi.dk\) if you have questions.     ###)B
7920 12230(tek4696_=gdevtknk.$\(OBJ\))B
7920 12070(tek4696.dev: $\(tek4696_\) page.dev)B
8592 11910($\(SETPDEV\) tek4696 $\(tek4696_\))B
7920 11590(gdevtknk.$\(OBJ\): gdevtknk.c $\(PDEVH\) $\(malloc__h\))B
7920 11270(### ----------------- The Xerox XES printer device --------------------- ###)B
7920 11110(### Note: this driver was contributed by users: please contact           ###)B
7920 10950(###       Peter Flass \(flass@lbdrscs.bitnet\) if you have questions.      ###)B
7920 10630(xes_=gdevxes.$\(OBJ\))B
7920 10470(xes.dev: $\(xes_\) page.dev)B
8592 10310($\(SETPDEV\) xes $\(xes_\))B
7920 9990(gdevxes.$\(OBJ\): gdevxes.c $\(PDEVH\))B
7920 9670(###### ------------------------- Fax devices ------------------------- ######)B
7920 9350(### --------------- Generic PostScript system compatible fax ------------ ###)B
7920 9030(# This code doesn't work yet.  Don't even think about using it.)B
7920 8710(PSFAX=gdevpfax.$\(OBJ\))B
7920 8390(psfax_=$\(PSFAX\))B
7920 8230(psfax.dev: $\(psfax_\) page.dev)B
8592 8070($\(SETPDEV\) psfax $\(psfax_\))B
8592 7910($\(ADDMOD\) psfax -iodev Fax)B
7920 7590(gdevpfax.$\(OBJ\): gdevpfax.c $\(PDEVH\) $\(gsparam_h\) $\(gxiodev_h\))B
7920 7270(### ------------------------- The DigiFAX device ------------------------ ###)B
7920 7110(###    This driver outputs images in a format suitable for use with       ###)B
7920 6950(###    DigiBoard, Inc.'s DigiFAX software.  Use -sDEVICE=dfaxhigh for     ###)B
7920 6790(###    high resolution output, -sDEVICE=dfaxlow for normal output.        ###)B
7920 6630(### Note: this driver was contributed by a user: please contact           ###)B
7920 6470(###       Rick Richardson \(rick@digibd.com\) if you have questions.        ###)B
7920 6150(dfax_=gdevdfax.$\(OBJ\) gdevtfax.$\(OBJ\))B
7920 5830(dfaxlow.dev: $\(dfax_\) page.dev)B
8592 5670($\(SETPDEV\) dfaxlow $\(dfax_\))B
8592 5510($\(ADDMOD\) dfaxlow -include cfe)B
7920 5190(dfaxhigh.dev: $\(dfax_\) page.dev)B
8592 5030($\(SETPDEV\) dfaxhigh $\(dfax_\))B
8592 4870($\(ADDMOD\) dfaxhigh -include cfe)B
7920 4550(gdevdfax.$\(OBJ\): gdevdfax.c $\(PDEVH\) $\(scfx_h\) $\(strimpl_h\))B
EndPage
%%Page: ? 39
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](10)Gaudy
0 F
360 14470(### --------------See under TIFF below for fax-format TIFF -------------- ###)B
360 14150(###### ------------------- High-level file formats ------------------- ######)B
360 13830(# Support for PostScript and PDF)B
360 13510(gdevpsdf_h=gdevpsdf.h $\(gdevvec_h\) $\(strimpl_h\))B
360 13350(gdevpstr_h=gdevpstr.h)B
360 13030(gdevpsdf.$\(OBJ\): gdevpsdf.c $\(stdio__h\) $\(string__h\)\\)B
444 12870($\(gserror_h\) $\(gserrors_h\) $\(gsmemory_h\) $\(gsparam_h\) $\(gstypes_h\)\\)B
444 12710($\(gxdevice_h\)\\)B
444 12550($\(scfx_h\) $\(slzwx_h\) $\(srlx_h\) $\(strimpl_h\)\\)B
444 12390($\(gdevpsdf_h\) $\(gdevpstr_h\))B
360 12070(gdevpstr.$\(OBJ\): gdevpstr.c $\(math__h\) $\(stdio__h\) $\(string__h\)\\)B
444 11910($\(gdevpstr_h\) $\(stream_h\))B
360 11590(# PostScript and EPS writers)B
360 11270(pswrite1_=gdevps.$\(OBJ\) gdevpsdf.$\(OBJ\) gdevpstr.$\(OBJ\))B
360 11110(pswrite2_=scantab.$\(OBJ\) sfilter2.$\(OBJ\))B
360 10950(pswrite_=$\(pswrite1_\) $\(pswrite2_\))B
360 10790(epswrite.dev: $\(ECHOGS_XE\) $\(pswrite_\) vector.dev)B
1032 10630($\(SETDEV\) epswrite $\(pswrite1_\))B
1032 10470($\(ADDMOD\) epswrite $\(pswrite2_\))B
1032 10310($\(ADDMOD\) epswrite -include vector)B
360 9990(pswrite.dev: $\(ECHOGS_XE\) $\(pswrite_\) vector.dev)B
1032 9830($\(SETDEV\) pswrite $\(pswrite1_\))B
1032 9670($\(ADDMOD\) pswrite $\(pswrite2_\))B
1032 9510($\(ADDMOD\) pswrite -include vector)B
360 9190(gdevps.$\(OBJ\): gdevps.c $\(GDEV\) $\(math__h\) $\(time__h\)\\)B
444 9030($\(gscdefs_h\) $\(gscspace_h\) $\(gsparam_h\) $\(gsiparam_h\) $\(gsmatrix_h\)\\)B
444 8870($\(gxdcolor_h\)\\)B
444 8710($\(sa85x_h\) $\(strimpl_h\)\\)B
444 8550($\(gdevpsdf_h\) $\(gdevpstr_h\))B
360 8230(# PDF writer)B
360 8070(# Note that gs_pdfwr.ps will only actually be loaded if the configuration)B
360 7910(# includes a PostScript interpreter.)B
360 7590(pdfwrite1_=gdevpdf.$\(OBJ\) gdevpdfi.$\(OBJ\) gdevpdfm.$\(OBJ\))B
360 7430(pdfwrite2_=gdevpdfp.$\(OBJ\) gdevpdft.$\(OBJ\) gdevpsdf.$\(OBJ\) gdevpstr.$\(OBJ\))B
360 7270(pdfwrite3_=gsflip.$\(OBJ\) scantab.$\(OBJ\) sfilter2.$\(OBJ\) sstring.$\(OBJ\))B
360 7110(pdfwrite_=$\(pdfwrite1_\) $\(pdfwrite2_\) $\(pdfwrite3_\))B
360 6950(pdfwrite.dev: $\(ECHOGS_XE\) $\(pdfwrite_\) \\)B
528 6790(cmyklib.dev cfe.dev dcte.dev lzwe.dev rle.dev vector.dev)B
1032 6630($\(SETDEV\) pdfwrite $\(pdfwrite1_\))B
1032 6470($\(ADDMOD\) pdfwrite $\(pdfwrite2_\))B
1032 6310($\(ADDMOD\) pdfwrite $\(pdfwrite3_\))B
1032 6150($\(ADDMOD\) pdfwrite -ps gs_pdfwr)B
1032 5990($\(ADDMOD\) pdfwrite -include cmyklib cfe dcte lzwe rle vector)B
360 5670(gdevpdfx_h=gdevpdfx.h $\(gsparam_h\) $\(gxdevice_h\) $\(gxline_h\) $\(stream_h\)\\)B
444 5510($\(gdevpsdf_h\) $\(gdevpstr_h\))B
360 5190(gdevpdf.$\(OBJ\): gdevpdf.c $\(math__h\) $\(string__h\) $\(time__h\) $\(gp_h\) \\)B
528 5030($\(gdevpdfx_h\) $\(gscdefs_h\) $\(gserrors_h\) \\)B
528 4870($\(gx_h\) $\(gxdevice_h\) $\(gxfixed_h\) $\(gxistate_h\) $\(gxpaint_h\) \\)B
528 4710($\(gzcpath_h\) $\(gzpath_h\) $\(scfx_h\) $\(strimpl_h\))B
360 4390(gdevpdfi.$\(OBJ\): gdevpdfi.c $\(memory__h\) $\(gx_h\) \\)B
8088 14470($\(gdevpdfx_h\) $\(gserrors_h\) $\(gsflip_h\) $\(gxcspace_h\) $\(gxistate_h\) \\)B
8088 14310($\(sa85x_h\) $\(scfx_h\) $\(srlx_h\) $\(strimpl_h\))B
7920 13990(gdevpdfm.$\(OBJ\): gdevpdfm.c $\(memory__h\) $\(string__h\) $\(gx_h\) \\)B
8088 13830($\(gdevpdfx_h\) $\(gserrors_h\) $\(gsutil_h\) $\(scanchar_h\))B
7920 13510(gdevpdfp.$\(OBJ\): gdevpdfp.c $\(gx_h\)\\)B
8004 13350($\(gdevpdfx_h\) $\(gserrors_h\))B
7920 13030(gdevpdft.$\(OBJ\): gdevpdft.c $\(string__h\) $\(gx_h\)\\)B
8004 12870($\(gdevpdfx_h\) $\(gserrors_h\) $\(gsutil_h\)\\)B
8004 12710($\(sstring_h\) $\(strimpl_h\))B
7920 12390(# High-level PCL XL writer)B
7920 12070(pxl_=gdevpx.$\(OBJ\))B
7920 11910(pxlmono.dev: $\(pxl_\) $\(GDEV\) vector.dev)B
8592 11750($\(SETDEV\) pxlmono $\(pxl_\))B
8592 11590($\(ADDMOD\) pxlmono -include vector)B
7920 11270(pxlcolor.dev: $\(pxl_\) $\(GDEV\) vector.dev)B
8592 11110($\(SETDEV\) pxlcolor $\(pxl_\))B
8592 10950($\(ADDMOD\) pxlcolor -include vector)B
7920 10630(gdevpx.$\(OBJ\): gdevpx.c $\(math__h\) $\(string__h\)\\)B
8004 10470($\(gx_h\) $\(gsccolor_h\) $\(gsdcolor_h\) $\(gserrors_h\)\\)B
8004 10310($\(gxcspace_h\) $\(gxdevice_h\) $\(gxpath_h\)\\)B
8004 10150($\(gdevpxat_h\) $\(gdevpxen_h\) $\(gdevpxop_h\) $\(gdevvec_h\)\\)B
8004 9990($\(srlx_h\) $\(strimpl_h\))B
7920 9670(###### --------------------- Raster file formats --------------------- ######)B
7920 9350(### --------------------- The "plain bits" devices ---------------------- ###)B
7920 9030(bit_=gdevbit.$\(OBJ\))B
7920 8710(bit.dev: $\(bit_\) page.dev)B
8592 8550($\(SETPDEV\) bit $\(bit_\))B
7920 8230(bitrgb.dev: $\(bit_\) page.dev)B
8592 8070($\(SETPDEV\) bitrgb $\(bit_\))B
7920 7750(bitcmyk.dev: $\(bit_\) page.dev)B
8592 7590($\(SETPDEV\) bitcmyk $\(bit_\))B
7920 7270(gdevbit.$\(OBJ\): gdevbit.c $\(PDEVH\) $\(gsparam_h\) $\(gxlum_h\))B
7920 6950(### ------------------------- .BMP file formats ------------------------- ###)B
7920 6630(bmp_=gdevbmp.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 6310(gdevbmp.$\(OBJ\): gdevbmp.c $\(PDEVH\) $\(gdevpccm_h\))B
7920 5990(bmpmono.dev: $\(bmp_\) page.dev)B
8592 5830($\(SETPDEV\) bmpmono $\(bmp_\))B
7920 5510(bmp16.dev: $\(bmp_\) page.dev)B
8592 5350($\(SETPDEV\) bmp16 $\(bmp_\))B
7920 5030(bmp256.dev: $\(bmp_\) page.dev)B
8592 4870($\(SETPDEV\) bmp256 $\(bmp_\))B
7920 4550(bmp16m.dev: $\(bmp_\) page.dev)B
8592 4390($\(SETPDEV\) bmp16m $\(bmp_\))B
EndPage
%%Page: ? 40
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](11)Gaudy
0 F
360 14310(### -------------------------- CGM file format ------------------------- ###)B
360 14150(### This driver is under development.  Use at your own risk.             ###)B
360 13990(### The output is very low-level, consisting only of rectangles and      ###)B
360 13830(### cell arrays.                                                         ###)B
360 13510(cgm_=gdevcgm.$\(OBJ\) gdevcgml.$\(OBJ\))B
360 13190(gdevcgml_h=gdevcgml.h)B
360 13030(gdevcgmx_h=gdevcgmx.h $\(gdevcgml_h\))B
360 12710(gdevcgm.$\(OBJ\): gdevcgm.c $\(GDEV\) $\(memory__h\)\\)B
444 12550($\(gsparam_h\) $\(gdevpccm_h\) $\(gdevcgml_h\))B
360 12230(gdevcgml.$\(OBJ\): gdevcgml.c $\(memory__h\) $\(stdio__h\)\\)B
444 12070($\(gdevcgmx_h\))B
360 11750(cgmmono.dev: $\(cgm_\))B
1032 11590($\(SETDEV\) cgmmono $\(cgm_\))B
360 11270(cgm8.dev: $\(cgm_\))B
1032 11110($\(SETDEV\) cgm8 $\(cgm_\))B
360 10790(cgm24.dev: $\(cgm_\))B
1032 10630($\(SETDEV\) cgm24 $\(cgm_\))B
360 10310(### -------------------- The CIF file format for VLSI ------------------ ###)B
360 10150(### Note: this driver was contributed by a user: please contact          ###)B
360 9990(###       Frederic Petrot \(petrot@masi.ibp.fr\) if you have questions.    ###)B
360 9670(cif_=gdevcif.$\(OBJ\))B
360 9510(cif.dev: $\(cif_\) page.dev)B
1032 9350($\(SETPDEV\) cif $\(cif_\))B
360 9030(gdevcif.$\(OBJ\): gdevcif.c $\(PDEVH\))B
360 8710(### ------------------------- JPEG file format ------------------------- ###)B
360 8390(jpeg_=gdevjpeg.$\(OBJ\))B
360 8070(# RGB output)B
360 7910(jpeg.dev: $\(jpeg_\) sdcte.dev page.dev)B
1032 7750($\(SETPDEV\) jpeg $\(jpeg_\))B
1032 7590($\(ADDMOD\) jpeg -include sdcte)B
360 7270(# Gray output)B
360 7110(jpeggray.dev: $\(jpeg_\) sdcte.dev page.dev)B
1032 6950($\(SETPDEV\) jpeggray $\(jpeg_\))B
1032 6790($\(ADDMOD\) jpeggray -include sdcte)B
360 6470(gdevjpeg.$\(OBJ\): gdevjpeg.c $\(stdio__h\) $\(PDEVH\)\\)B
444 6310($\(sdct_h\) $\(sjpeg_h\) $\(stream_h\) $\(strimpl_h\) jpeglib.h)B
360 5990(### ------------------------- MIFF file format ------------------------- ###)B
360 5830(### Right now we support only 24-bit direct color, but we might add more ###)B
360 5670(### formats in the future.                                               ###)B
360 5350(miff_=gdevmiff.$\(OBJ\))B
360 5030(miff24.dev: $\(miff_\) page.dev)B
1032 4870($\(SETPDEV\) miff24 $\(miff_\))B
360 4550(gdevmiff.$\(OBJ\): gdevmiff.c $\(PDEVH\))B
7920 14470(### --------------------------- MGR devices ---------------------------- ###)B
7920 14310(### Note: these drivers were contributed by a user: please contact       ###)B
7920 14150(###       Carsten Emde \(carsten@ce.pr.net.ch\) if you have questions.     ###)B
7920 13830(MGR=gdevmgr.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 13510(gdevmgr.$\(OBJ\): gdevmgr.c $\(PDEVH\) $\(gdevpccm_h\) gdevmgr.h)B
7920 13190(mgrmono.dev: $\(MGR\) page.dev)B
8592 13030($\(SETPDEV\) mgrmono $\(MGR\))B
7920 12710(mgrgray2.dev: $\(MGR\) page.dev)B
8592 12550($\(SETPDEV\) mgrgray2 $\(MGR\))B
7920 12230(mgrgray4.dev: $\(MGR\) page.dev)B
8592 12070($\(SETPDEV\) mgrgray4 $\(MGR\))B
7920 11750(mgrgray8.dev: $\(MGR\) page.dev)B
8592 11590($\(SETPDEV\) mgrgray8 $\(MGR\))B
7920 11270(mgr4.dev: $\(MGR\) page.dev)B
8592 11110($\(SETPDEV\) mgr4 $\(MGR\))B
7920 10790(mgr8.dev: $\(MGR\) page.dev)B
8592 10630($\(SETPDEV\) mgr8 $\(MGR\))B
7920 10310(### ------------------------- PCX file formats ------------------------- ###)B
7920 9990(pcx_=gdevpcx.$\(OBJ\) gdevpccm.$\(OBJ\))B
7920 9670(gdevpcx.$\(OBJ\): gdevpcx.c $\(PDEVH\) $\(gdevpccm_h\) $\(gxlum_h\))B
7920 9350(pcxmono.dev: $\(pcx_\) page.dev)B
8592 9190($\(SETPDEV\) pcxmono $\(pcx_\))B
7920 8870(pcxgray.dev: $\(pcx_\) page.dev)B
8592 8710($\(SETPDEV\) pcxgray $\(pcx_\))B
7920 8390(pcx16.dev: $\(pcx_\) page.dev)B
8592 8230($\(SETPDEV\) pcx16 $\(pcx_\))B
7920 7910(pcx256.dev: $\(pcx_\) page.dev)B
8592 7750($\(SETPDEV\) pcx256 $\(pcx_\))B
7920 7430(pcx24b.dev: $\(pcx_\) page.dev)B
8592 7270($\(SETPDEV\) pcx24b $\(pcx_\))B
7920 6950(pcxcmyk.dev: $\(pcx_\) page.dev)B
8592 6790($\(SETPDEV\) pcxcmyk $\(pcx_\))B
7920 6470(# The 2-up PCX device is here only as an example, and for testing.)B
7920 6310(pcx2up.dev: $\(LIB_MAK\) $\(ECHOGS_XE\) gdevp2up.$\(OBJ\) page.dev pcx256.dev)B
8592 6150($\(SETPDEV\) pcx2up gdevp2up.$\(OBJ\))B
8592 5990($\(ADDMOD\) pcx2up -include pcx256)B
7920 5670(gdevp2up.$\(OBJ\): gdevp2up.c $\(AK\)\\)B
8004 5510($\(gdevpccm_h\) $\(gdevprn_h\) $\(gxclpage_h\))B
7920 5190(### ------------------- Portable Bitmap file formats ------------------- ###)B
7920 5030(### For more information, see the pbm\(5\), pgm\(5\), and ppm\(5\) man pages.  ###)B
7920 4710(pxm_=gdevpbm.$\(OBJ\))B
7920 4390(gdevpbm.$\(OBJ\): gdevpbm.c $\(PDEVH\) $\(gscdefs_h\) $\(gxlum_h\))B
EndPage
%%Page: ? 41
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](12)Gaudy
0 F
360 14310(### Portable Bitmap \(PBM, plain or raw format, magic numbers "P1" or "P4"\))B
360 13990(pbm.dev: $\(pxm_\) page.dev)B
1032 13830($\(SETPDEV\) pbm $\(pxm_\))B
360 13510(pbmraw.dev: $\(pxm_\) page.dev)B
1032 13350($\(SETPDEV\) pbmraw $\(pxm_\))B
360 13030(### Portable Graymap \(PGM, plain or raw format, magic numbers "P2" or "P5"\))B
360 12710(pgm.dev: $\(pxm_\) page.dev)B
1032 12550($\(SETPDEV\) pgm $\(pxm_\))B
360 12230(pgmraw.dev: $\(pxm_\) page.dev)B
1032 12070($\(SETPDEV\) pgmraw $\(pxm_\))B
360 11750(# PGM with automatic optimization to PBM if this is possible.)B
360 11430(pgnm.dev: $\(pxm_\) page.dev)B
1032 11270($\(SETPDEV\) pgnm $\(pxm_\))B
360 10950(pgnmraw.dev: $\(pxm_\) page.dev)B
1032 10790($\(SETPDEV\) pgnmraw $\(pxm_\))B
360 10470(### Portable Pixmap \(PPM, plain or raw format, magic numbers "P3" or "P6"\))B
360 10150(ppm.dev: $\(pxm_\) page.dev)B
1032 9990($\(SETPDEV\) ppm $\(pxm_\))B
360 9670(ppmraw.dev: $\(pxm_\) page.dev)B
1032 9510($\(SETPDEV\) ppmraw $\(pxm_\))B
360 9190(# PPM with automatic optimization to PGM or PBM if possible.)B
360 8870(pnm.dev: $\(pxm_\) page.dev)B
1032 8710($\(SETPDEV\) pnm $\(pxm_\))B
360 8390(pnmraw.dev: $\(pxm_\) page.dev)B
1032 8230($\(SETPDEV\) pnmraw $\(pxm_\))B
360 7910(### Portable inKmap \(CMYK internally, converted to PPM=RGB at output time\))B
360 7590(pkm.dev: $\(pxm_\) page.dev)B
1032 7430($\(SETPDEV\) pkm $\(pxm_\))B
360 7110(pkmraw.dev: $\(pxm_\) page.dev)B
1032 6950($\(SETPDEV\) pkmraw $\(pxm_\))B
360 6630(### --------------- Portable Network Graphics file format --------------- ###)B
360 6470(### Requires libpng 0.81 and zlib 0.95 \(or more recent versions\).         ###)B
360 6310(### See libpng.mak and zlib.mak for more details.                         ###)B
360 5990(png_=gdevpng.$\(OBJ\) gdevpccm.$\(OBJ\))B
360 5670(gdevpng.$\(OBJ\): gdevpng.c $\(gdevprn_h\) $\(gdevpccm_h\) $\(gscdefs_h\) $\(PSRC\)png.h)B
1032 5510($\(CCCP\) gdevpng.c)B
360 5190(pngmono.dev: libpng.dev $\(png_\) page.dev)B
1032 5030($\(SETPDEV\) pngmono  $\(png_\))B
1032 4870($\(ADDMOD\) pngmono  -include libpng)B
360 4550(pnggray.dev: libpng.dev $\(png_\) page.dev)B
1032 4390($\(SETPDEV\) pnggray  $\(png_\))B
8592 14470($\(ADDMOD\) pnggray  -include libpng)B
7920 14150(png16.dev: libpng.dev $\(png_\) page.dev)B
8592 13990($\(SETPDEV\) png16  $\(png_\))B
8592 13830($\(ADDMOD\) png16  -include libpng)B
7920 13510(png256.dev: libpng.dev $\(png_\) page.dev)B
8592 13350($\(SETPDEV\) png256  $\(png_\))B
8592 13190($\(ADDMOD\) png256  -include libpng)B
7920 12870(png16m.dev: libpng.dev $\(png_\) page.dev)B
8592 12710($\(SETPDEV\) png16m  $\(png_\))B
8592 12550($\(ADDMOD\) png16m  -include libpng)B
7920 12230(### ---------------------- PostScript image format ---------------------- ###)B
7920 12070(### These devices make it possible to print Level 2 files on a Level 1    ###)B
7920 11910(###   printer, by converting them to a bitmap in PostScript format.       ###)B
7920 11590(ps_=gdevpsim.$\(OBJ\))B
7920 11270(gdevpsim.$\(OBJ\): gdevpsim.c $\(PDEVH\))B
7920 10950(psmono.dev: $\(ps_\) page.dev)B
8592 10790($\(SETPDEV\) psmono $\(ps_\))B
7920 10470(psgray.dev: $\(ps_\) page.dev)B
8592 10310($\(SETPDEV\) psgray $\(ps_\))B
7920 9990(# Someday there will be RGB and CMYK variants....)B
7920 9670(### -------------------------- SGI RGB pixmaps -------------------------- ###)B
7920 9350(sgirgb_=gdevsgi.$\(OBJ\))B
7920 9030(gdevsgi.$\(OBJ\): gdevsgi.c $\(PDEVH\) gdevsgi.h)B
7920 8710(sgirgb.dev: $\(sgirgb_\) page.dev)B
8592 8550($\(SETPDEV\) sgirgb $\(sgirgb_\))B
7920 8230(### -------------------- Plain or TIFF fax encoding --------------------- ###)B
7920 8070(###    Use -sDEVICE=tiffg3 or tiffg4 and)B
2856(###)X
7920 7910(###)B
588(-r204x98 for low resolution output, or)X
2184(###)X
7920 7750(###)B
588(-r204x196 for high resolution output)X
2352(###)X
7920 7590(###    These drivers recognize 3 page sizes: letter, A4, and B4.)B
840(###)X
7920 7270(gdevtifs_h=gdevtifs.h)B
7920 6950(tfax_=gdevtfax.$\(OBJ\))B
7920 6790(tfax.dev: $\(tfax_\) cfe.dev lzwe.dev rle.dev tiffs.dev)B
8592 6630($\(SETMOD\) tfax $\(tfax_\))B
8592 6470($\(ADDMOD\) tfax -include cfe lzwe rle tiffs)B
7920 6150(gdevtfax.$\(OBJ\): gdevtfax.c $\(PDEVH\)\\)B
8004 5990($\(gdevtifs_h\) $\(scfx_h\) $\(slzwx_h\) $\(srlx_h\) $\(strimpl_h\))B
7920 5670(### Plain G3/G4 fax with no header)B
7920 5350(faxg3.dev: tfax.dev)B
8592 5190($\(SETDEV\) faxg3 -include tfax)B
7920 4870(faxg32d.dev: tfax.dev)B
8592 4710($\(SETDEV\) faxg32d -include tfax)B
7920 4390(faxg4.dev: tfax.dev)B
EndPage
%%Page: ? 42
StartPage
Landscape
()(devs.mak)[(97/06/05)(23:49:11)](13)Gaudy
0 F
1032 14470($\(SETDEV\) faxg4 -include tfax)B
360 14150(### ---------------------------- TIFF formats --------------------------- ###)B
360 13830(tiffs_=gdevtifs.$\(OBJ\))B
360 13670(tiffs.dev: $\(tiffs_\) page.dev)B
1032 13510($\(SETMOD\) tiffs $\(tiffs_\))B
1032 13350($\(ADDMOD\) tiffs -include page)B
360 13030(gdevtifs.$\(OBJ\): gdevtifs.c $\(PDEVH\) $\(stdio__h\) $\(time__h\) \\)B
444 12870($\(gdevtifs_h\) $\(gscdefs_h\) $\(gstypes_h\))B
360 12550(# Black & white, G3/G4 fax)B
360 12230(tiffcrle.dev: tfax.dev)B
1032 12070($\(SETDEV\) tiffcrle -include tfax)B
360 11750(tiffg3.dev: tfax.dev)B
1032 11590($\(SETDEV\) tiffg3 -include tfax)B
360 11270(tiffg32d.dev: tfax.dev)B
1032 11110($\(SETDEV\) tiffg32d -include tfax)B
360 10790(tiffg4.dev: tfax.dev)B
1032 10630($\(SETDEV\) tiffg4 -include tfax)B
360 10310(# Black & white, LZW compression)B
360 9990(tifflzw.dev: tfax.dev)B
1032 9830($\(SETDEV\) tifflzw -include tfax)B
360 9510(# Black & white, PackBits compression)B
360 9190(tiffpack.dev: tfax.dev)B
1032 9030($\(SETDEV\) tiffpack -include tfax)B
360 8710(# RGB, no compression)B
360 8390(tiffrgb_=gdevtfnx.$\(OBJ\))B
360 8070(tiff12nc.dev: $\(tiffrgb_\) tiffs.dev)B
1032 7910($\(SETPDEV\) tiff12nc $\(tiffrgb_\))B
1032 7750($\(ADDMOD\) tiff12nc -include tiffs)B
360 7430(tiff24nc.dev: $\(tiffrgb_\) tiffs.dev)B
1032 7270($\(SETPDEV\) tiff24nc $\(tiffrgb_\))B
1032 7110($\(ADDMOD\) tiff24nc -include tiffs)B
360 6790(gdevtfnx.$\(OBJ\): gdevtfnx.c $\(PDEVH\) $\(gdevtifs_h\))B
EndPage
%%Page: ? 43
StartPage
Landscape
()(version.mak)[(97/06/05)(23:46:06)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# Makefile fragment containing the current revision identification.)B
360 11430(# Define the name of this makefile.)B
360 11270(VERSION_MAK=version.mak)B
360 10950(# Major and minor version numbers.)B
360 10790(# MINOR0 is different from MINOR only if MINOR is a single digit.)B
360 10630(GS_VERSION_MAJOR=5)B
360 10470(GS_VERSION_MINOR=0)B
360 10310(GS_VERSION_MINOR0=00)B
360 10150(# Revision date: year x 10000 + month x 100 + day.)B
360 9990(GS_REVISIONDATE=19970606)B
360 9670(# Derived values)B
360 9510(GS_VERSION=$\(GS_VERSION_MAJOR\)$\(GS_VERSION_MINOR0\))B
360 9350(GS_DOT_VERSION=$\(GS_VERSION_MAJOR\).$\(GS_VERSION_MINOR\))B
360 9190(GS_REVISION=$\(GS_VERSION\))B
EndPage
%%Page: ? 44
StartPage
Landscape
()(gcc-head.mak)[(97/06/05)(23:49:48)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1989, 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# makefile for Unix/gcc/X11 configuration.)B
360 11590(# Note: this makefile assumes you are using gcc in ANSI mode.)B
360 11270(#****************************************************************#)B
360 11110(#   If you want to change options, DO NOT edit unix-gcc.mak      #)B
360 10950(#   or makefile.  Edit gcc-head.mak and run the tar_cat script.  #)B
360 10790(#****************************************************************#)B
360 10470(# ------------------------------- Options ------------------------------- #)B
360 10150(####### The following are the only parts of the file you should need to edit.)B
360 9830(# ------ Generic options ------ #)B
360 9510(# Define the installation commands and target directories for)B
360 9350(# executables and files.  The commands are only relevant to `make install';)B
360 9190(# the directories also define the default search path for the)B
360 9030(# initialization files \(gs_*.ps\) and the fonts.)B
360 8710(INSTALL = install -c)B
360 8550(INSTALL_PROGRAM = $\(INSTALL\) -m 755)B
360 8390(INSTALL_DATA = $\(INSTALL\) -m 644)B
360 8070(prefix = /usr/local)B
360 7910(exec_prefix = $\(prefix\))B
360 7750(bindir = $\(exec_prefix\)/bin)B
360 7590(scriptdir = $\(bindir\))B
360 7430(mandir = $\(prefix\)/man)B
360 7270(man1ext = 1)B
360 7110(man1dir = $\(mandir\)/man$\(man1ext\))B
360 6950(datadir = $\(prefix\)/share)B
360 6790(gsdir = $\(datadir\)/ghostscript)B
360 6630(gsdatadir = $\(gsdir\)/$\(GS_DOT_VERSION\))B
360 6310(docdir=$\(gsdatadir\)/doc)B
360 6150(exdir=$\(gsdatadir\)/examples)B
360 5990(GS_DOCDIR=$\(docdir\))B
360 5670(# Define the default directory/ies for the runtime)B
360 5510(# initialization and font files.  Separate multiple directories with a :.)B
360 5190(GS_LIB_DEFAULT=$\(gsdatadir\):$\(gsdir\)/fonts)B
360 4870(# Define whether or not searching for initialization files should always)B
360 4710(# look in the current directory first.  This leads to well-known security)B
360 4550(# and confusion problems, but users insist on it.)B
7920 14470(SEARCH_HERE_FIRST=1)B
7920 14150(# Define the name of the interpreter initialization file.)B
7920 13990(# \(There is no reason to change this.\))B
7920 13670(GS_INIT=gs_init.ps)B
7920 13350(# Choose generic configuration options.)B
7920 13030(# -DDEBUG)B
7920 12870(#)B
588(includes debugging features \(-Z switch\) in the code.)X
7920 12710(#)B
756(Code runs substantially slower even if no debugging switches)X
7920 12550(#)B
756(are set.)X
7920 12390(# -DNOPRIVATE)B
7920 12230(#)B
588(makes private \(static\) procedures and variables public,)X
7920 12070(#)B
756(so they are visible to the debugger and profiler.)X
7920 11910(#)B
756(No execution time or space penalty.)X
7920 11590(#GENOPT=-DDEBUG)B
7920 11430(GENOPT=)B
7920 11110(# Define the name of the executable file.)B
7920 10790(GS=gs)B
7920 10470(# Define the directory where the IJG JPEG library sources are stored,)B
7920 10310(# and the major version of the library that is stored there.)B
7920 10150(# You may need to change this if the IJG library version changes.)B
7920 9990(# See jpeg.mak for more information.)B
7920 9670(JSRCDIR=jpeg-6a)B
7920 9510(JVERSION=6)B
7920 9190(# Define the directory where the PNG library sources are stored,)B
7920 9030(# and the version of the library that is stored there.)B
7920 8870(# You may need to change this if the libpng version changes.)B
7920 8710(# See libpng.mak for more information.)B
7920 8390(PSRCDIR=libpng)B
7920 8230(PVERSION=89)B
7920 7910(# Choose whether to use a shared version of the PNG library, and if so,)B
7920 7750(# what its name is.)B
7920 7590(# See gs.mak and make.txt for more information.)B
7920 7270(SHARE_LIBPNG=0)B
7920 7110(LIBPNG_NAME=png)B
7920 6790(# Define the directory where the zlib sources are stored.)B
7920 6630(# See zlib.mak for more information.)B
7920 6310(ZSRCDIR=zlib)B
7920 5990(# Choose whether to use a shared version of the zlib library, and if so,)B
7920 5830(# what its name is \(usually libz, but sometimes libgz\).)B
7920 5670(# See gs.mak and make.txt for more information.)B
7920 5350(SHARE_ZLIB=0)B
7920 5190(#ZLIB_NAME=gz)B
7920 5030(ZLIB_NAME=z)B
7920 4710(# Define how to build the library archives.  \(These are not used in any)B
7920 4550(# standard configuration.\))B
EndPage
%%Page: ? 45
StartPage
Landscape
()(gcc-head.mak)[(97/06/05)(23:49:48)](2)Gaudy
0 F
360 14470(AR=ar)B
360 14310(ARFLAGS=qc)B
360 14150(RANLIB=ranlib)B
360 13830(# Define the configuration ID.  Read gs.mak carefully before changing this.)B
360 13510(CONFIG=)B
360 13190(# ------ Platform-specific options ------ #)B
360 12870(# Define the name of the C compiler.)B
360 12550(CC=gcc)B
360 12230(# Define the name of the linker for the final link step.)B
360 12070(# Normally this is the same as the C compiler.)B
360 11750(CCLD=$\(CC\))B
360 11430(# Define the default gcc flags.)B
360 11270(# To work around the gcc 2.7.x optimizer bug,)B
360 11110(# add -Dconst= and remove -Wcast-qual and -Wwrite-strings.)B
360 10790(#GCFLAGS=-Wall -Wcast-qual -Wpointer-arith -Wstrict-prototypes -Wwrite-strings)B
360 10630(GCFLAGS=-Dconst= -Wall -Wpointer-arith -Wstrict-prototypes)B
360 10310(# Define the other compilation flags.  Add at most one of the following:)B
360 10150(#)B
588(-DBSD4_2 for 4.2bsd systems.)X
360 9990(#)B
588(-DSYSV for System V or DG/UX.)X
360 9830(# )B
504(-DSYSV -D__SVR3 for SCO ODT, ISC Unix 2.2 or before,)X
360 9670(#)B
840(or any System III Unix, or System V release 3-or-older Unix.)X
360 9510(#)B
588(-DSVR4 -DSVR4_0 \(not -DSYSV\) for System V release 4.0.)X
360 9350(#)B
588(-DSVR4 \(not -DSYSV\) for System V release 4.2 \(or later\) and Solaris 2.)X
360 9190(# XCFLAGS can be set from the command line.)B
360 9030(# We don't include -ansi, because this gets in the way of the platform-)B
360 8870(#   specific stuff that <math.h> typically needs; nevertheless, we expect)B
360 8710(#   gcc to accept ANSI-style function prototypes and function definitions.)B
360 8550(XCFLAGS=)B
360 8230(CFLAGS=-O $\(GCFLAGS\) $\(XCFLAGS\))B
360 7910(# Define platform flags for ld.)B
360 7750(# SunOS 4.n may need -Bstatic.)B
360 7590(# XLDFLAGS can be set from the command line.)B
360 7430(XLDFLAGS=)B
360 7110(LDFLAGS=$\(XLDFLAGS\))B
360 6790(# Define any extra libraries to link into the executable.)B
360 6630(# ISC Unix 2.2 wants -linet.)B
360 6470(# SCO Unix needs -lsocket if you aren't including the X11 driver.)B
360 6310(# SVR4 may need -lnsl.)B
360 6150(# \(Libraries required by individual drivers are handled automatically.\))B
360 5830(EXTRALIBS=)B
360 5510(# Define the include switch\(es\) for the X11 header files.)B
360 5350(# This can be null if handled in some other way \(e.g., the files are)B
360 5190(# in /usr/include, or the directory is supplied by an environment variable\);)B
360 5030(# in particular, SCO Xenix, Unix, and ODT just want)B
360 4870(#XINCLUDE=)B
360 4710(# Note that x_.h expects to find the header files in $\(XINCLUDE\)/X11,)B
360 4550(# not in $\(XINCLUDE\).)B
7920 14470(XINCLUDE=-I/usr/local/X/include)B
7920 14150(# Define the directory/ies and library names for the X11 library files.)B
7920 13990(# XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH)B
7920 13830(# \(dynamic libraries on SVR4\) and should not include -L.)B
7920 13670(# Both can be null if these files are in the default linker search path;)B
7920 13510(# in particular, SCO Xenix, Unix, and ODT just want)B
7920 13350(#XLIBDIRS=)B
7920 13190(# X11R6 \(on any platform\) may need)B
7920 13030(#XLIBS=Xt SM ICE Xext X11)B
7920 12710(#XLIBDIRS=-L/usr/local/X/lib)B
7920 12550(XLIBDIRS=-L/usr/X11/lib)B
7920 12390(XLIBDIR=)B
7920 12230(XLIBS=Xt Xext X11)B
7920 11910(# Define whether this platform has floating point hardware:)B
7920 11750(#)B
588(FPU_TYPE=2 means floating point is faster than fixed point.)X
7920 11590(# \(This is the case on some RISCs with multiple instruction dispatch.\))B
7920 11430(#)B
588(FPU_TYPE=1 means floating point is at worst only slightly slower)X
7920 11270(# than fixed point.)B
7920 11110(#)B
588(FPU_TYPE=0 means that floating point may be considerably slower.)X
7920 10950(#)B
588(FPU_TYPE=-1 means that floating point is always much slower than)X
7920 10790(# fixed point.)B
7920 10470(FPU_TYPE=1)B
7920 10150(# ------ Devices and features ------ #)B
7920 9830(# Choose the language feature\(s\) to include.  See gs.mak for details.)B
7920 9510(FEATURE_DEVS=level2.dev pdf.dev pipe.dev)B
7920 9190(# Choose whether to compile the .ps initialization files into the executable.)B
7920 9030(# See gs.mak for details.)B
7920 8710(COMPILE_INITS=0)B
7920 8390(# Choose whether to store band lists on files or in memory.)B
7920 8230(# The choices are 'file' or 'memory'.)B
7920 7910(BAND_LIST_STORAGE=file)B
7920 7590(# Choose which compression method to use when storing band lists in memory.)B
7920 7430(# The choices are 'lzw' or 'zlib'.  lzw is not recommended, because the)B
7920 7270(# LZW-compatible code in Ghostscript doesn't actually compress its input.)B
7920 6950(BAND_LIST_COMPRESSOR=zlib)B
7920 6630(# Choose the implementation of file I/O: 'stdio', 'fd', or 'both'.)B
7920 6470(# See gs.mak and sfilefd.c for more details.)B
7920 6150(FILE_IMPLEMENTATION=stdio)B
7920 5830(# Choose the device\(s\) to include.  See devs.mak for details.)B
7920 5510(DEVICE_DEVS=x11.dev x11alpha.dev x11cmyk.dev x11gray2.dev x11mono.dev)B
7920 5350(DEVICE_DEVS1=)B
7920 5190(DEVICE_DEVS2=)B
7920 5030(DEVICE_DEVS3=deskjet.dev djet500.dev laserjet.dev ljetplus.dev ljet2p.dev ljet3.dev ljet4)B
7920 4870(.dev)B
7920 4710(DEVICE_DEVS4=cdeskjet.dev cdjcolor.dev cdjmono.dev cdj550.dev pj.dev pjxl.dev pjxl300.dev)B
7920 4550(DEVICE_DEVS5=)B
7920 4390(DEVICE_DEVS6=bj10e.dev bj200.dev bjc600.dev bjc800.dev)B
EndPage
%%Page: ? 46
StartPage
Landscape
()(gcc-head.mak)[(97/06/05)(23:49:48)](3)Gaudy
0 F
360 14470(DEVICE_DEVS7=faxg3.dev faxg32d.dev faxg4.dev)B
360 14310(DEVICE_DEVS8=pcxmono.dev pcxgray.dev pcx16.dev pcx256.dev pcx24b.dev pcxcmyk.dev)B
360 14150(DEVICE_DEVS9=pbm.dev pbmraw.dev pgm.dev pgmraw.dev pgnm.dev pgnmraw.dev pnm.dev pnmraw.d)B
360 13990(ev ppm.dev ppmraw.dev)B
360 13830(DEVICE_DEVS10=tiffcrle.dev tiffg3.dev tiffg32d.dev tiffg4.dev tifflzw.dev tiffpack.dev)B
360 13670(DEVICE_DEVS11=tiff12nc.dev tiff24nc.dev)B
360 13510(DEVICE_DEVS12=psmono.dev psgray.dev bit.dev bitrgb.dev bitcmyk.dev)B
360 13350(DEVICE_DEVS13=pngmono.dev pnggray.dev png16.dev png256.dev png16m.dev)B
360 13190(DEVICE_DEVS14=jpeg.dev jpeggray.dev)B
360 13030(DEVICE_DEVS15=pdfwrite.dev pswrite.dev epswrite.dev pxlmono.dev pxlcolor.dev)B
360 12710(# ---------------------------- End of options --------------------------- #)B
360 12390(# Define the name of the partial makefile that specifies options --)B
360 12230(# used in dependencies.)B
360 11910(MAKEFILE=gcc-head.mak)B
360 11590(# Define the ANSI-to-K&R dependency.  \(gcc accepts ANSI syntax.\))B
360 11270(AK=)B
360 10950(# Define the compilation rules and flags.)B
360 10630(CCC=$\(CC\) $\(CCFLAGS\) -c)B
360 10470(CCAUX=$\(CC\))B
360 10310(#We can't use -fomit-frame-pointer with -pg....)B
360 10150(#CCLEAF=$\(CCC\))B
360 9990(CCLEAF=$\(CCC\) -fomit-frame-pointer)B
360 9670(# --------------------------- Generic makefile ---------------------------- #)B
360 9350(# The remainder of the makefile \(unixhead.mak, gs.mak, devs.mak, unixtail.mak\))B
360 9190(# is generic.  tar_cat concatenates all these together.)B
EndPage
%%Page: ? 47
StartPage
Landscape
()(unixhead.mak)[(96/05/29)(06:54:57)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1990, 1993, 1996 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# Partial makefile common to all Unix configurations.)B
360 11430(# This part of the makefile gets inserted after the compiler-specific part)B
360 11270(# \(xxx-head.mak\) and before gs.mak and devs.mak.)B
360 10950(# ----------------------------- Generic stuff ----------------------------- #)B
360 10630(# Define the platform name.  For a "stock" System V platform,)B
360 10470(# use sysv_ instead of unix_.)B
360 10150(PLATFORM=unix_)B
360 9830(# Define the syntax for command, object, and executable files.)B
360 9510(CMD=)B
360 9350(O=-o ./)B
360 9190(OBJ=o)B
360 9030(XE=)B
360 8870(XEAUX=)B
360 8550(# Define the current directory prefix and command invocations.)B
360 8230(CAT=cat)B
360 8070(D=/)B
360 7910(EXPP=)B
360 7750(EXP=./)B
360 7590(SHELL=/bin/sh)B
360 7430(SH=$\(SHELL\))B
360 7270(SHP=$\(SH\) $\(EXP\))B
360 6950(# Define generic commands.)B
360 6630(CP_=cp)B
360 6470(RM_=rm -f)B
360 6310(RMN_=rm -f)B
360 5990(# Define the arguments for genconf.)B
360 5670(CONFILES=-p "%s&s&&" -pl "&-l%s&s&&" -pL "&-L%s&s&&" -ol $\(ld_tr\))B
360 5350(# Define the compilation rules and flags.)B
360 5030(CCFLAGS=$\(GENOPT\) $\(CFLAGS\))B
360 4710(.c.o: $\(AK\))B
1032 4550($\(CCC\) $*.c)B
7920 14470(CCCF=$\(CCC\))B
7920 14310(CCD=$\(CCC\))B
7920 14150(CCINT=$\(CCC\))B
7920 13830(BEGINFILES=)B
7920 13670(CCBEGIN=$\(CCC\) *.c)B
7920 13350(# Patch a couple of PC-specific things that aren't relevant to Unix builds,)B
7920 13190(# but that cause `make' to produce warnings.)B
7920 12870(BGIDIR=***UNUSED***)B
7920 12710(PCFBASM=)B
EndPage
%%Page: ? 48
StartPage
Landscape
()(unixtail.mak)[(97/04/13)(22:15:02)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1990, 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# Partial makefile common to all Unix configurations.)B
360 11430(# This is the last part of the makefile for Unix configurations.)B
360 11270(# Since Unix make doesn't have an 'include' facility, we concatenate)B
360 11110(# the various parts of the makefile together by brute force \(in tar_cat\).)B
360 10790(# Define the name of this makefile.)B
360 10630(UNIXTAIL_MAK=unixtail.mak)B
360 10310(# The following prevents GNU make from constructing argument lists that)B
360 10150(# include all environment variables, which can easily be longer than)B
360 9990(# brain-damaged system V allows.)B
360 9670(.NOEXPORT:)B
360 9350(# -------------------------------- Library -------------------------------- #)B
360 9030(## The Unix platforms)B
360 8710(# We have to include a test for the existence of sys/time.h,)B
360 8550(# because some System V platforms don't have it.)B
360 8230(# Define pipes as a separable feature.)B
360 7910(pipe_=gdevpipe.$\(OBJ\))B
360 7750(pipe.dev: $\(UNIXTAIL_MAK\) $\(ECHOGS_XE\) $\(pipe_\))B
1032 7590($\(SETMOD\) pipe $\(pipe_\))B
1032 7430($\(ADDMOD\) pipe -iodev pipe)B
360 7110(gdevpipe.$\(OBJ\): gdevpipe.c $\(AK\) $\(errno__h\) $\(stdio__h\) $\(string__h\) \\)B
528 6950($\(gserror_h\) $\(gsmemory_h\) $\(gstypes_h\) $\(gxiodev_h\) $\(stream_h\))B
360 6630(# Unix platforms other than System V, and also System V Release 4)B
360 6470(# \(SVR4\) platforms.)B
360 6310(unix__=gp_nofb.$\(OBJ\) gp_unix.$\(OBJ\) gp_unifs.$\(OBJ\) gp_unifn.$\(OBJ\))B
360 6150(unix_.dev: $\(unix__\))B
1032 5990($\(SETMOD\) unix_ $\(unix__\))B
360 5670(gp_unix.$\(OBJ\): gp_unix.c $\(AK\) $\(string__h\) $\(gx_h\) $\(gsexit_h\) $\(gp_h\) \\)B
528 5510($\(time__h\))B
360 5190(# System V platforms other than SVR4, which lack some system calls,)B
360 5030(# but have pipes.)B
360 4870(sysv__=gp_nofb.$\(OBJ\) gp_unix.$\(OBJ\) gp_unifs.$\(OBJ\) gp_unifn.$\(OBJ\) gp_sysv.$\(OBJ\))B
360 4710(sysv_.dev: $\(sysv__\))B
1032 4550($\(SETMOD\) sysv_ $\(sysv__\))B
7920 14470(gp_sysv.$\(OBJ\): gp_sysv.c $\(stdio__h\) $\(time__h\) $\(AK\))B
7920 14150(# -------------------------- Auxiliary programs --------------------------- #)B
7920 13830($\(ANSI2KNR_XE\): ansi2knr.c)B
8592 13670($\(CCA2K\) $\(O\)$\(ANSI2KNR_XE\) ansi2knr.c)B
7920 13350($\(ECHOGS_XE\): echogs.c $\(AK\))B
8592 13190($\(CCAUX\) $\(O\)$\(ECHOGS_XE\) echogs.c)B
7920 12870(# On the RS/6000 \(at least\), compiling genarch.c with gcc with -O)B
7920 12710(# produces a buggy executable.)B
7920 12550($\(GENARCH_XE\): genarch.c $\(AK\) $\(stdpre_h\))B
8592 12390($\(CCAUX\) $\(O\)$\(GENARCH_XE\) genarch.c)B
7920 12070($\(GENCONF_XE\): genconf.c $\(AK\) $\(stdpre_h\))B
8592 11910($\(CCAUX\) $\(O\)$\(GENCONF_XE\) genconf.c)B
7920 11590($\(GENINIT_XE\): geninit.c $\(AK\) $\(stdio__h\) $\(string__h\))B
8592 11430($\(CCAUX\) $\(O\)$\(GENINIT_XE\) geninit.c)B
7920 11110(# Query the environment to construct gconfig_.h.)B
7920 10950(# The "else true; is required because Ultrix's implementation of sh -e)B
7920 10790(# terminates execution of a command if any error occurs, even if the command)B
7920 10630(# traps the error with ||.)B
7920 10470(INCLUDE=/usr/include)B
7920 10310(gconfig_.h: $\(UNIXTAIL_MAK\) $\(ECHOGS_XE\))B
8592 10150(./echogs -w gconfig_.h -x 2f2a -s This file was generated automatically. -s -x 2a)B
7920 9990(2f)B
8592 9830(if \( test -f $\(INCLUDE\)/dirent.h \); then ./echogs -a gconfig_.h -x 23 define HAVE)B
7920 9670(_DIRENT_H; else true; fi)B
8592 9510(if \( test -f $\(INCLUDE\)/ndir.h \); then ./echogs -a gconfig_.h -x 23 define HAVE_N)B
7920 9350(DIR_H; else true; fi)B
8592 9190(if \( test -f $\(INCLUDE\)/sys/dir.h \); then ./echogs -a gconfig_.h -x 23 define HAV)B
7920 9030(E_SYS_DIR_H; else true; fi)B
8592 8870(if \( test -f $\(INCLUDE\)/sys/ndir.h \); then ./echogs -a gconfig_.h -x 23 define HA)B
7920 8710(VE_SYS_NDIR_H; else true; fi)B
8592 8550(if \( test -f $\(INCLUDE\)/sys/time.h \); then ./echogs -a gconfig_.h -x 23 define HA)B
7920 8390(VE_SYS_TIME_H; else true; fi)B
8592 8230(if \( test -f $\(INCLUDE\)/sys/times.h \); then ./echogs -a gconfig_.h -x 23 define H)B
7920 8070(AVE_SYS_TIMES_H; else true; fi)B
7920 7750(# ----------------------------- Main program ------------------------------ #)B
7920 7430(### Library files and archive)B
7920 7110(LIB_ARCHIVE_ALL=$\(LIB_ALL\) $\(DEVS_ALL\)\\)B
8004 6950(gsnogc.$\(OBJ\) gconfig.$\(OBJ\) gscdefs.$\(OBJ\))B
7920 6630(# Build an archive for the library only.)B
7920 6470(# This is not used in a standard build.)B
7920 6310(GSLIB_A=$\(GS\)lib.a)B
7920 6150($\(GSLIB_A\): $\(LIB_ARCHIVE_ALL\))B
8592 5990(rm -f $\(GSLIB_A\))B
8592 5830($\(AR\) $\(ARFLAGS\) $\(GSLIB_A\) $\(LIB_ARCHIVE_ALL\))B
8592 5670($\(RANLIB\) $\(GSLIB_A\))B
7920 5350(### Interpreter main program)B
7920 5030(INT_ARCHIVE_ALL=imainarg.$\(OBJ\) imain.$\(OBJ\) $\(INT_ALL\) $\(DEVS_ALL\)\\)B
8004 4870(gconfig.$\(OBJ\) gscdefs.$\(OBJ\))B
7920 4710(XE_ALL=gs.$\(OBJ\) $\(INT_ARCHIVE_ALL\))B
7920 4390(# Build a library archive for the entire interpreter.)B
EndPage
%%Page: ? 49
StartPage
Landscape
()(unixtail.mak)[(97/04/13)(22:15:02)](2)Gaudy
0 F
360 14470(# This is not used in a standard build.)B
360 14310(GS_A=$\(GS\).a)B
360 14150($\(GS_A\): $\(INT_ARCHIVE_ALL\))B
1032 13990(rm -f $\(GS_A\))B
1032 13830($\(AR\) $\(ARFLAGS\) $\(GS_A\) $\(INT_ARCHIVE_ALL\))B
1032 13670($\(RANLIB\) $\(GS_A\))B
360 13350(# Here is the final link step.  The stuff with LD_RUN_PATH is for SVR4)B
360 13190(# systems with dynamic library loading; I believe it's harmless elsewhere.)B
360 13030(# The resetting of the environment variables to empty strings is for SCO Unix,)B
360 12870(# which has limited environment space.)B
360 12710($\(GS_XE\): ld.tr echogs $\(XE_ALL\))B
1032 12550(./echogs -w ldt.tr -n - $\(CCLD\) $\(LDFLAGS\) $\(XLIBDIRS\) -o $\(GS_XE\))B
1032 12390(./echogs -a ldt.tr -n -s gs.$\(OBJ\) -s)B
1032 12230(cat ld.tr >>ldt.tr)B
1032 12070(./echogs -a ldt.tr -s - $\(EXTRALIBS\) -lm)B
1032 11910(LD_RUN_PATH=$\(XLIBDIR\); export LD_RUN_PATH; \\)B
1032 11750(XCFLAGS= XINCLUDE= XLDFLAGS= XLIBDIRS= XLIBS= \\)B
1032 11590(FEATURE_DEVS= DEVICE_DEVS= DEVICE_DEVS1= DEVICE_DEVS2= DEVICE_DEVS3= \\)B
1032 11430(DEVICE_DEVS4= DEVICE_DEVS5= DEVICE_DEVS6= DEVICE_DEVS7= DEVICE_DEVS8= \\)B
1032 11270(DEVICE_DEVS9= DEVICE_DEVS10= DEVICE_DEVS11= DEVICE_DEVS12= \\)B
1032 11110(DEVICE_DEVS13= DEVICE_DEVS14= DEVICE_DEVS15= \\)B
1032 10950($\(SH\) <ldt.tr)B
EndPage
%%Page: ? 50
StartPage
Landscape
()(unix-end.mak)[(97/05/30)(10:56:34)](1)Gaudy
0 F
360 14470(#    Copyright \(C\) 1994, 1995, 1996, 1997 Aladdin Enterprises.  All rights reserved.)B
360 14310(# )B
360 14150(# This file is part of Aladdin Ghostscript.)B
360 13990(# )B
360 13830(# Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author)B
360 13670(# or distributor accepts any responsibility for the consequences of using it,)B
360 13510(# or for whether it serves any particular purpose or works at all, unless he)B
360 13350(# or she says so in writing.  Refer to the Aladdin Ghostscript Free Public)B
360 13190(# License \(the "License"\) for full details.)B
360 13030(# )B
360 12870(# Every copy of Aladdin Ghostscript must include a copy of the License,)B
360 12710(# normally in a plain ASCII text file named PUBLIC.  The License grants you)B
360 12550(# the right to copy, modify and redistribute Aladdin Ghostscript, but only)B
360 12390(# under certain conditions described in the License.  Among other things, the)B
360 12230(# License requires that the copyright notice and this notice be preserved on)B
360 12070(# all copies.)B
360 11750(# Partial makefile common to all Unix and Desqview/X configurations.)B
360 11430(# This is the very last part of the makefile for these configurations.)B
360 11270(# Since Unix make doesn't have an 'include' facility, we concatenate)B
360 11110(# the various parts of the makefile together by brute force \(in tar_cat\).)B
360 10790(# Define a rule for building profiling configurations.)B
360 10630(pg:)B
1032 10470(make GENOPT='' CFLAGS='-pg -O $\(GCFLAGS\) $\(XCFLAGS\)' LDFLAGS='$\(XLDFLAGS\) -pg' X)B
360 10310(LIBS='Xt SM ICE Xext X11' CCLEAF='$\(CCC\)')B
360 9990(# Define a rule for building debugging configurations.)B
360 9830(debug:)B
1032 9670(make GENOPT='-DDEBUG' CFLAGS='-g -O $\(GCFLAGS\) $\(XCFLAGS\)')B
360 9350(# The rule for gconfigv.h is here because it is shared between Unix and)B
360 9190(# DV/X environments.)B
360 9030(gconfigv.h: unix-end.mak $\(MAKEFILE\) $\(ECHOGS_XE\))B
1032 8870($\(EXP\)echogs -w gconfigv.h -x 23 define USE_ASM -x 2028 -q $\(USE_ASM\)-0 -x 29)B
1032 8710($\(EXP\)echogs -a gconfigv.h -x 23 define USE_FPU -x 2028 -q $\(FPU_TYPE\)-0 -x 29)B
1032 8550($\(EXP\)echogs -a gconfigv.h -x 23 define EXTEND_NAMES 0$\(EXTEND_NAMES\))B
360 8230(# The following rules are equivalent to what tar_cat does.)B
360 8070(# The rm -f is so that we don't overwrite a file that `make')B
360 7910(# may currently be reading from.)B
360 7750(GENERIC_MAK_LIST=$\(GS_MAK\) $\(LIB_MAK\) $\(INT_MAK\) $\(JPEG_MAK\) $\(LIBPNG_MAK\) $\(ZLIB_MAK\) $)B
360 7590(\(DEVS_MAK\))B
360 7430(UNIX_MAK_LIST=dvx-gcc.mak unixansi.mak unix-cc.mak unix-gcc.mak)B
360 7110(unix.mak: $\(UNIX_MAK_LIST\))B
360 6790(DVX_GCC_MAK=$\(VERSION_MAK\) dgc-head.mak dvx-head.mak $\(GENERIC_MAK_LIST\) dvx-tail.mak un)B
360 6630(ix-end.mak)B
360 6470(dvx-gcc.mak: $\(DVX_GCC_MAK\))B
1032 6310(rm -f dvx-gcc.mak)B
1032 6150($\(CAT\) $\(DVX_GCC_MAK\) >dvx-gcc.mak)B
360 5830(UNIXANSI_MAK=$\(VERSION_MAK\) ansihead.mak unixhead.mak $\(GENERIC_MAK_LIST\) unixtail.mak u)B
360 5670(nix-end.mak)B
360 5510(unixansi.mak: $\(UNIXANSI_MAK\))B
1032 5350(rm -f unixansi.mak)B
1032 5190($\(CAT\) $\(UNIXANSI_MAK\) >unixansi.mak)B
360 4870(UNIX_CC_MAK=$\(VERSION_MAK\) cc-head.mak unixhead.mak $\(GENERIC_MAK_LIST\) unixtail.mak uni)B
360 4710(x-end.mak)B
360 4550(unix-cc.mak: $\(UNIX_CC_MAK\))B
1032 4390(rm -f unix-cc.mak)B
8592 14470($\(CAT\) $\(UNIX_CC_MAK\) >unix-cc.mak)B
7920 14150(UNIX_GCC_MAK=$\(VERSION_MAK\) gcc-head.mak unixhead.mak $\(GENERIC_MAK_LIST\) unixtail.mak un)B
7920 13990(ix-end.mak)B
7920 13830(unix-gcc.mak: $\(UNIX_GCC_MAK\))B
8592 13670(rm -f unix-gcc.mak)B
8592 13510($\(CAT\) $\(UNIX_GCC_MAK\) >unix-gcc.mak)B
7920 13190(# Installation)B
7920 12870(TAGS:)B
8592 12710(etags -t *.c *.h)B
7920 12390(install: install-exec install-scripts install-data)B
7920 12070(# The sh -c in the rules below is required because Ultrix's implementation)B
7920 11910(# of sh -e terminates execution of a command if any error occurs, even if)B
7920 11750(# the command traps the error with ||.)B
7920 11430(install-exec: $\(GS\))B
8592 11270(-mkdir $\(bindir\))B
8592 11110($\(INSTALL_PROGRAM\) $\(GS\) $\(bindir\)/$\(GS\))B
7920 10790(install-scripts: gsnd)B
8592 10630(-mkdir $\(scriptdir\))B
8592 10470(sh -c 'for f in gsbj gsdj gsdj500 gslj gslp gsnd bdftops font2c \\)B
7920 10310(pdf2dsc pdf2ps printafm ps2ascii ps2epsi ps2pdf wftopfa ;\\)B
8592 10150(do if \( test -f $$f \); then $\(INSTALL_PROGRAM\) $$f $\(scriptdir\)/$$f; fi;\\)B
8592 9990(done')B
7920 9670(MAN1_PAGES=gs pdf2dsc pdf2ps ps2ascii ps2epsi ps2pdf)B
7920 9510(install-data: gs.1)B
8592 9350(-mkdir $\(mandir\))B
8592 9190(-mkdir $\(man1dir\))B
8592 9030(sh -c 'for f in $\(MAN1_PAGES\) ;\\)B
8592 8870(do if \( test -f $$f.1 \); then $\(INSTALL_DATA\) $$f.1 $\(man1dir\)/$$f.$\(man1ext\); fi)B
7920 8710(;\\)B
8592 8550(done')B
8592 8390(-mkdir $\(datadir\))B
8592 8230(-mkdir $\(gsdir\))B
8592 8070(-mkdir $\(gsdatadir\))B
8592 7910(sh -c 'for f in Fontmap \\)B
7920 7750(cbjc600.ppd cbjc800.ppd *.upp \\)B
7920 7590(gs_init.ps gs_btokn.ps gs_ccfnt.ps gs_cff.ps gs_cidfn.ps gs_cmap.ps \\)B
7920 7430(gs_diskf.ps gs_dpnxt.ps gs_dps1.ps gs_dps2.ps gs_epsf.ps \\)B
7920 7270(gs_fonts.ps gs_kanji.ps gs_lev2.ps \\)B
7920 7110(gs_pfile.ps gs_res.ps gs_setpd.ps gs_statd.ps \\)B
7920 6950(gs_ttf.ps gs_typ42.ps gs_type1.ps \\)B
7920 6790(gs_dbt_e.ps gs_iso_e.ps gs_ksb_e.ps gs_std_e.ps gs_sym_e.ps \\)B
7920 6630(acctest.ps align.ps bdftops.ps caption.ps decrypt.ps docie.ps \\)B
7920 6470(font2c.ps gslp.ps impath.ps landscap.ps level1.ps lines.ps \\)B
7920 6310(markhint.ps markpath.ps \\)B
7920 6150(packfile.ps pcharstr.ps pfbtogs.ps ppath.ps prfont.ps printafm.ps \\)B
7920 5990(ps2ai.ps ps2ascii.ps ps2epsi.ps ps2image.ps \\)B
7920 5830(quit.ps showchar.ps showpage.ps stcinfo.ps stcolor.ps \\)B
7920 5670(traceimg.ps traceop.ps type1enc.ps type1ops.ps uninfo.ps unprot.ps \\)B
7920 5510(viewcmyk.ps viewgif.ps viewjpeg.ps viewpcx.ps viewpbm.ps viewps2a.ps \\)B
7920 5350(winmaps.ps wftopfa.ps wrfont.ps zeroline.ps \\)B
7920 5190(gs_l2img.ps gs_pdf.ps \\)B
7920 5030(pdf2dsc.ps \\)B
7920 4870(pdf_base.ps pdf_draw.ps pdf_font.ps pdf_main.ps pdf_sec.ps pdf_2ps.ps \\)B
7920 4710(gs_mex_e.ps gs_mro_e.ps gs_pdf_e.ps gs_wan_e.ps \\)B
7920 4550(gs_pdfwr.ps ;\\)B
8592 4390(do if \( test -f $$f \); then $\(INSTALL_DATA\) $$f $\(gsdatadir\)/$$f; fi;\\)B
EndPage
%%Page: ? 51
StartPage
Landscape
()(unix-end.mak)[(97/05/30)(10:56:34)](2)Gaudy
0 F
1032 14470(done')B
1032 14310(-mkdir $\(docdir\))B
1032 14150(sh -c 'for f in COPYING NEWS PUBLIC README \\)B
360 13990(bug-form.txt c-style.txt current.txt devices.txt drivers.txt fonts.txt \\)B
360 13830(helpers.txt hershey.txt history1.txt history2.txt history3.txt humor.txt \\)B
360 13670(install.txt language.txt lib.txt make.txt new-user.txt \\)B
360 13510(ps2epsi.txt ps2pdf.txt psfiles.txt public.txt \\)B
360 13350(unix-lpr.txt use.txt xfonts.txt ;\\)B
1032 13190(do if \( test -f $$f \); then $\(INSTALL_DATA\) $$f $\(docdir\)/$$f; fi;\\)B
1032 13030(done')B
1032 12870(-mkdir $\(exdir\))B
1032 12710(for f in alphabet.ps chess.ps cheq.ps colorcir.ps escher.ps golfer.ps \\)B
360 12550(grayalph.ps snowflak.ps tiger.ps waterfal.ps ;\\)B
1032 12390(do $\(INSTALL_DATA\) $$f $\(exdir\)/$$f ;\\)B
1032 12230(done)B
EndPage
%%Trailer
EndEnscriptDoc
EnscriptJob restore
